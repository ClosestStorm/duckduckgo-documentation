Spice Template Summary	A										<p>There are several built-in Spice templates (both item and detail) which can be used for any Spice.  For more information see the following pages:</p><ul><li><a href="http://duck.co/duckduckhack/spice_templates_overview#template-groups">Template Groups</a>  Defines the main type of view for the instant answer</li><li><a href="http://duck.co/duckduckhack/spice_templates_overview#built-in-spice-templates">Built-In Spice Templates</a>  Different views and options for each templat</li><li><a href="http://duck.co/duckduckhack/spice_templates_overview#tile-variants">Tile Variants</a>  Used to modify width of the tiles</li></ul><p>There are several built-in Spice templates (both <code>item</code> and <code>detail</code>) which can be used for any Spice. Most of these templates however have similar or related elements and work well together (i.e. pairings of <code>item</code> and <code>detail</code> templates). As a result, we have defined various <strong>template groups</strong> which <strong>we highly recommend you use</strong> because using a particular group tells the Spice system which built-in templates will be used for your Spice. Template groups also have various features enabled by default which you can easily modify using the <code>options</code> block.</p><p>For example, the <code>media</code> <strong>template group</strong> works well when your Spice is related to &quot;thing&quot; (e.g., recipe, tv show, movie, game) which has an image to display, a name, and a rating. It&#39;s likely that this template group will work for other types of results and we&#39;re here to help you determine which template group and features work best for your Spice instant answer.	http://duck.co/duckduckhack/spice_templates_overview#spice-template-summary
Spice Index	A										<ul><li><a href="http://duck.co/duckduckhack/spice_templates_overview#template-groups"><strong>Template Groups</strong></a><ul><li><a href="http://duck.co/duckduckhack/spice_templates_overview#default-template-options">Default Template Options</a></li><li><a href="http://duck.co/duckduckhack/spice_templates_overview#text">text</a></li><li><a href="http://duck.co/duckduckhack/spice_templates_overview#info">info</a></li><li><a href="http://duck.co/duckduckhack/spice_templates_overview#products">products</a></li><li><a href="http://duck.co/duckduckhack/spice_templates_overview#media">media</a></li><li><a href="http://duck.co/duckduckhack/spice_templates_overview#icon">icon</a></li><li><a href="http://duck.co/duckduckhack/spice_templates_overview#base">base</a></li></ul></li><li><a href="http://duck.co/duckduckhack/spice_templates_overview#built-in-spice-templates"><strong>Built-In Spice Templates</strong></a><ul><li><a href="http://duck.co/duckduckhack/spice_templates_overview#record">record</a></li><li><a href="http://duck.co/duckduckhack/spice_templates_overview#iconitem">icon_item</a></li><li><a href="http://duck.co/duckduckhack/spice_templates_overview#textitem">text_item</a></li><li><a href="http://duck.co/duckduckhack/spice_templates_overview#textdetail">text_detail</a></li><li><a href="http://duck.co/duckduckhack/spice_templates_overview#basicimageitem">basic_image_item</a></li><li><a href="http://duck.co/duckduckhack/spice_templates_overview#productsitem">products_item</a></li><li><a href="http://duck.co/duckduckhack/spice_templates_overview#productsdetail">products_detail</a></li><li><a href="http://duck.co/duckduckhack/spice_templates_overview#productsitemdetail">products_item_detail</a></li><li><a href="http://duck.co/duckduckhack/spice_templates_overview#basicinfodetail">basic_info_detail</a></li><li><a href="http://duck.co/duckduckhack/spice_templates_overview#baseitem">base_item</a></li><li><a href="http://duck.co/duckduckhack/spice_templates_overview#basedetail">base_detail</a></li></ul></li><li><a href="http://duck.co/duckduckhack/spice_templates_overview#tile-variants"><strong>Tile Variants</strong></a><ul><li><a href="http://duck.co/duckduckhack/spice_templates_overview#poster">poster</a></li><li><a href="http://duck.co/duckduckhack/spice_templates_overview#narrow">narrow</a></li><li><a href="http://duck.co/duckduckhack/spice_templates_overview#wide">wide</a></li><li><a href="http://duck.co/duckduckhack/spice_templates_overview#xwide">xwide</a></li><li><a href="http://duck.co/duckduckhack/spice_templates_overview#video">video</a></li></ul></li></ul><!--[**Detail Variants**](#tile-variants)    - [light](#light)-->	http://duck.co/duckduckhack/spice_templates_overview#index
Spice Template Groups	A										<p>There are several template groups to choose from:</p><ul><li><a href="http://duck.co/duckduckhack/spice_templates_overview#text">text</a></li><li><a href="http://duck.co/duckduckhack/spice_templates_overview#info">info</a></li><li><a href="http://duck.co/duckduckhack/spice_templates_overview#products">products</a></li><li><a href="http://duck.co/duckduckhack/spice_templates_overview#media">media</a></li><li><a href="http://duck.co/duckduckhack/spice_templates_overview#icon">icon</a></li><li><a href="http://duck.co/duckduckhack/spice_templates_overview#base">base</a>	http://duck.co/duckduckhack/spice_templates_overview#template-groups
Spice text	A										<p>Best used for simple, text-only results. This template offers a title, description and footer.</p><h3><a class="anchor" name="usage"></a>Usage</h3><p><strong>Note:</strong> Before using this template please read the <a href="spice_displaying">Spice Displaying</a> document to understand the proper usage of the <code>templates</code> block and the <code>options</code> block. Understanding these is crucial to using Spice templates properly and effectively.</p><hr><p>Using this template requires that that you set the <code>group</code> property of the <code>templates</code> block like so:</p><pre><code class="language-javascript">templates: {    group: &#39;text&#39;}</code></pre>	http://duck.co/duckduckhack/spice_templates_overview#text
Spice info	A										<p>Best used for results with more detailed information including an image, title, and a description or arbitrary content. This template also allows you to provide an auxiliary information box (to the right) and a &quot;More At&quot; link.</p><h3><a class="anchor" name="usage"></a>Usage</h3><p><strong>Note:</strong> Before using this template please read the <a href="spice_displaying">Spice Displaying</a> document to understand the proper usage of the <code>templates</code> block and the <code>options</code> block. Understanding these is crucial to using Spice templates properly and effectively.</p><hr><p>Using this template requires that that you set the <code>group</code> property of the <code>templates</code> block like so:</p><pre><code class="language-javascript">templates: {    group: &#39;info&#39;}</code></pre><p>When you specify this template group, it is equivalent to setting the properties of the <code>templates</code> block as follows:</p><pre><code class="language-javascript">// setting the template group to: &#39;info&#39;// does this for you!templates: {    item: &#39;basic_image_item&#39;,    detail: &#39;basic_info_detail&#39;,    options: {        moreAt: true,        aux: false    }}</code></pre><h4><a class="anchor" name="default-templates-used-in-the-info-group"></a>Default templates used in the &#39;info&#39; group:</h4><ul><li><a href="http://duck.co/duckduckhack/spice_templates_overview#basicimageitem">basic_image_item</a></li><li><a href="http://duck.co/duckduckhack/spice_templates_overview#basicinfodetail">basic_info_detail</a></li></ul><p>In order for these templates to display correctly, you need to ensure that each of the template&#39;s features you are using, are defined in your <code>data</code> object. Generally these are set by your <code>normalize</code> function if they do not already exist in your <code>api_result</code>.</p><h3><a class="anchor" name="example-uses-of-the-info-template-group"></a>Example uses of the &#39;info&#39; template group</h3><ul><li><p><a href="https://duckduckgo.com/?q=green+day+band">&quot;green day band&quot;</a> (<a href="https://github.com/duckduckgo/zeroclickinfo-spice/blob/master/share/spice/lastfm/artist/lastfm_artist.js">code</a>)<img alt="DuckDuckGo search for &quot;green day band&quot;" src="https://raw.githubusercontent.com/duckduckgo/duckduckgo-documentation/master/duckduckhack/assets/template_groups/green_day_band.png"></p></li><li><p><a href="https://duckduckgo.com/?q=bitcoin+price">&quot;bitcoin price&quot;</a> (<a href="https://github.com/duckduckgo/zeroclickinfo-spice/blob/master/share/spice/bitcoin/bitcoin.js">code</a>)<img alt="DuckDuckGo search for &quot;bitcoin price&quot;" src="https://raw.githubusercontent.com/duckduckgo/duckduckgo-documentation/master/duckduckhack/assets/template_groups/bitcoin_price.png"></p></li><li><p><a href="https://duckduckgo.com/?q=gravatar+matt">&quot;gravatar matt&quot;</a> (<a href="https://github.com/duckduckgo/zeroclickinfo-spice/blob/master/share/spice/gravatar/gravatar.js">code</a>)<img alt="DuckDuckGo search for &quot;gravatar matt&quot;" src="https://raw.githubusercontent.com/duckduckgo/duckduckgo-documentation/master/duckduckhack/assets/template_groups/gravatar_matt.png">	http://duck.co/duckduckhack/spice_templates_overview#info
Spice products	A										<p>Best used to showcase products with an image, rating, review, brand and/or price. To give you a better idea, this template was initially created for the Amazon Spice. An optional <code>action</code> sub-template can be used to provide a compelling call-to-action (i.e. button).</p><h3><a class="anchor" name="usage"></a>Usage</h3><p><strong>Note:</strong> Before using this template please read the <a href="spice_displaying">Spice Displaying</a> document to understand the proper usage of the <code>templates</code> block and the <code>options</code> block. Understanding these is crucial to using Spice templates properly and effectively.</p><hr><p>Using this template requires that that you set the <code>group</code> property of the <code>templates</code> block like so:</p><pre><code class="language-javascript">templates: {    group: &#39;products&#39;}</code></pre><p>When you specify this template group, it is equivalent to setting the properties of the <code>templates</code> block as follows:</p><pre><code class="language-javascript">// setting the template group to: &#39;products&#39;// does this for you!templates: {    item: &#39;products_item&#39;,    detail: &#39;products_detail&#39;,    item_detail: &#39;products_item_detail&#39;,    wrap_detail: &#39;base_detail&#39;,    options: {        rating: true,        price: true,        brand: true,        priceAndBrand: true    }}</code></pre><h4><a class="anchor" name="default-templates-used-in-the-products-group"></a>Default templates used in the &#39;products&#39; group:</h4><ul><li><a href="http://duck.co/duckduckhack/spice_templates_overview#productsitem">products_item</a></li><li><a href="http://duck.co/duckduckhack/spice_templates_overview#productsdetail">products_detail</a></li><li><a href="http://duck.co/duckduckhack/spice_templates_overview#productsitemdetail">products_item_detail</a></li><li><a href="http://duck.co/duckduckhack/spice_templates_overview#basedetail">base_detail</a></li></ul><p>In order for these templates to display correctly, you need to ensure that each of the template&#39;s features you are using, are defined in your <code>data</code> object. Generally these are set by your <code>normalize</code> function if they do not already exist in your <code>api_result</code>.</p><h3><a class="anchor" name="example-uses-of-the-products-template-group"></a>Example uses of the &#39;products&#39; template group</h3><ul><li><p><a href="https://duckduckgo.com/?q=buy+batman+lego">&quot;buy batman lego&quot;</a> (<a href="https://github.com/duckduckgo/zeroclickinfo-spice/blob/master/share/spice/amazon/amazon.js">code</a>)<img alt="DuckDuckGo search for &quot;buy batman lego&quot;" src="https://raw.githubusercontent.com/duckduckgo/duckduckgo-documentation/master/duckduckhack/assets/template_groups/buy_batman_lego.png"></p></li><li><p><a href="https://duckduckgo.com/?q=flight+tracking+apps">&quot;flight tracking apps&quot;</a> (<a href="https://github.com/duckduckgo/zeroclickinfo-spice/blob/master/share/spice/quixey/quixey.js">code</a>)<img alt="DuckDuckGo search for &quot;flight tracking apps&quot;" src="https://raw.githubusercontent.com/duckduckgo/duckduckgo-documentation/master/duckduckhack/assets/template_groups/flight_tracking_apps.png"></p></li><li><p><a href="https://duckduckgo.com/?q=octopart%201770019-2">&quot;octopart 1770019-2&quot;</a> (<a href="https://github.com/duckduckgo/zeroclickinfo-spice/blob/master/share/spice/octopart/octopart.js">code</a>)<img alt="DuckDuckGo search for &quot;octopart 1770019-2&quot;" src="https://raw.githubusercontent.com/duckduckgo/duckduckgo-documentation/master/duckduckhack/assets/template_groups/octopart_1770019-2.png">	http://duck.co/duckduckhack/spice_templates_overview#products
Spice media	A										<p>Best used for simple results that have a picture (essentially a simplified version of the <strong>products</strong> group). This template group provides a basic <code>item</code> template, which includes an image, title, and description. It also uses the same <code>detail</code> template as the <strong>products</strong> group.</p><h3><a class="anchor" name="usage"></a>Usage</h3><p><strong>Note:</strong> Before using this template please read the <a href="spice_displaying">Spice Displaying</a> document to understand the proper usage of the <code>templates</code> block and the <code>options</code> block. Understanding these is crucial to using Spice templates properly and effectively.</p><hr><p>Using this template requires that that you set the <code>group</code> property of the <code>templates</code> block like so:</p><pre><code class="language-javascript">templates: {    group: &#39;media&#39;}</code></pre><p>When you specify this template group, it is equivalent to setting the properties of the <code>templates</code> block as follows:</p><pre><code class="language-javascript">// setting the template group to: &#39;media&#39;// does this for you!templates: {    item: &#39;basic_image_item&#39;,    detail: &#39;products_detail&#39;,    item_detail: &#39;products_item_detail&#39;,    wrap_detail: &#39;base_detail&#39;,    options: {        price: false,        brand: false,        priceAndBrand: false,        rating: false,        ratingText: true    }}</code></pre><h4><a class="anchor" name="default-templates-used-in-the-media-group"></a>Default templates used in the &#39;media&#39; group:</h4><ul><li><a href="http://duck.co/duckduckhack/spice_templates_overview#basicimageitem">basic_image_item</a></li><li><a href="http://duck.co/duckduckhack/spice_templates_overview#productsdetail">products_detail</a></li><li><a href="http://duck.co/duckduckhack/spice_templates_overview#productsitemdetail">products_item_detail</a></li><li><a href="http://duck.co/duckduckhack/spice_templates_overview#basedetail">base_detail</a></li></ul><p>In order for these templates to display correctly, you need to ensure that each of the template&#39;s features you are using, are defined in your <code>data</code> object. Generally these are set by your <code>normalize</code> function if they do not already exist in your <code>api_result</code>.</p><h3><a class="anchor" name="example-uses-of-the-media-template-group"></a>Example uses of the &#39;media&#39; template group</h3><ul><li><p><a href="https://duckduckgo.com/?q=lord+of+the+rings+movie">&quot;lord of the rings movie&quot;</a> (<a href="https://github.com/duckduckgo/zeroclickinfo-spice/blob/master/share/spice/movie/movie.js">code</a>)<img alt="DuckDuckGo search for &quot;lord of the rings movie&quot;" src="https://raw.githubusercontent.com/duckduckgo/duckduckgo-documentation/master/duckduckhack/assets/template_groups/lord_of_the_rings_movie.png"></p></li><li><p><a href="https://duckduckgo.com/?q=movies">&quot;movies&quot;</a> (<a href="https://github.com/duckduckgo/zeroclickinfo-spice/blob/master/share/spice/in_theaters/in_theaters.js">code</a>)<img alt="DuckDuckGo search for &quot;movies&quot;" src="https://raw.githubusercontent.com/duckduckgo/duckduckgo-documentation/master/duckduckhack/assets/template_groups/movies.png"></p></li><li><p><a href="https://duckduckgo.com/?q=BBC+schedule">&quot;BBC schedule&quot;</a> (<a href="https://github.com/duckduckgo/zeroclickinfo-spice/blob/master/share/spice/bbc/bbc.js">code</a>)<img alt="DuckDuckGo search for &quot;BBC schedule&quot;" src="https://raw.githubusercontent.com/duckduckgo/duckduckgo-documentation/master/duckduckhack/assets/template_groups/bbc_schedule.png">	http://duck.co/duckduckhack/spice_templates_overview#media
Spice icon	A										<p>This template is similar to the <strong>text</strong> group, however, it allows the use of a small icon image in the tile view.</p><h3><a class="anchor" name="usage"></a>Usage</h3><p><strong>Note:</strong> Before using this template please read the <a href="spice_displaying">Spice Displaying</a> document to understand the proper usage of the <code>templates</code> block and the <code>options</code> block. Understanding these is crucial to using Spice templates properly and effectively.</p><hr><p>Using this template requires that that you set the <code>group</code> property of the <code>templates</code> block like so:</p><pre><code class="language-javascript">templates: {    group: &#39;icon&#39;}</code></pre><p>When you specify this template group, it is equivalent to setting the properties of the <code>templates</code> block as follows:</p><pre><code class="language-javascript">// setting the template group to: &#39;icon&#39;// does this for you!templates: {    item: &#39;icon_item&#39;,    detail: &#39;products_detail&#39;,    item_detail: &#39;products_item_detail&#39;}</code></pre><h4><a class="anchor" name="default-templates-used-in-the-icon-group"></a>Default templates used in the &#39;icon&#39; group:</h4><ul><li><a href="http://duck.co/duckduckhack/spice_templates_overview#iconitem">icon_item</a></li><li><a href="http://duck.co/duckduckhack/spice_templates_overview#productsdetail">products_detail</a></li><li><a href="http://duck.co/duckduckhack/spice_templates_overview#productsitemdetail">products_item_detail</a></li></ul><p>In order for these templates to display correctly, you need to ensure that each of the template&#39;s <strong>features</strong>, which you are using, are defined in your <code>data</code> object. Generally these are set by your <code>normalize</code> function if they do not already exist in your <code>api_result</code>.</p><h3><a class="anchor" name="example-uses-of-the-icon-template-group"></a>Example uses of the &#39;icon&#39; template group</h3><ul><li><a href="https://duckduckgo.com/?q=alternative+to+photoshop">&quot;alternative to photoshop&quot;</a> (<a href="https://github.com/duckduckgo/zeroclickinfo-spice/blob/master/share/spice/alternative_to/alternative_to.js">code</a>)<img alt="DuckDuckGo search for &quot;alternative to photoshop&quot;" src="https://raw.githubusercontent.com/duckduckgo/duckduckgo-documentation/master/duckduckhack/assets/template_groups/alternative_to_photoshop.png">	http://duck.co/duckduckhack/spice_templates_overview#icon
Spice base	A										<p>This is the most rudimentary template group. It provides a minimal container template which is intended to be used when your Spice requires highly customized mark-up. <strong>Using this template should be a last resort if other templates don&#39;t suffice.</strong></p><h3><a class="anchor" name="usage"></a>Usage</h3><p><strong>Note:</strong> Before using this template please read the <a href="spice_displaying">Spice Displaying</a> document to understand the proper usage of the <code>templates</code> block and the <code>options</code> block. Understanding these is crucial to using Spice templates properly and effectively.</p><hr><p>Using this template requires that that you set the <code>group</code> property of the <code>templates</code> block like so:</p><pre><code class="language-javascript">templates: {    group: &#39;base&#39;}</code></pre><p>When you specify this template group, it is equivalent to setting the properties of the <code>templates</code> block as follows:</p><pre><code class="language-javascript">// setting the template group to: &#39;base&#39;// does this for you!templates: {    item: &#39;base_item&#39;,    detail: &#39;base_detail&#39;,    options: {        price: false,        brand: false,        priceAndBrand: false,        rating: false,        ratingText: false,        moreAt: false    }}</code></pre><h4><a class="anchor" name="default-templates-used-in-the-base-group"></a>Default templates used in the &#39;base&#39; group:</h4><ul><li><a href="http://duck.co/duckduckhack/spice_templates_overview#baseitem">base_item</a></li><li><a href="http://duck.co/duckduckhack/spice_templates_overview#basedetail">base_detail</a></li></ul><p>In order for these templates to display correctly, you need to ensure that each of the template&#39;s features you are using, are defined in your <code>data</code> object. Generally these are set by your <code>normalize</code> function if they do not already exist in your <code>api_result</code>.</p><h3><a class="anchor" name="example-uses-of-the-base-template-group"></a>Example uses of the &#39;base&#39; template group</h3><ul><li><p><a href="https://duckduckgo.com/?q=gandhi+quote">&quot;gandhi quote&quot;</a> (<a href="https://github.com/duckduckgo/zeroclickinfo-spice/blob/master/share/spice/brainy_quote/brainy_quote.js">code</a>)<img alt="DuckDuckGo search for &quot;gandhi quote&quot;" src="https://raw.githubusercontent.com/duckduckgo/duckduckgo-documentation/master/duckduckhack/assets/template_groups/gandhi_quote.png"></p></li><li><p><a href="https://duckduckgo.com/?q=cpan+App::cpanminus">&quot;cpan App::cpanminus&quot;</a> (<a href="https://github.com/duckduckgo/zeroclickinfo-spice/blob/master/share/spice/meta_cpan/meta_cpan.js">code</a>)<img alt="DuckDuckGo search for &quot;cpan App::cpanminus&quot;" src="https://raw.githubusercontent.com/duckduckgo/duckduckgo-documentation/master/duckduckhack/assets/template_groups/cpan_app_cpanminus.png"></p></li><li><p><a href="https://duckduckgo.com/?q=define+indelible">&quot;define indelible&quot;</a> (<a href="https://github.com/duckduckgo/zeroclickinfo-spice/blob/master/share/spice/dictionary/definition/dictionary_definition.js">code</a>)<img alt="DuckDuckGo search for &quot;define indelible&quot;" src="https://raw.githubusercontent.com/duckduckgo/duckduckgo-documentation/master/duckduckhack/assets/template_groups/define_indelible.png"></p></li></ul><hr><h1><a class="anchor" name="builtin-spice-templates"></a>Built-In Spice Templates</h1><p>The list of built-in Spice templates includes:</p><ul><li><a href="http://duck.co/duckduckhack/spice_templates_overview#record">record</a></li><li><a href="http://duck.co/duckduckhack/spice_templates_overview#iconitem">icon_item</a></li><li><a href="http://duck.co/duckduckhack/spice_templates_overview#textitem">text_item</a></li><li><a href="http://duck.co/duckduckhack/spice_templates_overview#textdetail">text_detail</a></li><li><a href="http://duck.co/duckduckhack/spice_templates_overview#basicimageitem">basic_image_item</a></li><li><a href="http://duck.co/duckduckhack/spice_templates_overview#productsitem">products_item</a></li><li><a href="http://duck.co/duckduckhack/spice_templates_overview#productsdetail">products_detail</a></li><li><a href="http://duck.co/duckduckhack/spice_templates_overview#productsitemdetail">products_item_detail</a></li><li><a href="http://duck.co/duckduckhack/spice_templates_overview#basicinfodetail">basic_info_detail</a></li><li><a href="http://duck.co/duckduckhack/spice_templates_overview#baseitem">base_item</a></li><li><a href="http://duck.co/duckduckhack/spice_templates_overview#basedetail">base_detail</a>	http://duck.co/duckduckhack/spice_templates_overview#base
Spice record	A										<p>A special template that is ideal for key-value data. It generates a <code>&lt;table&gt;</code> where each row contains a key and value.</p><p><strong>**Note:</strong> This template <strong>requires</strong> that your <code>data</code> object has a <code>record_data</code> property, which should contain the key-value data to be displayed. All the properties of the <code>record_data</code> object will be used as the keys for the table. However, if you want to specify exactly which properties of the <code>record_data</code> object should be displayed, an optional <code>record_keys</code> property can be defined. It should be an array of <em>strings</em>, indicating the names of the <strong>keys</strong> to be included in the <code>&lt;table&gt;</code>.  An optional property called <code>rowHighlight</code> can be added to <code>options</code> to turn on alternating row highlighting. </p><p>For example this is how your Spice code should look when using the <strong>record</strong> template:</p><pre><code class="language-javascript">data: {     record_data: {        name: &#39;Bob&#39;,        phone: &#39;123-456-7890&#39;,        email: &#39;bob@bobstheman.com&#39;,        address: &#39;123 First Street&#39;    }},normalize: function(item){    return {        record_keys: [&quot;name&quot;, &quot;phone&quot;, &quot;email&quot;]    }},templates: {    group: &#39;base&#39;,    options: {        content: &#39;record&#39;,        /* optional - highlight alternate rows */        rowHighlight: true    }}</code></pre><h3><a class="anchor" name="available-features"></a>Available Features</h3><p><em>none</em></p><h3><a class="anchor" name="template-diagram"></a>Template Diagram</h3><p><img alt="record template" src="https://raw.githubusercontent.com/duckduckgo/duckduckgo-documentation/master/duckduckhack/assets/diagrams/record.png"></p><h3><a class="anchor" name="template-groups-using-the-quotrecordquot-template"></a>Template groups using the &quot;record&quot; template:</h3><ul><li><em>none by default</em></li></ul><h3><a class="anchor" name="example-usage-of-the-quotrecordquot-template"></a>Example usage of the &quot;record&quot; template:</h3><ul><li><a href="https://github.com/duckduckgo/zeroclickinfo-spice/blob/master/share/spice/urban_dictionary/urban_dictionary.js">UrbanDictionary</a></li><li><a href="https://github.com/duckduckgo/zeroclickinfo-spice/blob/master/share/spice/meta_cpan/meta_cpan.js">MetaCpan</a></li><li><a href="https://github.com/duckduckgo/zeroclickinfo-spice/blob/master/share/spice/code_search/code_search.js">CodeSearch</a>	http://duck.co/duckduckhack/spice_templates_overview#record
Spice icon_item	A										<h3><a class="anchor" name="available-features"></a>Available Features</h3><ul><li>icon</li><li>title</li><li>sub-title [optional]</li><li>description</li><li>footer [optional] <em>sub-template</em></li></ul><h3><a class="anchor" name="template-diagram"></a>Template Diagram</h3><p><img alt="icon template" src="https://raw.githubusercontent.com/duckduckgo/duckduckgo-documentation/master/duckduckhack/assets/diagrams/icon.png"></p><h3><a class="anchor" name="template-groups-using-the-quoticonitemquot-template"></a>Template groups using the &quot;icon_item&quot; template:</h3><ul><li><a href="http://duck.co/duckduckhack/spice_templates_overview#icon">icon</a></li></ul><h3><a class="anchor" name="example-usage-of-the-quoticonquot-template"></a>Example usage of the &quot;icon&quot; template:</h3><ul><li><a href="https://github.com/duckduckgo/zeroclickinfo-spice/blob/master/share/spice/alternative_to/alternative_to.js">AlternativeTo</a>	http://duck.co/duckduckhack/spice_templates_overview#icon_item
Spice text_item	A										<h3><a class="anchor" name="available-features"></a>Available Features</h3><ul><li>url [optional]</li><li>title</li><li>subtitle</li><li>description</li><li>footer [optional] <em>sub-template</em></li></ul><h3><a class="anchor" name="template-diagram"></a>Template Diagram</h3><p><img alt="text_item template " src="https://raw.githubusercontent.com/duckduckgo/duckduckgo-documentation/master/duckduckhack/assets/diagrams/text_item.png"></p><h3><a class="anchor" name="template-groups-using-the-quottextitemquot-template"></a>Template groups using the &quot;text_item&quot; template:</h3><ul><li><a href="http://duck.co/duckduckhack/spice_templates_overview#text">text</a></li></ul><h3><a class="anchor" name="example-usage-of-the-quottextitemquot-template"></a>Example usage of the &quot;text_item&quot; template:</h3><ul><li><a href="https://github.com/duckduckgo/zeroclickinfo-spice/blob/master/share/spice/github/github.js">GitHub</a></li><li><a href="https://github.com/duckduckgo/zeroclickinfo-spice/blob/master/share/spice/ruby_gems/ruby_gems.js">RubyGems</a></li><li><a href="https://github.com/duckduckgo/zeroclickinfo-spice/blob/master/share/spice/reddit_search/reddit_search.js">RedditSearch</a>	http://duck.co/duckduckhack/spice_templates_overview#text_item
Spice text_detail	A										<h3><a class="anchor" name="available-features"></a>Available Features</h3><ul><li>title_content [optional] <em>sub-template</em></li><li>title [optional, replaces <code>title_content</code>]</li><li>content [optional] <em>sub-template</em></li></ul><h3><a class="anchor" name="template-diagram"></a>Template Diagram</h3><p><img alt="text_detail template" src="https://raw.githubusercontent.com/duckduckgo/duckduckgo-documentation/master/duckduckhack/assets/diagrams/text_detail.png"></p><h3><a class="anchor" name="template-groups-using-the-quottextdetailquot-template"></a>Template groups using the &quot;text_detail&quot; template:</h3><ul><li><a href="http://duck.co/duckduckhack/spice_templates_overview#text">text</a></li></ul><h3><a class="anchor" name="example-usage-of-the-quottextdetailquot-template"></a>Example usage of the &quot;text_detail&quot; template:</h3><ul><li><a href="https://github.com/duckduckgo/zeroclickinfo-spice/blob/master/share/spice/rhymes/rhymes.js">Rhymes</a></li><li><a href="https://github.com/duckduckgo/zeroclickinfo-spice/blob/master/share/spice/thesaurus/thesaurus.js">Thesaurus</a>	http://duck.co/duckduckhack/spice_templates_overview#text_detail
Spice basic_image_item	A										<h3><a class="anchor" name="available-features"></a>Available Features</h3><ul><li>link [optional]</li><li>image</li><li>title</li><li>description [optional]</li><li>rating [optional]</li><li>ratingText [optional]</li></ul><h3><a class="anchor" name="template-diagram"></a>Template Diagram</h3><p><img alt="basic_image_item template" src="https://raw.githubusercontent.com/duckduckgo/duckduckgo-documentation/master/duckduckhack/assets/diagrams/basic_image_item.png"></p><h3><a class="anchor" name="template-groups-using-the-quotbasicimageitemquot-template"></a>Template groups using the &quot;basic_image_item&quot; template:</h3><ul><li><a href="http://duck.co/duckduckhack/spice_templates_overview#info">info</a></li><li><a href="http://duck.co/duckduckhack/spice_templates_overview#media">media</a></li></ul><h3><a class="anchor" name="example-usage-of-the-quotbasicimageitemquot-template"></a>Example usage of the &quot;basic_image_item&quot; template:</h3><ul><li><a href="https://github.com/duckduckgo/zeroclickinfo-spice/blob/master/share/spice/movie/movie.js">Movie</a></li><li><a href="https://github.com/duckduckgo/zeroclickinfo-spice/blob/master/share/spice/bbc/bbc.js">BBC</a>	http://duck.co/duckduckhack/spice_templates_overview#basic_image_item
Spice products_item	A										<h3><a class="anchor" name="available-features"></a>Available Features</h3><ul><li>url [optional]</li><li>img</li><li>title</li><li>price</li><li>brand [optional]</li><li>rating [optional]</li><li>reviewCount [optional]</li></ul><h3><a class="anchor" name="template-diagram"></a>Template Diagram</h3><p><img alt="products_item template" src="https://raw.githubusercontent.com/duckduckgo/duckduckgo-documentation/master/duckduckhack/assets/diagrams/products_item.png"></p><h3><a class="anchor" name="template-groups-using-the-quotproductsitemquot-template"></a>Template groups using the &quot;products_item&quot; template:</h3><ul><li><a href="http://duck.co/duckduckhack/spice_templates_overview#products">products</a></li></ul><h3><a class="anchor" name="example-usage-of-the-quotproductsitemquot-template"></a>Example usage of the &quot;products_item&quot; template:</h3><ul><li><a href="https://github.com/duckduckgo/zeroclickinfo-spice/blob/master/share/spice/amazon/amazon.js">Amazon</a></li><li><a href="https://github.com/duckduckgo/zeroclickinfo-spice/blob/master/share/spice/coupon_mountain/coupon_mountain.js">CouponMountain</a></li><li><a href="https://github.com/duckduckgo/zeroclickinfo-spice/blob/master/share/spice/octopart/octopart.js">Octopart</a>	http://duck.co/duckduckhack/spice_templates_overview#products_item
Spice products_detail	A										<h3><a class="anchor" name="available-features"></a>Available Features</h3><ul><li>img [optional]</li><li>url</li><li>heading</li><li>price [optional]</li><li>priceAndBrand [optional]</li><li>brand [optional]</li><li>rating [optional]</li><li>reviewCount [optional]</li><li>abstract</li><li>action [optional] <em>sub-template</em></li></ul><h3><a class="anchor" name="template-diagram"></a>Template Diagram</h3><p><img alt="products_detail template" src="https://raw.githubusercontent.com/duckduckgo/duckduckgo-documentation/master/duckduckhack/assets/diagrams/products_detail.png"></p><h3><a class="anchor" name="template-groups-using-the-quotproductsdetailquot-template"></a>Template groups using the &quot;products_detail&quot; template:</h3><ul><li><a href="http://duck.co/duckduckhack/spice_templates_overview#products">products</a></li><li><a href="http://duck.co/duckduckhack/spice_templates_overview#media">media</a></li><li><a href="http://duck.co/duckduckhack/spice_templates_overview#icon">icon</a></li></ul><h3><a class="anchor" name="example-usage-of-the-quotproductsdetailquot-template"></a>Example usage of the &quot;products_detail&quot; template:</h3><ul><li><a href="https://github.com/duckduckgo/zeroclickinfo-spice/blob/master/share/spice/amazon/amazon.js">Amazon</a></li><li><a href="https://github.com/duckduckgo/zeroclickinfo-spice/blob/master/share/spice/coupon_mountain/coupon_mountain.js">CouponMountain</a></li><li><a href="https://github.com/duckduckgo/zeroclickinfo-spice/blob/master/share/spice/octopart/octopart.js">Octopart</a>	http://duck.co/duckduckhack/spice_templates_overview#products_detail
Spice products_item_detail	A										<h3><a class="anchor" name="available-features"></a>Available Features</h3><ul><li>img_m [optional, replaces <code>img</code>]</li><li>img</li><li>url</li><li>price [optional] </li><li>brand [optional]</li><li>rating [optional]</li><li>abstract</li><li>action [optional] <em>sub-template</em></li></ul><h3><a class="anchor" name="template-diagram"></a>Template Diagram</h3><p><img alt="products_item_detail template" src="https://raw.githubusercontent.com/duckduckgo/duckduckgo-documentation/master/duckduckhack/assets/diagrams/products_item_detail.png"></p><h3><a class="anchor" name="template-groups-using-the-quotproductsitemdetailquot-template"></a>Template groups using the &quot;products_item_detail&quot; template:</h3><ul><li><a href="http://duck.co/duckduckhack/spice_templates_overview#products">products</a></li><li><a href="http://duck.co/duckduckhack/spice_templates_overview#media">media</a></li><li><a href="http://duck.co/duckduckhack/spice_templates_overview#icon">icon</a></li></ul><h3><a class="anchor" name="example-usage-of-the-quotproductsitemdetailquot-template"></a>Example usage of the &quot;products_item_detail&quot; template:</h3><ul><li><a href="https://github.com/duckduckgo/zeroclickinfo-spice/blob/master/share/spice/bbc/bbc.js">BBC</a></li><li><a href="https://github.com/duckduckgo/zeroclickinfo-spice/blob/master/share/spice/movie/movie.js">Movie</a></li><li><a href="https://github.com/duckduckgo/zeroclickinfo-spice/blob/master/share/spice/coupon_mountain/coupon_mountain.js">CouponMountain</a>	http://duck.co/duckduckhack/spice_templates_overview#products_item_detail
Spice basic_info_detail	A										<h3><a class="anchor" name="available-features"></a>Available Features</h3><ul><li>image [optional]</li><li>title [optional]</li><li>description</li><li>content [optional, replaces <code>description</code>] <em>sub-template</em></li><li>aux [optional] <em>sub-template</em></li></ul><h3><a class="anchor" name="template-diagram"></a>Template Diagram</h3><p><img alt="basic_info_detail template" src="https://raw.githubusercontent.com/duckduckgo/duckduckgo-documentation/master/duckduckhack/assets/diagrams/basic_info_detail.png"></p><h3><a class="anchor" name="example-with-auxiliary-information-box"></a>Example with Auxiliary Information Box:</h3><p><img alt="basic_info_detail_w_aux template" src="https://raw.githubusercontent.com/duckduckgo/duckduckgo-documentation/master/duckduckhack/assets/diagrams/basic_info_detail_w_aux.png"></p><h3><a class="anchor" name="template-groups-using-the-quotbasicinfodetailquot-template"></a>Template groups using the &quot;basic_info_detail&quot; template:</h3><ul><li><a href="http://duck.co/duckduckhack/spice_templates_overview#info">info</a></li></ul><h3><a class="anchor" name="example-usage-of-the-quotbasicinfodetailquot-template"></a>Example usage of the &quot;basic_info_detail&quot; template:</h3><ul><li><a href="https://github.com/duckduckgo/zeroclickinfo-spice/blob/master/share/spice/bitcoin/bitcoin.js">Bitcoin</a></li><li><a href="https://github.com/duckduckgo/zeroclickinfo-spice/blob/master/share/spice/gravatar/gravatar.js">Gravatar</a></li><li><a href="https://github.com/duckduckgo/zeroclickinfo-spice/blob/master/share/spice/drinks/drinks.js">Drinks</a>	http://duck.co/duckduckhack/spice_templates_overview#basic_info_detail
Spice base_item	A										<h3><a class="anchor" name="available-features"></a>Available Features</h3><ul><li>url [optional]</li><li>content <em>sub-template</em></li></ul><h3><a class="anchor" name="template-diagram"></a>Template Diagram</h3><p><img alt="base_item template" src="https://raw.githubusercontent.com/duckduckgo/duckduckgo-documentation/master/duckduckhack/assets/diagrams/base_item.png"></p><h3><a class="anchor" name="complex-example"></a>Complex Example</h3><p><img alt="base_item template (complex example)" src="https://raw.githubusercontent.com/duckduckgo/duckduckgo-documentation/master/duckduckhack/assets/diagrams/base_item_complex.png"></p><h3><a class="anchor" name="template-groups-using-the-quotbaseitemquot-template"></a>Template groups using the &quot;base_item&quot; template:</h3><ul><li><a href="http://duck.co/duckduckhack/spice_templates_overview#base">base</a></li></ul><h3><a class="anchor" name="example-usage-of-the-quotbaseitemquot-template"></a>Example usage of the &quot;base_item&quot; template:</h3><ul><li><a href="https://github.com/duckduckgo/zeroclickinfo-spice/blob/master/share/spice/github_jobs/github_jobs.js">GithubJobs</a></li><li><a href="https://github.com/duckduckgo/zeroclickinfo-spice/blob/master/share/spice/airlines/airlines.js">Airlines</a>	http://duck.co/duckduckhack/spice_templates_overview#base_item
Spice base_detail	A										<h3><a class="anchor" name="available-features"></a>Available Features</h3><ul><li>content <em>string</em> OR <em>sub-template</em></li></ul><h3><a class="anchor" name="template-diagram"></a>Template Diagram</h3><p><img alt="base_detail template" src="https://raw.githubusercontent.com/duckduckgo/duckduckgo-documentation/master/duckduckhack/assets/diagrams/base_detail.png"></p><h3><a class="anchor" name="complex-example"></a>Complex Example</h3><p><img alt="base_detail template (complex example)" src="https://raw.githubusercontent.com/duckduckgo/duckduckgo-documentation/master/duckduckhack/assets/diagrams/base_detail_complex.png"></p><h3><a class="anchor" name="template-groups-using-the-quotbasedetailquot-template"></a>Template groups using the &quot;base_detail&quot; template:</h3><ul><li><a href="http://duck.co/duckduckhack/spice_templates_overview#base">base</a></li></ul><h3><a class="anchor" name="example-usage-of-the-quotbasedetailquot-template"></a>Example usage of the &quot;base_detail&quot; template:</h3><ul><li><a href="https://github.com/duckduckgo/zeroclickinfo-spice/blob/master/share/spice/flash_version/flash_version.js">FlashVersion</a></li><li><a href="https://github.com/duckduckgo/zeroclickinfo-spice/blob/master/share/spice/npm/npm.js">NPM</a></li><li><a href="https://github.com/duckduckgo/zeroclickinfo-spice/blob/master/share/spice/xkcd/xkcd.js">XKCD</a></li></ul><hr><h1><a class="anchor" name="tile-variants"></a>Tile Variants</h1><p>If the default tile dimensions are not perfect for your Spice result, you can choose from one of the following tile variants, each of which offer different dimensions (some wider, some taller):</p><ul><li><a href="http://duck.co/duckduckhack/spice_templates_overview#poster">poster</a></li><li><a href="http://duck.co/duckduckhack/spice_templates_overview#narrow">narrow</a></li><li><a href="http://duck.co/duckduckhack/spice_templates_overview#wide">wide</a></li><li><a href="http://duck.co/duckduckhack/spice_templates_overview#xwide">xwide</a></li><li><a href="http://duck.co/duckduckhack/spice_templates_overview#video">video</a>	http://duck.co/duckduckhack/spice_templates_overview#base_detail
Spice poster	A										<p>Tall and thin, like a movie poster.</p><h3><a class="anchor" name="usage"></a>Usage</h3><pre><code class="language-javascript">templates: {    ...    options: {        ...        variant: &#39;poster&#39;    }}</code></pre><h3><a class="anchor" name="examples"></a>Examples</h3><ul><li><a href="https://duckduckgo.com/?q=the+dark+knight+movie">&quot;the dark knight movie&quot;</a></li><li><a href="https://duckduckgo.com/?q=currently+in+theaters">&quot;currently in theaters&quot;</a>	http://duck.co/duckduckhack/spice_templates_overview#poster
Spice narrow	A										<p>Narrower tile width, normal height.</p><h3><a class="anchor" name="usage"></a>Usage</h3><pre><code class="language-javascript">templates: {    ...    options: {        ...        variant: &#39;narrow&#39;    }}</code></pre><h3><a class="anchor" name="examples"></a>Examples</h3><ul><li><a href="https://duckduckgo.com/?q=alarm+clock+apps">&quot;alarm clock apps&quot;</a></li><li><a href="https://duckduckgo.com/?q=pa+representatives">&quot;pa representatives&quot;</a>	http://duck.co/duckduckhack/spice_templates_overview#narrow
Spice wide	A										<p>Increased width, normal height.</p><h3><a class="anchor" name="usage"></a>Usage</h3><pre><code class="language-javascript">templates: {    ...    options: {        ...        variant: &#39;wide&#39;    }}</code></pre><h3><a class="anchor" name="examples"></a>Examples</h3><p>none...<em>yet!</em>	http://duck.co/duckduckhack/spice_templates_overview#wide
Spice xwide	A										<p>Super wide, normal height.</p><h3><a class="anchor" name="usage"></a>Usage</h3><pre><code class="language-javascript">templates: {    ...    options: {        ...        variant: &#39;xwide&#39;    }}</code></pre><h3><a class="anchor" name="examples"></a>Examples</h3><ul><li><a href="https://duckduckgo.com/?q=flight+aa102">&quot;flight aa102&quot;</a>	http://duck.co/duckduckhack/spice_templates_overview#xwide
Spice video	A										<p>Shorter height, increased width.	http://duck.co/duckduckhack/spice_templates_overview#video
DuckDuckHack Advanced Testing	A										<p>The <a href="testing.md#testing-triggers">testing triggers</a> section explained interactive testing. Before going live we also make programmatic tests for each instant answer.	http://duck.co/duckduckhack/advanced_testing#advanced-testing
DuckDuckHack Create Test File	A										<p>Make a new file in the test directory <strong>t/</strong>. The name of the file should match the name of your instant answer, but this time followed by the extension <strong>.t</strong> for test because it is a Perl testing file. For example, if the name of your instant answer was <strong>Chars</strong>, the file would be <code>Chars.t</code>.</p><p>The top of the file reads like a normal Perl script with some use statements to include testing modules, including the DuckDuckGo testing module.	http://duck.co/duckduckhack/advanced_testing#create-test-file
DuckDuckHack Test your Instant Answer	A										<p>Run your instant answer test file like this:</p><pre><code class="language-txt">perl -Ilib t/Chars.t</code></pre>	http://duck.co/duckduckhack/advanced_testing#test-your-instant-answer
DuckDuckHack Javascript	A										<p>(This section is coming soon! Know what should go here? Then <strong>please</strong> <a href="https://github.com/duckduckgo/duckduckgo-documentation/blob/master/CONTRIBUTING.md">contribute to the documentation</a>!)	http://duck.co/duckduckhack/code_styleguide#javascript
DuckDuckHack Handlebars	A										<p>(This section is coming soon! Know what should go here? Then <strong>please</strong> <a href="https://github.com/duckduckgo/duckduckgo-documentation/blob/master/CONTRIBUTING.md">contribute to the documentation</a>!)	http://duck.co/duckduckhack/code_styleguide#handlebars
DuckDuckHack Css	A										<p>(This section is coming soon! Know what should go here? Then <strong>please</strong> <a href="https://github.com/duckduckgo/duckduckgo-documentation/blob/master/CONTRIBUTING.md">contribute to the documentation</a>!)	http://duck.co/duckduckhack/code_styleguide#css
DuckDuckHack Perl	A										<p>(This section is coming soon! Know what should go here? Then <strong>please</strong> <a href="https://github.com/duckduckgo/duckduckgo-documentation/blob/master/CONTRIBUTING.md">contribute to the documentation</a>!)</p>								</div>	http://duck.co/duckduckhack/code_styleguide#perl
DuckDuckHack Style Guide Key Concepts	A										<p>When designing an instant answer there are a few key concepts to keep in mind:</p><ul><li><a href="http://duck.co/duckduckhack/design_styleguide#continuity">Continuity</a></li><li><a href="http://duck.co/duckduckhack/design_styleguide#simplicity">Simplicity</a></li><li><a href="http://duck.co/duckduckhack/design_styleguide#flexibility">Flexibility</a></li><li><a href="http://duck.co/duckduckhack/design_styleguide#space">Space</a>	http://duck.co/duckduckhack/design_styleguide#style-guide-key-concepts
DuckDuckHack Continuity	A										<p>All instant answers, regardless of their type (Spice, Goodie, Fathead or Longtail) should maintain visual design continuity. This means that the styling and placement of the Instant Answer Box elements should be the same for all instant answers. The following design elements should remain consistent across all instant answers:	http://duck.co/duckduckhack/design_styleguide#continuity
DuckDuckHack Simplicity	A										<p>Aside from continuity, all instant answers should also be designed with simplicity in mind. The information an instant answer provides is the most important part, which means that it should be:	http://duck.co/duckduckhack/design_styleguide#simplicity
DuckDuckHack Flexibility	A										<p>Instant answers must be compatible with <strong>all platforms, operating systems and browsers</strong>. This means that care must be taken to ensure any special CSS has backwards compatibility or graceful degradation (eg. border-radius). This also means that all instant answers should look and function correctly on both mobile devices (small screens) and desktop environments (larger screens). For some instant answer types (ie. Fatheads, Longtail) this is easily achieved because they most often return text. However, for other instant answers (ie. Spice) which use JavaScript and CSS, this will require a little more effort on the developer&#39;s part to ensure everything works properly.	http://duck.co/duckduckhack/design_styleguide#flexibility
DuckDuckHack Space	A										<p>Vertical space is of utmost importance with regards to instant answers. The space an instant answer occupies is very valuable (it would otherwise be used for links!) and so it&#39;s important that developers keep this in mind when designing their instant answers. Only the most important information should be displayed in an instant answer but if a user wants to see more information, most instant answers include a <strong>&quot;More at ...&quot;</strong> link, which users can follow for more detailed information.</p><p>For more detailed guidelines specific to individual instant answers please see the <a href="https://github.com/duckduckgo/DuckDuckGo-Documentation/tree/master/DuckDuckHack/Styleguide/instant" title="answer-Specific-Design-Style-Guide">instant answer Specific Design Style Guide</a></p>								</div>	http://duck.co/duckduckhack/design_styleguide#space
DuckDuckHack Choose an Instant Answer	A										<p>Before you begin building anything, you&#39;ll need to know what instant answer it is that you want to provide. If you don&#39;t have any ideas, feel free to borrow one from our <a href="https://dukgo.com/ideas">ideas forum</a>.	http://duck.co/duckduckhack/determine_your_instant_answer_type#choose-an-instant-answer
DuckDuckHack Determine Instant Answer Source	A										<p>Now that you know which queries you&#39;d like to show an instant answer for, you&#39;ll need to determine what the source for your instant answer will be.</p><p>Most instant answers rely on some type of data source to provide their answer; however many of them are able to provide their instant answer through the use of pure code. An example would be a string manipulation instant answer, which would only require the use of a function (code) to return an answer.</p><p>Please use the following flowchart to help you to determine which kind of instant answer you&#39;ll be creating. Your instant answer type will be based on the date source your instant answer will be using:</p><p><img alt="instant answer type flow chart" src="https://raw.github.com/duckduckgo/duckduckgo-documentation/master/duckduckhack/assets/instant_answer_flowchart.png">	http://duck.co/duckduckhack/determine_your_instant_answer_type#determine-instant-answer-source
DuckDuckHack Fork the Instant Answer Repository	A										<p>Now that you know which instant answer type you&#39;ll be using for your instant answer, you&#39;ll have to fork the associated DuckDuckHack  the repository instant answer repository (<a href="http://help.github.com/fork-a-repo/">GitHub instructions</a>) so you can start coding. If you don&#39;t already have a GitHub account, please <a href="https://github.com/signup/free">signup</a> now. This is required because we use GitHub to handle all incoming <em>Pull Requests</em> (code modifications) and <em>Issues</em> (bug reports) which cannot be made without a GitHub account.</p><p>Once you have an account, please fork the appropriate repository:</p><ul><li><p>For <strong>Goodies</strong>, <a href="https://github.com/duckduckgo/zeroclickinfo-goodies/fork">click here</a></p></li><li><p>For <strong>Spice</strong>, <a href="https://github.com/duckduckgo/zeroclickinfo-spice/fork">click here</a></p></li><li><p>For <strong>Fathead</strong>, <a href="https://github.com/duckduckgo/zeroclickinfo-fathead/fork">click here</a></p></li><li><p>For <strong>Longtail</strong>, <a href="https://github.com/duckduckgo/zeroclickinfo-longtail/fork">click here</a>	http://duck.co/duckduckhack/determine_your_instant_answer_type#fork-the-instant-answer-repository
DuckDuckHack Start Coding!	A										<p>At this point, you&#39;re ready to start learning about the instant answer type you&#39;ll be using:</p><ul><li><p>For <strong>Goodies</strong>, <a href="goodie_overview">start here</a></p></li><li><p>For <strong>Spice</strong>, <a href="spice_overview">start here</a></p></li><li><p>For <strong>Fathead</strong>, <a href="fathead_overview">start here</a></p></li><li><p>For <strong>Longtail</strong>, <a href="longtail_overview">start here</a></p></li></ul>								</div>	http://duck.co/duckduckhack/determine_your_instant_answer_type#start-coding!
DuckDuckHack General Questions	A										<p>(Know what should go here? Then <strong>please</strong> <a href="https://github.com/duckduckgo/duckduckgo-documentation/blob/master/CONTRIBUTING.md">contribute to the documentation</a>!)</p><ul><li>Is it well documented? Make sure you comment your code well so that it&#39;s easier for other people to maintain.	http://duck.co/duckduckhack/developer_checklist#general-questions
DuckDuckHack Goodie	A										<p>(Know what should go here? Then <strong>please</strong> <a href="https://github.com/duckduckgo/duckduckgo-documentation/blob/master/CONTRIBUTING.md">contribute to the documentation</a>!)</p><ul><li><p>Can this instant answer return unsafe content (bad words, etc)</p><ul><li>Did you set <code>is_unsafe</code> to true?</li></ul></li><li><p>Can this instant answer return an HTML response?</p><ul><li>Have you guaranteed that the response does not contain unsanitized user-supplied strings (e.g., the query string) which could lead to <a href="https://www.owasp.org/index.php/Cross-site_Scripting_%28XSS%29">cross-site scripting attacks</a>?	http://duck.co/duckduckhack/developer_checklist#goodie
DuckDuckHack Spice	A										<p>(Know what should go here? Then <strong>please</strong> <a href="https://github.com/duckduckgo/duckduckgo-documentation/blob/master/CONTRIBUTING.md">contribute to the documentation</a>!)</p><ul><li><p>Did you write any custom css?</p><ul><li>Did you namespace the css? (every instant answer has a div with id=&quot;spice_<template_name>&quot;, use that to target your styles so you don&#39;t overwrite any global styles)</template_name></li></ul></li><li><p>Can this instant answer return unsafe content (bad words, etc)</p><ul><li>Did you set <code>is_unsafe</code> to true?	http://duck.co/duckduckhack/developer_checklist#spice
DuckDuckHack Fathead	A										<p>(Know what should go here? Then <strong>please</strong> <a href="https://github.com/duckduckgo/duckduckgo-documentation/blob/master/CONTRIBUTING.md">contribute to the documentation</a>!)	http://duck.co/duckduckhack/developer_checklist#fathead
DuckDuckHack Longtail	A										<p>(Know what should go here? Then <strong>please</strong> <a href="https://github.com/duckduckgo/duckduckgo-documentation/blob/master/CONTRIBUTING.md">contribute to the documentation</a>!)</p>								</div>	http://duck.co/duckduckhack/developer_checklist#longtail
DuckDuckHack Email List	A										<p>Join the <a href="https://www.listbox.com/subscribe/?list_id=197814">DuckDuckHack email list</a> to reach out to us and other developers with feedback/questions!	http://duck.co/duckduckhack/duckduckhack_vision#duckduckhack-email-list
Fathead General FAQ	A										<h3><a class="anchor" name="why-should-i-make-instant-answers"></a>Why should I make instant answers?</h3><p>We hope you will consider making DuckDuckGo instant answers to:</p><ul><li>Improve results in areas you personally search and care about, e.g., <a href="https://duckduckgo.com/?q=perl+split">programming documentation</a>, <a href="https://duckduckgo.com/?q=roll+3d12+%2B+4">gaming</a> or <a href="https://duckduckgo.com/?q=xkcd">entertainment</a>.</li><li>Increase usage of your own projects, e.g., data and <a href="https://duckduckgo.com/?q=cost+of+living+nyc+philadelphia">APIs</a>.</li><li>Attribution <a href="https://duckduckgo.com/goodies.html">on our site</a> and <a href="https://twitter.com/duckduckhack">Twitter</a> (working on more).</li><li>See your code live on a <a href="https://duckduckgo.com/traffic.html">growing</a> search engine!</li><li>Learn something new.</li></ul><h3><a class="anchor" name="what-if-im-not-a-coder-at-all"></a>What if I&#39;m not a coder at all?</h3><p>If you don&#39;t code at all and you&#39;ve ended up here, please go over to our <a href="http://ideas.duckduckhack.com/">instant answers ideas forum</a> where you can suggest and comment on instant answer ideas. For instance, identifying the best sources to draw from is extremely important but not many developers know the best sources, which is where you come in! Similarly, you can submit <a href="https://github.com/duckduckgo/duckduckgo/issues?direction=desc&amp;sort=created&amp;state=open">issues about current instant answers</a>. Both of these activities are very valuable and will help direct community efforts.</p><p>If you&#39;re a business and want your data to be utilized, adding your service to <a href="http://ideas.duckduckhack.com">ideas.duckduckhack.com</a> is a great way for your API to get picked up by a developer and integrated into the search engine.</p><h3><a class="anchor" name="can-you-help-me"></a>Can you help me?</h3><p>Of course! Here are the easiest ways to contact someone who can help answer your questions:</p><ul><li>Write us publicly on the <a href="https://www.listbox.com/subscribe/?list_id=197814">discussion list</a>.</li><li>Write us privately at open@duckduckgo.com.</li></ul><h3><a class="anchor" name="what-if-i-dont-know-perl"></a>What if I don&#39;t know Perl?</h3><p>If you don&#39;t know Perl, that&#39;s OK! Some instant answer types (<a href="fathead_overview">Fathead</a>, <a href="longtail_overview">Longtail</a>) don&#39;t require the use of Perl. Also, if you know PHP, Ruby, or Python you should be able to write a <a href="goodie_overview">Goodie</a> in Perl pretty easily using <a href="http://hyperpolyglot.org/scripting">this awesome cheat sheet</a>.</p><h3><a class="anchor" name="do-you-have-any-instant-answer-ideas"></a>Do you have any instant answer ideas?</h3><p>Yup! We maintain <a href="http://ideas.duckduckhack.com/">a growing list</a>. There are also improvement ideas for <a href="https://github.com/duckduckgo/zeroclickinfo-goodies/issues">Goodies</a>, <a href="https://github.com/duckduckgo/zeroclickinfo-spice/issues">Spice</a>, <a href="https://github.com/duckduckgo/zeroclickinfo-fathead/issues">Fathead</a> and <a href="https://github.com/duckduckgo/zeroclickinfo-longtail/issues">Longtail</a>.</p><h3><a class="anchor" name="how-do-i-note-that-ive-started-on-something"></a>How do I note that I&#39;ve started on something?</h3><p>In your initial pull request, please note the link on the <a href="http://ideas.duckduckhack.com/">idea list</a>. We&#39;ll move it to the &quot;in process&quot; bucket for you.</p><h3><a class="anchor" name="where-i-can-report-instant-answer-bugs"></a>Where I can report instant answer bugs?</h3><p>Submit GitHub issues in the <a href="http://github.com/duckduckgo">appropriate repo</a>.</p><h3><a class="anchor" name="what-if-there-are-instant-answer-conflicts"></a>What if there are instant answer conflicts?</h3><p>The ultimate arbiter is the user, and that&#39;s the perspective we take. In other words, we ask &quot;what is best for the user experience?&quot; That said, it often makes sense to combine ideas into one, better instant answer.</p><h3><a class="anchor" name="why-isnt-my-instant-answer-in-the-a-hrefhttpsapiduckduckgocomduckduckgo-instant-answers-apia"></a>Why isn&#39;t my instant answer in the <a href="https://api.duckduckgo.com">DuckDuckGo Instant Answers API</a>?</h3><p>If your instant answer is spice or longtail, sometimes we can&#39;t expose it through the API for licensing reasons (e.g., the WolframAlpha instant answer), but ourover-arching goal is to make all of our instant answers available on their own.</p><h3><a class="anchor" name="can-i-do-something-more-complicated"></a>Can I do something more complicated?</h3><p>Maybe. There are a bunch more internal interfaces we haven&#39;t exposed yet, and we&#39;d love to hear your ideas to influence that roadmap.</p><h3><a class="anchor" name="whats-the-roadmap"></a>What&#39;s the roadmap?</h3><p>Here&#39;s what we&#39;re working on (in roughly in this order):</p><ul><li>better testing/file structure for spice instant answers.</li><li>better JS interface for spice instant answer callback functions.</li><li>better attribution.</li><li>embedding instant answers.</li><li>better testing/file structure for fathead instant answers.</li><li>more defined structure for longtail instant answers.</li><li>better testing for longtail instant answers.</li></ul><h3><a class="anchor" name="are-there-other-open-source-projects"></a>Are there other open source projects? </h3><p>Yes! Check out the other repositories in <a href="https://github.com/duckduckgo">our GitHub account</a>. You can email open@duckduckgo.com if you have any questions on those.</p><h3><a class="anchor" name="can-i-get-the-instant-answers-through-an-api"></a>Can I get the instant answers through an API?</h3><p>Yes! Check out the <a href="https://api.duckduckgo.com">DuckDuckGo API</a>. Our goal is to make as many instant answers as possibleavailable through this interface. Fathead and goodie instant answers are automatically syndicated through the API, and Spice and Longtail are selectively (due to licensing complications) mixed in.</p><h3><a class="anchor" name="can-i-talk-to-you-about-a-partnership-idea"></a>Can I talk to you about a partnership idea?</h3><p>Sure -- check out <a href="http://help.duckduckgo.com/customer/portal/articles/775109-partnerships">our partnerships page</a>.	http://duck.co/duckduckhack/faq#fathead#general-faq
Fathead Goodie FAQ	A										<h3><a class="anchor" name="can-goodie-instant-answers-make-network-requests"></a>Can Goodie instant answers make network requests?</h3><p>No. If you are trying to use an API, you should consider creating a Spice instant answer instead.</p><h3><a class="anchor" name="can-goodie-instant-answers-include-the-users-query-string"></a>Can Goodie instant answers include the user&#39;s query string?</h3><p>Yes. <strong>However</strong>, they must be handled <em>very</em> carefully. User-supplied strings create a lot of potential for <a href="https://www.owasp.org/index.php/Cross-site_Scripting_%28XSS%29">cross-site scripting attacks</a>.  While the platform attempts to mitigate these issues in pure ASCII responses, HTML responses should <strong>never</strong> include a raw query string. It is safest to return only data which is generated by your Goodie itself.	http://duck.co/duckduckhack/faq#fathead#goodie-faq
Fathead Spice FAQ	A										<h3><a class="anchor" name="i-want-to-use-x-api-but-it-doesnt-have-an-endpoint-for-y-what-should-i-do"></a>I want to use &#39;X&#39; API, but it doesn&#39;t have an endpoint for &#39;Y&#39;. What should I do?</h3><p>Email them! - If you explain what it&#39;s for, they might be willing to create and endpoint for you! If not, it&#39;s probably best to find another API.</p><h3><a class="anchor" name="can-i-use-an-api-that-returns-xml"></a>Can I use an API that returns XML?</h3><p>Sorry, but <strong>no</strong>. We currently don&#39;t support XML. We&#39;re considering it though...</p><h3><a class="anchor" name="can-i-use-an-api-that-returns-html-or-a-string"></a>Can I use an API that returns HTML or a String? </h3><p>If the response is a single string, then yes - you can use <code>zci wrap_jsonp_callback</code>. You can read more about that <a href="http://duck.co/duckduckhack/faq#fathead#">here</a>. Or take a look at the <a href="https://github.com/duckduckgo/zeroclickinfo-spice/blob/spice2/lib/DDG/Spice/Automeme.pm#L8">Automeme</a> instant answer. If the response is more complicated, then sorry but <strong>no</strong>.</p><h3><a class="anchor" name="can-i-use-the-x-y-or-z-javascript-library"></a>Can I use the &#39;X&#39;, &#39;Y&#39; or &#39;Z&#39; JavaScript library?</h3><p>Probably not. Maybe, if it is very small, but we prefer that no third party, extra libraries are used. <strong><em>Please</em></strong> ask us first before writing an instant answer that is <strong>dependent</strong> on an extra library - we don&#39;t want you to waste your time and energy on something we can&#39;t accept!</p><h3><a class="anchor" name="can-i-use-coffeescript"></a>Can I use Coffeescript?</h3><p>No.</p><h3><a class="anchor" name="what-about"></a>What about...</h3><p>Nope. Just use JavaScript, please and thanks :)	http://duck.co/duckduckhack/faq#fathead#spice-faq
Fathead FAQ	A										<h3><a class="anchor" name="how-can-i-test-my-output-file"></a>How can I test my output file?</h3><p>Unfortunately, there is no way for contributors to do so. But if you&#39;ve gotten that far, we want to hear about it! Please open a pull request and we&#39;ll help you through the testing process.</p><h3><a class="anchor" name="what-can-go-in-a-result-abstract"></a>What can go in a result abstract?</h3><p>A result abstract can be either plain text (generally one readable sentence, ending in a period), or HTML. Special care needs to be taken when abstracts contain HTML. Please let us know ahead of time if you are planning to use HTML.</p><p>(This section is still growing! Know what should go here? Then <strong>please</strong> <a href="https://github.com/duckduckgo/duckduckgo-documentation/blob/master/CONTRIBUTING.md">contribute to the documentation</a>!)	http://duck.co/duckduckhack/faq#fathead#fathead-faq
Fathead Longtail FAQ	A										<p>(This section is coming soon! Know what should go here? Then <strong>please</strong> <a href="https://github.com/duckduckgo/duckduckgo-documentation/blob/master/CONTRIBUTING.md">contribute to the documentation</a>!)	http://duck.co/duckduckhack/faq#fathead#longtail-faq
Goodie General FAQ	A										<h3><a class="anchor" name="why-should-i-make-instant-answers"></a>Why should I make instant answers?</h3><p>We hope you will consider making DuckDuckGo instant answers to:</p><ul><li>Improve results in areas you personally search and care about, e.g., <a href="https://duckduckgo.com/?q=perl+split">programming documentation</a>, <a href="https://duckduckgo.com/?q=roll+3d12+%2B+4">gaming</a> or <a href="https://duckduckgo.com/?q=xkcd">entertainment</a>.</li><li>Increase usage of your own projects, e.g., data and <a href="https://duckduckgo.com/?q=cost+of+living+nyc+philadelphia">APIs</a>.</li><li>Attribution <a href="https://duckduckgo.com/goodies.html">on our site</a> and <a href="https://twitter.com/duckduckhack">Twitter</a> (working on more).</li><li>See your code live on a <a href="https://duckduckgo.com/traffic.html">growing</a> search engine!</li><li>Learn something new.</li></ul><h3><a class="anchor" name="what-if-im-not-a-coder-at-all"></a>What if I&#39;m not a coder at all?</h3><p>If you don&#39;t code at all and you&#39;ve ended up here, please go over to our <a href="http://ideas.duckduckhack.com/">instant answers ideas forum</a> where you can suggest and comment on instant answer ideas. For instance, identifying the best sources to draw from is extremely important but not many developers know the best sources, which is where you come in! Similarly, you can submit <a href="https://github.com/duckduckgo/duckduckgo/issues?direction=desc&amp;sort=created&amp;state=open">issues about current instant answers</a>. Both of these activities are very valuable and will help direct community efforts.</p><p>If you&#39;re a business and want your data to be utilized, adding your service to <a href="http://ideas.duckduckhack.com">ideas.duckduckhack.com</a> is a great way for your API to get picked up by a developer and integrated into the search engine.</p><h3><a class="anchor" name="can-you-help-me"></a>Can you help me?</h3><p>Of course! Here are the easiest ways to contact someone who can help answer your questions:</p><ul><li>Write us publicly on the <a href="https://www.listbox.com/subscribe/?list_id=197814">discussion list</a>.</li><li>Write us privately at open@duckduckgo.com.</li></ul><h3><a class="anchor" name="what-if-i-dont-know-perl"></a>What if I don&#39;t know Perl?</h3><p>If you don&#39;t know Perl, that&#39;s OK! Some instant answer types (<a href="fathead_overview">Fathead</a>, <a href="longtail_overview">Longtail</a>) don&#39;t require the use of Perl. Also, if you know PHP, Ruby, or Python you should be able to write a <a href="goodie_overview">Goodie</a> in Perl pretty easily using <a href="http://hyperpolyglot.org/scripting">this awesome cheat sheet</a>.</p><h3><a class="anchor" name="do-you-have-any-instant-answer-ideas"></a>Do you have any instant answer ideas?</h3><p>Yup! We maintain <a href="http://ideas.duckduckhack.com/">a growing list</a>. There are also improvement ideas for <a href="https://github.com/duckduckgo/zeroclickinfo-goodies/issues">Goodies</a>, <a href="https://github.com/duckduckgo/zeroclickinfo-spice/issues">Spice</a>, <a href="https://github.com/duckduckgo/zeroclickinfo-fathead/issues">Fathead</a> and <a href="https://github.com/duckduckgo/zeroclickinfo-longtail/issues">Longtail</a>.</p><h3><a class="anchor" name="how-do-i-note-that-ive-started-on-something"></a>How do I note that I&#39;ve started on something?</h3><p>In your initial pull request, please note the link on the <a href="http://ideas.duckduckhack.com/">idea list</a>. We&#39;ll move it to the &quot;in process&quot; bucket for you.</p><h3><a class="anchor" name="where-i-can-report-instant-answer-bugs"></a>Where I can report instant answer bugs?</h3><p>Submit GitHub issues in the <a href="http://github.com/duckduckgo">appropriate repo</a>.</p><h3><a class="anchor" name="what-if-there-are-instant-answer-conflicts"></a>What if there are instant answer conflicts?</h3><p>The ultimate arbiter is the user, and that&#39;s the perspective we take. In other words, we ask &quot;what is best for the user experience?&quot; That said, it often makes sense to combine ideas into one, better instant answer.</p><h3><a class="anchor" name="why-isnt-my-instant-answer-in-the-a-hrefhttpsapiduckduckgocomduckduckgo-instant-answers-apia"></a>Why isn&#39;t my instant answer in the <a href="https://api.duckduckgo.com">DuckDuckGo Instant Answers API</a>?</h3><p>If your instant answer is spice or longtail, sometimes we can&#39;t expose it through the API for licensing reasons (e.g., the WolframAlpha instant answer), but ourover-arching goal is to make all of our instant answers available on their own.</p><h3><a class="anchor" name="can-i-do-something-more-complicated"></a>Can I do something more complicated?</h3><p>Maybe. There are a bunch more internal interfaces we haven&#39;t exposed yet, and we&#39;d love to hear your ideas to influence that roadmap.</p><h3><a class="anchor" name="whats-the-roadmap"></a>What&#39;s the roadmap?</h3><p>Here&#39;s what we&#39;re working on (in roughly in this order):</p><ul><li>better testing/file structure for spice instant answers.</li><li>better JS interface for spice instant answer callback functions.</li><li>better attribution.</li><li>embedding instant answers.</li><li>better testing/file structure for fathead instant answers.</li><li>more defined structure for longtail instant answers.</li><li>better testing for longtail instant answers.</li></ul><h3><a class="anchor" name="are-there-other-open-source-projects"></a>Are there other open source projects? </h3><p>Yes! Check out the other repositories in <a href="https://github.com/duckduckgo">our GitHub account</a>. You can email open@duckduckgo.com if you have any questions on those.</p><h3><a class="anchor" name="can-i-get-the-instant-answers-through-an-api"></a>Can I get the instant answers through an API?</h3><p>Yes! Check out the <a href="https://api.duckduckgo.com">DuckDuckGo API</a>. Our goal is to make as many instant answers as possibleavailable through this interface. Fathead and goodie instant answers are automatically syndicated through the API, and Spice and Longtail are selectively (due to licensing complications) mixed in.</p><h3><a class="anchor" name="can-i-talk-to-you-about-a-partnership-idea"></a>Can I talk to you about a partnership idea?</h3><p>Sure -- check out <a href="http://help.duckduckgo.com/customer/portal/articles/775109-partnerships">our partnerships page</a>.	http://duck.co/duckduckhack/faq#goodie#general-faq
Goodie FAQ	A										<h3><a class="anchor" name="can-goodie-instant-answers-make-network-requests"></a>Can Goodie instant answers make network requests?</h3><p>No. If you are trying to use an API, you should consider creating a Spice instant answer instead.</p><h3><a class="anchor" name="can-goodie-instant-answers-include-the-users-query-string"></a>Can Goodie instant answers include the user&#39;s query string?</h3><p>Yes. <strong>However</strong>, they must be handled <em>very</em> carefully. User-supplied strings create a lot of potential for <a href="https://www.owasp.org/index.php/Cross-site_Scripting_%28XSS%29">cross-site scripting attacks</a>.  While the platform attempts to mitigate these issues in pure ASCII responses, HTML responses should <strong>never</strong> include a raw query string. It is safest to return only data which is generated by your Goodie itself.	http://duck.co/duckduckhack/faq#goodie#goodie-faq
Goodie Spice FAQ	A										<h3><a class="anchor" name="i-want-to-use-x-api-but-it-doesnt-have-an-endpoint-for-y-what-should-i-do"></a>I want to use &#39;X&#39; API, but it doesn&#39;t have an endpoint for &#39;Y&#39;. What should I do?</h3><p>Email them! - If you explain what it&#39;s for, they might be willing to create and endpoint for you! If not, it&#39;s probably best to find another API.</p><h3><a class="anchor" name="can-i-use-an-api-that-returns-xml"></a>Can I use an API that returns XML?</h3><p>Sorry, but <strong>no</strong>. We currently don&#39;t support XML. We&#39;re considering it though...</p><h3><a class="anchor" name="can-i-use-an-api-that-returns-html-or-a-string"></a>Can I use an API that returns HTML or a String? </h3><p>If the response is a single string, then yes - you can use <code>zci wrap_jsonp_callback</code>. You can read more about that <a href="http://duck.co/duckduckhack/faq#goodie#">here</a>. Or take a look at the <a href="https://github.com/duckduckgo/zeroclickinfo-spice/blob/spice2/lib/DDG/Spice/Automeme.pm#L8">Automeme</a> instant answer. If the response is more complicated, then sorry but <strong>no</strong>.</p><h3><a class="anchor" name="can-i-use-the-x-y-or-z-javascript-library"></a>Can I use the &#39;X&#39;, &#39;Y&#39; or &#39;Z&#39; JavaScript library?</h3><p>Probably not. Maybe, if it is very small, but we prefer that no third party, extra libraries are used. <strong><em>Please</em></strong> ask us first before writing an instant answer that is <strong>dependent</strong> on an extra library - we don&#39;t want you to waste your time and energy on something we can&#39;t accept!</p><h3><a class="anchor" name="can-i-use-coffeescript"></a>Can I use Coffeescript?</h3><p>No.</p><h3><a class="anchor" name="what-about"></a>What about...</h3><p>Nope. Just use JavaScript, please and thanks :)	http://duck.co/duckduckhack/faq#goodie#spice-faq
Goodie Fathead FAQ	A										<h3><a class="anchor" name="how-can-i-test-my-output-file"></a>How can I test my output file?</h3><p>Unfortunately, there is no way for contributors to do so. But if you&#39;ve gotten that far, we want to hear about it! Please open a pull request and we&#39;ll help you through the testing process.</p><h3><a class="anchor" name="what-can-go-in-a-result-abstract"></a>What can go in a result abstract?</h3><p>A result abstract can be either plain text (generally one readable sentence, ending in a period), or HTML. Special care needs to be taken when abstracts contain HTML. Please let us know ahead of time if you are planning to use HTML.</p><p>(This section is still growing! Know what should go here? Then <strong>please</strong> <a href="https://github.com/duckduckgo/duckduckgo-documentation/blob/master/CONTRIBUTING.md">contribute to the documentation</a>!)	http://duck.co/duckduckhack/faq#goodie#fathead-faq
Goodie Longtail FAQ	A										<p>(This section is coming soon! Know what should go here? Then <strong>please</strong> <a href="https://github.com/duckduckgo/duckduckgo-documentation/blob/master/CONTRIBUTING.md">contribute to the documentation</a>!)	http://duck.co/duckduckhack/faq#goodie#longtail-faq
DuckDuckHack General FAQ	A										<h3><a class="anchor" name="why-should-i-make-instant-answers"></a>Why should I make instant answers?</h3><p>We hope you will consider making DuckDuckGo instant answers to:</p><ul><li>Improve results in areas you personally search and care about, e.g., <a href="https://duckduckgo.com/?q=perl+split">programming documentation</a>, <a href="https://duckduckgo.com/?q=roll+3d12+%2B+4">gaming</a> or <a href="https://duckduckgo.com/?q=xkcd">entertainment</a>.</li><li>Increase usage of your own projects, e.g., data and <a href="https://duckduckgo.com/?q=cost+of+living+nyc+philadelphia">APIs</a>.</li><li>Attribution <a href="https://duckduckgo.com/goodies.html">on our site</a> and <a href="https://twitter.com/duckduckhack">Twitter</a> (working on more).</li><li>See your code live on a <a href="https://duckduckgo.com/traffic.html">growing</a> search engine!</li><li>Learn something new.</li></ul><h3><a class="anchor" name="what-if-im-not-a-coder-at-all"></a>What if I&#39;m not a coder at all?</h3><p>If you don&#39;t code at all and you&#39;ve ended up here, please go over to our <a href="http://ideas.duckduckhack.com/">instant answers ideas forum</a> where you can suggest and comment on instant answer ideas. For instance, identifying the best sources to draw from is extremely important but not many developers know the best sources, which is where you come in! Similarly, you can submit <a href="https://github.com/duckduckgo/duckduckgo/issues?direction=desc&amp;sort=created&amp;state=open">issues about current instant answers</a>. Both of these activities are very valuable and will help direct community efforts.</p><p>If you&#39;re a business and want your data to be utilized, adding your service to <a href="http://ideas.duckduckhack.com">ideas.duckduckhack.com</a> is a great way for your API to get picked up by a developer and integrated into the search engine.</p><h3><a class="anchor" name="can-you-help-me"></a>Can you help me?</h3><p>Of course! Here are the easiest ways to contact someone who can help answer your questions:</p><ul><li>Write us publicly on the <a href="https://www.listbox.com/subscribe/?list_id=197814">discussion list</a>.</li><li>Write us privately at open@duckduckgo.com.</li></ul><h3><a class="anchor" name="what-if-i-dont-know-perl"></a>What if I don&#39;t know Perl?</h3><p>If you don&#39;t know Perl, that&#39;s OK! Some instant answer types (<a href="fathead_overview">Fathead</a>, <a href="longtail_overview">Longtail</a>) don&#39;t require the use of Perl. Also, if you know PHP, Ruby, or Python you should be able to write a <a href="goodie_overview">Goodie</a> in Perl pretty easily using <a href="http://hyperpolyglot.org/scripting">this awesome cheat sheet</a>.</p><h3><a class="anchor" name="do-you-have-any-instant-answer-ideas"></a>Do you have any instant answer ideas?</h3><p>Yup! We maintain <a href="http://ideas.duckduckhack.com/">a growing list</a>. There are also improvement ideas for <a href="https://github.com/duckduckgo/zeroclickinfo-goodies/issues">Goodies</a>, <a href="https://github.com/duckduckgo/zeroclickinfo-spice/issues">Spice</a>, <a href="https://github.com/duckduckgo/zeroclickinfo-fathead/issues">Fathead</a> and <a href="https://github.com/duckduckgo/zeroclickinfo-longtail/issues">Longtail</a>.</p><h3><a class="anchor" name="how-do-i-note-that-ive-started-on-something"></a>How do I note that I&#39;ve started on something?</h3><p>In your initial pull request, please note the link on the <a href="http://ideas.duckduckhack.com/">idea list</a>. We&#39;ll move it to the &quot;in process&quot; bucket for you.</p><h3><a class="anchor" name="where-i-can-report-instant-answer-bugs"></a>Where I can report instant answer bugs?</h3><p>Submit GitHub issues in the <a href="http://github.com/duckduckgo">appropriate repo</a>.</p><h3><a class="anchor" name="what-if-there-are-instant-answer-conflicts"></a>What if there are instant answer conflicts?</h3><p>The ultimate arbiter is the user, and that&#39;s the perspective we take. In other words, we ask &quot;what is best for the user experience?&quot; That said, it often makes sense to combine ideas into one, better instant answer.</p><h3><a class="anchor" name="why-isnt-my-instant-answer-in-the-a-hrefhttpsapiduckduckgocomduckduckgo-instant-answers-apia"></a>Why isn&#39;t my instant answer in the <a href="https://api.duckduckgo.com">DuckDuckGo Instant Answers API</a>?</h3><p>If your instant answer is spice or longtail, sometimes we can&#39;t expose it through the API for licensing reasons (e.g., the WolframAlpha instant answer), but ourover-arching goal is to make all of our instant answers available on their own.</p><h3><a class="anchor" name="can-i-do-something-more-complicated"></a>Can I do something more complicated?</h3><p>Maybe. There are a bunch more internal interfaces we haven&#39;t exposed yet, and we&#39;d love to hear your ideas to influence that roadmap.</p><h3><a class="anchor" name="whats-the-roadmap"></a>What&#39;s the roadmap?</h3><p>Here&#39;s what we&#39;re working on (in roughly in this order):</p><ul><li>better testing/file structure for spice instant answers.</li><li>better JS interface for spice instant answer callback functions.</li><li>better attribution.</li><li>embedding instant answers.</li><li>better testing/file structure for fathead instant answers.</li><li>more defined structure for longtail instant answers.</li><li>better testing for longtail instant answers.</li></ul><h3><a class="anchor" name="are-there-other-open-source-projects"></a>Are there other open source projects? </h3><p>Yes! Check out the other repositories in <a href="https://github.com/duckduckgo">our GitHub account</a>. You can email open@duckduckgo.com if you have any questions on those.</p><h3><a class="anchor" name="can-i-get-the-instant-answers-through-an-api"></a>Can I get the instant answers through an API?</h3><p>Yes! Check out the <a href="https://api.duckduckgo.com">DuckDuckGo API</a>. Our goal is to make as many instant answers as possibleavailable through this interface. Fathead and goodie instant answers are automatically syndicated through the API, and Spice and Longtail are selectively (due to licensing complications) mixed in.</p><h3><a class="anchor" name="can-i-talk-to-you-about-a-partnership-idea"></a>Can I talk to you about a partnership idea?</h3><p>Sure -- check out <a href="http://help.duckduckgo.com/customer/portal/articles/775109-partnerships">our partnerships page</a>.	http://duck.co/duckduckhack/faq#general-faq
DuckDuckHack Goodie FAQ	A										<h3><a class="anchor" name="can-goodie-instant-answers-make-network-requests"></a>Can Goodie instant answers make network requests?</h3><p>No. If you are trying to use an API, you should consider creating a Spice instant answer instead.</p><h3><a class="anchor" name="can-goodie-instant-answers-include-the-users-query-string"></a>Can Goodie instant answers include the user&#39;s query string?</h3><p>Yes. <strong>However</strong>, they must be handled <em>very</em> carefully. User-supplied strings create a lot of potential for <a href="https://www.owasp.org/index.php/Cross-site_Scripting_%28XSS%29">cross-site scripting attacks</a>.  While the platform attempts to mitigate these issues in pure ASCII responses, HTML responses should <strong>never</strong> include a raw query string. It is safest to return only data which is generated by your Goodie itself.	http://duck.co/duckduckhack/faq#goodie-faq
DuckDuckHack Spice FAQ	A										<h3><a class="anchor" name="i-want-to-use-x-api-but-it-doesnt-have-an-endpoint-for-y-what-should-i-do"></a>I want to use &#39;X&#39; API, but it doesn&#39;t have an endpoint for &#39;Y&#39;. What should I do?</h3><p>Email them! - If you explain what it&#39;s for, they might be willing to create and endpoint for you! If not, it&#39;s probably best to find another API.</p><h3><a class="anchor" name="can-i-use-an-api-that-returns-xml"></a>Can I use an API that returns XML?</h3><p>Sorry, but <strong>no</strong>. We currently don&#39;t support XML. We&#39;re considering it though...</p><h3><a class="anchor" name="can-i-use-an-api-that-returns-html-or-a-string"></a>Can I use an API that returns HTML or a String? </h3><p>If the response is a single string, then yes - you can use <code>zci wrap_jsonp_callback</code>. You can read more about that <a href="http://duck.co/duckduckhack/faq#">here</a>. Or take a look at the <a href="https://github.com/duckduckgo/zeroclickinfo-spice/blob/spice2/lib/DDG/Spice/Automeme.pm#L8">Automeme</a> instant answer. If the response is more complicated, then sorry but <strong>no</strong>.</p><h3><a class="anchor" name="can-i-use-the-x-y-or-z-javascript-library"></a>Can I use the &#39;X&#39;, &#39;Y&#39; or &#39;Z&#39; JavaScript library?</h3><p>Probably not. Maybe, if it is very small, but we prefer that no third party, extra libraries are used. <strong><em>Please</em></strong> ask us first before writing an instant answer that is <strong>dependent</strong> on an extra library - we don&#39;t want you to waste your time and energy on something we can&#39;t accept!</p><h3><a class="anchor" name="can-i-use-coffeescript"></a>Can I use Coffeescript?</h3><p>No.</p><h3><a class="anchor" name="what-about"></a>What about...</h3><p>Nope. Just use JavaScript, please and thanks :)	http://duck.co/duckduckhack/faq#spice-faq
DuckDuckHack Fathead FAQ	A										<h3><a class="anchor" name="how-can-i-test-my-output-file"></a>How can I test my output file?</h3><p>Unfortunately, there is no way for contributors to do so. But if you&#39;ve gotten that far, we want to hear about it! Please open a pull request and we&#39;ll help you through the testing process.</p><h3><a class="anchor" name="what-can-go-in-a-result-abstract"></a>What can go in a result abstract?</h3><p>A result abstract can be either plain text (generally one readable sentence, ending in a period), or HTML. Special care needs to be taken when abstracts contain HTML. Please let us know ahead of time if you are planning to use HTML.</p><p>(This section is still growing! Know what should go here? Then <strong>please</strong> <a href="https://github.com/duckduckgo/duckduckgo-documentation/blob/master/CONTRIBUTING.md">contribute to the documentation</a>!)	http://duck.co/duckduckhack/faq#fathead-faq
DuckDuckHack Longtail FAQ	A										<p>(This section is coming soon! Know what should go here? Then <strong>please</strong> <a href="https://github.com/duckduckgo/duckduckgo-documentation/blob/master/CONTRIBUTING.md">contribute to the documentation</a>!)	http://duck.co/duckduckhack/faq#longtail-faq
Longtail General FAQ	A										<h3><a class="anchor" name="why-should-i-make-instant-answers"></a>Why should I make instant answers?</h3><p>We hope you will consider making DuckDuckGo instant answers to:</p><ul><li>Improve results in areas you personally search and care about, e.g., <a href="https://duckduckgo.com/?q=perl+split">programming documentation</a>, <a href="https://duckduckgo.com/?q=roll+3d12+%2B+4">gaming</a> or <a href="https://duckduckgo.com/?q=xkcd">entertainment</a>.</li><li>Increase usage of your own projects, e.g., data and <a href="https://duckduckgo.com/?q=cost+of+living+nyc+philadelphia">APIs</a>.</li><li>Attribution <a href="https://duckduckgo.com/goodies.html">on our site</a> and <a href="https://twitter.com/duckduckhack">Twitter</a> (working on more).</li><li>See your code live on a <a href="https://duckduckgo.com/traffic.html">growing</a> search engine!</li><li>Learn something new.</li></ul><h3><a class="anchor" name="what-if-im-not-a-coder-at-all"></a>What if I&#39;m not a coder at all?</h3><p>If you don&#39;t code at all and you&#39;ve ended up here, please go over to our <a href="http://ideas.duckduckhack.com/">instant answers ideas forum</a> where you can suggest and comment on instant answer ideas. For instance, identifying the best sources to draw from is extremely important but not many developers know the best sources, which is where you come in! Similarly, you can submit <a href="https://github.com/duckduckgo/duckduckgo/issues?direction=desc&amp;sort=created&amp;state=open">issues about current instant answers</a>. Both of these activities are very valuable and will help direct community efforts.</p><p>If you&#39;re a business and want your data to be utilized, adding your service to <a href="http://ideas.duckduckhack.com">ideas.duckduckhack.com</a> is a great way for your API to get picked up by a developer and integrated into the search engine.</p><h3><a class="anchor" name="can-you-help-me"></a>Can you help me?</h3><p>Of course! Here are the easiest ways to contact someone who can help answer your questions:</p><ul><li>Write us publicly on the <a href="https://www.listbox.com/subscribe/?list_id=197814">discussion list</a>.</li><li>Write us privately at open@duckduckgo.com.</li></ul><h3><a class="anchor" name="what-if-i-dont-know-perl"></a>What if I don&#39;t know Perl?</h3><p>If you don&#39;t know Perl, that&#39;s OK! Some instant answer types (<a href="fathead_overview">Fathead</a>, <a href="longtail_overview">Longtail</a>) don&#39;t require the use of Perl. Also, if you know PHP, Ruby, or Python you should be able to write a <a href="goodie_overview">Goodie</a> in Perl pretty easily using <a href="http://hyperpolyglot.org/scripting">this awesome cheat sheet</a>.</p><h3><a class="anchor" name="do-you-have-any-instant-answer-ideas"></a>Do you have any instant answer ideas?</h3><p>Yup! We maintain <a href="http://ideas.duckduckhack.com/">a growing list</a>. There are also improvement ideas for <a href="https://github.com/duckduckgo/zeroclickinfo-goodies/issues">Goodies</a>, <a href="https://github.com/duckduckgo/zeroclickinfo-spice/issues">Spice</a>, <a href="https://github.com/duckduckgo/zeroclickinfo-fathead/issues">Fathead</a> and <a href="https://github.com/duckduckgo/zeroclickinfo-longtail/issues">Longtail</a>.</p><h3><a class="anchor" name="how-do-i-note-that-ive-started-on-something"></a>How do I note that I&#39;ve started on something?</h3><p>In your initial pull request, please note the link on the <a href="http://ideas.duckduckhack.com/">idea list</a>. We&#39;ll move it to the &quot;in process&quot; bucket for you.</p><h3><a class="anchor" name="where-i-can-report-instant-answer-bugs"></a>Where I can report instant answer bugs?</h3><p>Submit GitHub issues in the <a href="http://github.com/duckduckgo">appropriate repo</a>.</p><h3><a class="anchor" name="what-if-there-are-instant-answer-conflicts"></a>What if there are instant answer conflicts?</h3><p>The ultimate arbiter is the user, and that&#39;s the perspective we take. In other words, we ask &quot;what is best for the user experience?&quot; That said, it often makes sense to combine ideas into one, better instant answer.</p><h3><a class="anchor" name="why-isnt-my-instant-answer-in-the-a-hrefhttpsapiduckduckgocomduckduckgo-instant-answers-apia"></a>Why isn&#39;t my instant answer in the <a href="https://api.duckduckgo.com">DuckDuckGo Instant Answers API</a>?</h3><p>If your instant answer is spice or longtail, sometimes we can&#39;t expose it through the API for licensing reasons (e.g., the WolframAlpha instant answer), but ourover-arching goal is to make all of our instant answers available on their own.</p><h3><a class="anchor" name="can-i-do-something-more-complicated"></a>Can I do something more complicated?</h3><p>Maybe. There are a bunch more internal interfaces we haven&#39;t exposed yet, and we&#39;d love to hear your ideas to influence that roadmap.</p><h3><a class="anchor" name="whats-the-roadmap"></a>What&#39;s the roadmap?</h3><p>Here&#39;s what we&#39;re working on (in roughly in this order):</p><ul><li>better testing/file structure for spice instant answers.</li><li>better JS interface for spice instant answer callback functions.</li><li>better attribution.</li><li>embedding instant answers.</li><li>better testing/file structure for fathead instant answers.</li><li>more defined structure for longtail instant answers.</li><li>better testing for longtail instant answers.</li></ul><h3><a class="anchor" name="are-there-other-open-source-projects"></a>Are there other open source projects? </h3><p>Yes! Check out the other repositories in <a href="https://github.com/duckduckgo">our GitHub account</a>. You can email open@duckduckgo.com if you have any questions on those.</p><h3><a class="anchor" name="can-i-get-the-instant-answers-through-an-api"></a>Can I get the instant answers through an API?</h3><p>Yes! Check out the <a href="https://api.duckduckgo.com">DuckDuckGo API</a>. Our goal is to make as many instant answers as possibleavailable through this interface. Fathead and goodie instant answers are automatically syndicated through the API, and Spice and Longtail are selectively (due to licensing complications) mixed in.</p><h3><a class="anchor" name="can-i-talk-to-you-about-a-partnership-idea"></a>Can I talk to you about a partnership idea?</h3><p>Sure -- check out <a href="http://help.duckduckgo.com/customer/portal/articles/775109-partnerships">our partnerships page</a>.	http://duck.co/duckduckhack/faq#longtail#general-faq
Longtail Goodie FAQ	A										<h3><a class="anchor" name="can-goodie-instant-answers-make-network-requests"></a>Can Goodie instant answers make network requests?</h3><p>No. If you are trying to use an API, you should consider creating a Spice instant answer instead.</p><h3><a class="anchor" name="can-goodie-instant-answers-include-the-users-query-string"></a>Can Goodie instant answers include the user&#39;s query string?</h3><p>Yes. <strong>However</strong>, they must be handled <em>very</em> carefully. User-supplied strings create a lot of potential for <a href="https://www.owasp.org/index.php/Cross-site_Scripting_%28XSS%29">cross-site scripting attacks</a>.  While the platform attempts to mitigate these issues in pure ASCII responses, HTML responses should <strong>never</strong> include a raw query string. It is safest to return only data which is generated by your Goodie itself.	http://duck.co/duckduckhack/faq#longtail#goodie-faq
Longtail Spice FAQ	A										<h3><a class="anchor" name="i-want-to-use-x-api-but-it-doesnt-have-an-endpoint-for-y-what-should-i-do"></a>I want to use &#39;X&#39; API, but it doesn&#39;t have an endpoint for &#39;Y&#39;. What should I do?</h3><p>Email them! - If you explain what it&#39;s for, they might be willing to create and endpoint for you! If not, it&#39;s probably best to find another API.</p><h3><a class="anchor" name="can-i-use-an-api-that-returns-xml"></a>Can I use an API that returns XML?</h3><p>Sorry, but <strong>no</strong>. We currently don&#39;t support XML. We&#39;re considering it though...</p><h3><a class="anchor" name="can-i-use-an-api-that-returns-html-or-a-string"></a>Can I use an API that returns HTML or a String? </h3><p>If the response is a single string, then yes - you can use <code>zci wrap_jsonp_callback</code>. You can read more about that <a href="http://duck.co/duckduckhack/faq#longtail#">here</a>. Or take a look at the <a href="https://github.com/duckduckgo/zeroclickinfo-spice/blob/spice2/lib/DDG/Spice/Automeme.pm#L8">Automeme</a> instant answer. If the response is more complicated, then sorry but <strong>no</strong>.</p><h3><a class="anchor" name="can-i-use-the-x-y-or-z-javascript-library"></a>Can I use the &#39;X&#39;, &#39;Y&#39; or &#39;Z&#39; JavaScript library?</h3><p>Probably not. Maybe, if it is very small, but we prefer that no third party, extra libraries are used. <strong><em>Please</em></strong> ask us first before writing an instant answer that is <strong>dependent</strong> on an extra library - we don&#39;t want you to waste your time and energy on something we can&#39;t accept!</p><h3><a class="anchor" name="can-i-use-coffeescript"></a>Can I use Coffeescript?</h3><p>No.</p><h3><a class="anchor" name="what-about"></a>What about...</h3><p>Nope. Just use JavaScript, please and thanks :)	http://duck.co/duckduckhack/faq#longtail#spice-faq
Longtail Fathead FAQ	A										<h3><a class="anchor" name="how-can-i-test-my-output-file"></a>How can I test my output file?</h3><p>Unfortunately, there is no way for contributors to do so. But if you&#39;ve gotten that far, we want to hear about it! Please open a pull request and we&#39;ll help you through the testing process.</p><h3><a class="anchor" name="what-can-go-in-a-result-abstract"></a>What can go in a result abstract?</h3><p>A result abstract can be either plain text (generally one readable sentence, ending in a period), or HTML. Special care needs to be taken when abstracts contain HTML. Please let us know ahead of time if you are planning to use HTML.</p><p>(This section is still growing! Know what should go here? Then <strong>please</strong> <a href="https://github.com/duckduckgo/duckduckgo-documentation/blob/master/CONTRIBUTING.md">contribute to the documentation</a>!)	http://duck.co/duckduckhack/faq#longtail#fathead-faq
Longtail FAQ	A										<p>(This section is coming soon! Know what should go here? Then <strong>please</strong> <a href="https://github.com/duckduckgo/duckduckgo-documentation/blob/master/CONTRIBUTING.md">contribute to the documentation</a>!)	http://duck.co/duckduckhack/faq#longtail#longtail-faq
Spice General FAQ	A										<h3><a class="anchor" name="why-should-i-make-instant-answers"></a>Why should I make instant answers?</h3><p>We hope you will consider making DuckDuckGo instant answers to:</p><ul><li>Improve results in areas you personally search and care about, e.g., <a href="https://duckduckgo.com/?q=perl+split">programming documentation</a>, <a href="https://duckduckgo.com/?q=roll+3d12+%2B+4">gaming</a> or <a href="https://duckduckgo.com/?q=xkcd">entertainment</a>.</li><li>Increase usage of your own projects, e.g., data and <a href="https://duckduckgo.com/?q=cost+of+living+nyc+philadelphia">APIs</a>.</li><li>Attribution <a href="https://duckduckgo.com/goodies.html">on our site</a> and <a href="https://twitter.com/duckduckhack">Twitter</a> (working on more).</li><li>See your code live on a <a href="https://duckduckgo.com/traffic.html">growing</a> search engine!</li><li>Learn something new.</li></ul><h3><a class="anchor" name="what-if-im-not-a-coder-at-all"></a>What if I&#39;m not a coder at all?</h3><p>If you don&#39;t code at all and you&#39;ve ended up here, please go over to our <a href="http://ideas.duckduckhack.com/">instant answers ideas forum</a> where you can suggest and comment on instant answer ideas. For instance, identifying the best sources to draw from is extremely important but not many developers know the best sources, which is where you come in! Similarly, you can submit <a href="https://github.com/duckduckgo/duckduckgo/issues?direction=desc&amp;sort=created&amp;state=open">issues about current instant answers</a>. Both of these activities are very valuable and will help direct community efforts.</p><p>If you&#39;re a business and want your data to be utilized, adding your service to <a href="http://ideas.duckduckhack.com">ideas.duckduckhack.com</a> is a great way for your API to get picked up by a developer and integrated into the search engine.</p><h3><a class="anchor" name="can-you-help-me"></a>Can you help me?</h3><p>Of course! Here are the easiest ways to contact someone who can help answer your questions:</p><ul><li>Write us publicly on the <a href="https://www.listbox.com/subscribe/?list_id=197814">discussion list</a>.</li><li>Write us privately at open@duckduckgo.com.</li></ul><h3><a class="anchor" name="what-if-i-dont-know-perl"></a>What if I don&#39;t know Perl?</h3><p>If you don&#39;t know Perl, that&#39;s OK! Some instant answer types (<a href="fathead_overview">Fathead</a>, <a href="longtail_overview">Longtail</a>) don&#39;t require the use of Perl. Also, if you know PHP, Ruby, or Python you should be able to write a <a href="goodie_overview">Goodie</a> in Perl pretty easily using <a href="http://hyperpolyglot.org/scripting">this awesome cheat sheet</a>.</p><h3><a class="anchor" name="do-you-have-any-instant-answer-ideas"></a>Do you have any instant answer ideas?</h3><p>Yup! We maintain <a href="http://ideas.duckduckhack.com/">a growing list</a>. There are also improvement ideas for <a href="https://github.com/duckduckgo/zeroclickinfo-goodies/issues">Goodies</a>, <a href="https://github.com/duckduckgo/zeroclickinfo-spice/issues">Spice</a>, <a href="https://github.com/duckduckgo/zeroclickinfo-fathead/issues">Fathead</a> and <a href="https://github.com/duckduckgo/zeroclickinfo-longtail/issues">Longtail</a>.</p><h3><a class="anchor" name="how-do-i-note-that-ive-started-on-something"></a>How do I note that I&#39;ve started on something?</h3><p>In your initial pull request, please note the link on the <a href="http://ideas.duckduckhack.com/">idea list</a>. We&#39;ll move it to the &quot;in process&quot; bucket for you.</p><h3><a class="anchor" name="where-i-can-report-instant-answer-bugs"></a>Where I can report instant answer bugs?</h3><p>Submit GitHub issues in the <a href="http://github.com/duckduckgo">appropriate repo</a>.</p><h3><a class="anchor" name="what-if-there-are-instant-answer-conflicts"></a>What if there are instant answer conflicts?</h3><p>The ultimate arbiter is the user, and that&#39;s the perspective we take. In other words, we ask &quot;what is best for the user experience?&quot; That said, it often makes sense to combine ideas into one, better instant answer.</p><h3><a class="anchor" name="why-isnt-my-instant-answer-in-the-a-hrefhttpsapiduckduckgocomduckduckgo-instant-answers-apia"></a>Why isn&#39;t my instant answer in the <a href="https://api.duckduckgo.com">DuckDuckGo Instant Answers API</a>?</h3><p>If your instant answer is spice or longtail, sometimes we can&#39;t expose it through the API for licensing reasons (e.g., the WolframAlpha instant answer), but ourover-arching goal is to make all of our instant answers available on their own.</p><h3><a class="anchor" name="can-i-do-something-more-complicated"></a>Can I do something more complicated?</h3><p>Maybe. There are a bunch more internal interfaces we haven&#39;t exposed yet, and we&#39;d love to hear your ideas to influence that roadmap.</p><h3><a class="anchor" name="whats-the-roadmap"></a>What&#39;s the roadmap?</h3><p>Here&#39;s what we&#39;re working on (in roughly in this order):</p><ul><li>better testing/file structure for spice instant answers.</li><li>better JS interface for spice instant answer callback functions.</li><li>better attribution.</li><li>embedding instant answers.</li><li>better testing/file structure for fathead instant answers.</li><li>more defined structure for longtail instant answers.</li><li>better testing for longtail instant answers.</li></ul><h3><a class="anchor" name="are-there-other-open-source-projects"></a>Are there other open source projects? </h3><p>Yes! Check out the other repositories in <a href="https://github.com/duckduckgo">our GitHub account</a>. You can email open@duckduckgo.com if you have any questions on those.</p><h3><a class="anchor" name="can-i-get-the-instant-answers-through-an-api"></a>Can I get the instant answers through an API?</h3><p>Yes! Check out the <a href="https://api.duckduckgo.com">DuckDuckGo API</a>. Our goal is to make as many instant answers as possibleavailable through this interface. Fathead and goodie instant answers are automatically syndicated through the API, and Spice and Longtail are selectively (due to licensing complications) mixed in.</p><h3><a class="anchor" name="can-i-talk-to-you-about-a-partnership-idea"></a>Can I talk to you about a partnership idea?</h3><p>Sure -- check out <a href="http://help.duckduckgo.com/customer/portal/articles/775109-partnerships">our partnerships page</a>.	http://duck.co/duckduckhack/faq#spice#general-faq
Spice Goodie FAQ	A										<h3><a class="anchor" name="can-goodie-instant-answers-make-network-requests"></a>Can Goodie instant answers make network requests?</h3><p>No. If you are trying to use an API, you should consider creating a Spice instant answer instead.</p><h3><a class="anchor" name="can-goodie-instant-answers-include-the-users-query-string"></a>Can Goodie instant answers include the user&#39;s query string?</h3><p>Yes. <strong>However</strong>, they must be handled <em>very</em> carefully. User-supplied strings create a lot of potential for <a href="https://www.owasp.org/index.php/Cross-site_Scripting_%28XSS%29">cross-site scripting attacks</a>.  While the platform attempts to mitigate these issues in pure ASCII responses, HTML responses should <strong>never</strong> include a raw query string. It is safest to return only data which is generated by your Goodie itself.	http://duck.co/duckduckhack/faq#spice#goodie-faq
Spice FAQ	A										<h3><a class="anchor" name="i-want-to-use-x-api-but-it-doesnt-have-an-endpoint-for-y-what-should-i-do"></a>I want to use &#39;X&#39; API, but it doesn&#39;t have an endpoint for &#39;Y&#39;. What should I do?</h3><p>Email them! - If you explain what it&#39;s for, they might be willing to create and endpoint for you! If not, it&#39;s probably best to find another API.</p><h3><a class="anchor" name="can-i-use-an-api-that-returns-xml"></a>Can I use an API that returns XML?</h3><p>Sorry, but <strong>no</strong>. We currently don&#39;t support XML. We&#39;re considering it though...</p><h3><a class="anchor" name="can-i-use-an-api-that-returns-html-or-a-string"></a>Can I use an API that returns HTML or a String? </h3><p>If the response is a single string, then yes - you can use <code>zci wrap_jsonp_callback</code>. You can read more about that <a href="http://duck.co/duckduckhack/faq#spice#">here</a>. Or take a look at the <a href="https://github.com/duckduckgo/zeroclickinfo-spice/blob/spice2/lib/DDG/Spice/Automeme.pm#L8">Automeme</a> instant answer. If the response is more complicated, then sorry but <strong>no</strong>.</p><h3><a class="anchor" name="can-i-use-the-x-y-or-z-javascript-library"></a>Can I use the &#39;X&#39;, &#39;Y&#39; or &#39;Z&#39; JavaScript library?</h3><p>Probably not. Maybe, if it is very small, but we prefer that no third party, extra libraries are used. <strong><em>Please</em></strong> ask us first before writing an instant answer that is <strong>dependent</strong> on an extra library - we don&#39;t want you to waste your time and energy on something we can&#39;t accept!</p><h3><a class="anchor" name="can-i-use-coffeescript"></a>Can I use Coffeescript?</h3><p>No.</p><h3><a class="anchor" name="what-about"></a>What about...</h3><p>Nope. Just use JavaScript, please and thanks :)	http://duck.co/duckduckhack/faq#spice#spice-faq
Spice Fathead FAQ	A										<h3><a class="anchor" name="how-can-i-test-my-output-file"></a>How can I test my output file?</h3><p>Unfortunately, there is no way for contributors to do so. But if you&#39;ve gotten that far, we want to hear about it! Please open a pull request and we&#39;ll help you through the testing process.</p><h3><a class="anchor" name="what-can-go-in-a-result-abstract"></a>What can go in a result abstract?</h3><p>A result abstract can be either plain text (generally one readable sentence, ending in a period), or HTML. Special care needs to be taken when abstracts contain HTML. Please let us know ahead of time if you are planning to use HTML.</p><p>(This section is still growing! Know what should go here? Then <strong>please</strong> <a href="https://github.com/duckduckgo/duckduckgo-documentation/blob/master/CONTRIBUTING.md">contribute to the documentation</a>!)	http://duck.co/duckduckhack/faq#spice#fathead-faq
Spice Longtail FAQ	A										<p>(This section is coming soon! Know what should go here? Then <strong>please</strong> <a href="https://github.com/duckduckgo/duckduckgo-documentation/blob/master/CONTRIBUTING.md">contribute to the documentation</a>!)	http://duck.co/duckduckhack/faq#spice#longtail-faq
Fathead Step 1	A										<p>Clone the fathead repo from github with following command	http://duck.co/duckduckhack/fathead_basic_tutorial#step-1
Fathead Step 2	A										<p>We need to create a Perl file aka metafile (<strong>HelloWorldInC.pm</strong>) under <strong>lib/DDG/Fathead</strong> with basic details about the instant answer. For our &quot;<strong><em>Hello world in C</em></strong>&quot; example, basic metafile should look like </p><pre><code class="language-perl"># content of lib/DDG/Fathead/HelloWorldInC.pm package DDG::Fathead::HelloWorldInC;use DDG::Fathead;primary_example_queries &quot;hello world in c&quot;;secondary_example_queries    &quot;hello world c program&quot;,    &quot;hello world in c programming&quot;;description &quot;Hello World programs in C language&quot;;name &quot;HelloWorldInC&quot;;source &quot;GitHub&quot;;code_url &quot;https://raw.github.com/leachim6/hello-world/master/c/c.c&quot;;topics &quot;geek&quot;, &quot;programming&quot;;category &quot;programming&quot;;1;	http://duck.co/duckduckhack/fathead_basic_tutorial#step-2
Fathead Step 3	A										<p>Now create directory named <strong>HelloWorldInC</strong> under <strong>share</strong> directory.	http://duck.co/duckduckhack/fathead_basic_tutorial#step-3
Fathead Step 4	A										<p>Create a file <strong>fetch.sh</strong>. This shell script is invoked to fetch the data. For example, following script will retrieve the <strong>c.c</strong> file and place it under <strong>download</strong> directory</p><pre><code class="language-shell">$ cat zeroclickinfo-fathead/share/HelloWorldInC/fetch.sh #!/bin/bashwget --directory-prefix=download https://raw.github.com/leachim6/hello-world/master/c/c.c</code></pre><p>Please ensure all tmp files created under <strong>download</strong> directory. Go ahead and execute the <strong>fetch.sh</strong> script like</p><pre><code class="language-shell">$./fetch.sh</code></pre><p>It should create a <strong>c.c</strong> file under <strong>download</strong> directory.	http://duck.co/duckduckhack/fathead_basic_tutorial#step-4
Fathead Step 5	A										<p>Our objective is to parse the fetched data and create an output file (<strong>output.txt</strong>).In order to parse, we write wrapper called <strong>parse.sh</strong> which will invoke the actual scriptwhich can be written in your favorite language (.pl, .py, .rb, .js, etc)</p><pre><code class="language-shell">$ cat zeroclickinfo-fathead/share/HelloWorldInC/parse.sh #!/bin/bashpython parse.py	http://duck.co/duckduckhack/fathead_basic_tutorial#step-5
Fathead Step 6	A										<p>As we can see above, we have the wrapper script which simply invokes the following Python script, which willread <strong>download/c.c</strong> and format it then write into <strong>output.txt</strong> file.</p><pre><code class="language-python"># content of  zeroclickinfo-fathead/share/HelloWorldInC/parse.py #!/usr/bin/env python3# -*- coding: utf-8 -*-import  logging, osclass HelloWorldItem:  def __init__(self, language, filename, source):    self.language = language    self.filename = filename    source = source.replace(&#39;\\n&#39;, &#39;~~~n&#39;)    source = source.replace(&#39;\n&#39;, &#39;\\n&#39;)    source = source.replace(&#39;~~~n&#39;, &#39;\\\\n&#39;)    self.source = source.replace(&#39;\t&#39;, &#39;\\t&#39;)  def __str__(self):    fields = [ &quot;hello world (%s)&quot; % self.language,               &quot;&quot;, # namespace               &quot;https://raw.github.com/leachim6/hello-world/master/c/c.c&quot;,               &quot;Hello World in %s (%s)&quot; % (self.language, self.filename),               self.source, # synopsis (code)             ]    output = &quot;%s\n&quot; % (&quot;\t&quot;.join(fields))    return outputif __name__ == &quot;__main__&quot;:    # setup logger    logging.basicConfig(level=logging.INFO,format=&quot;%(message)s&quot;)    logger = logging.getLogger()        # dump config items into output.txt    with open(&quot;output.txt&quot;, &quot;wt&quot;) as output_file:        for filepath in os.listdir(&#39;download/&#39;):	    filepath =  os.path.join(&#39;download/&#39;,filepath)            _,filename = os.path.split(filepath)            language,_ = os.path.splitext(filename)            with open(filepath, &#39;r&#39;) as f:                source = f.read()                                item = HelloWorldItem(language, filename, source)            output_file.write(str(item))    logger.info(&quot;Parsed domain successfully&quot;)	http://duck.co/duckduckhack/fathead_basic_tutorial#step-6
Fathead Step 7	A										<p>Now we will execute the Python script via wrapper like </p><pre><code class="language-shell">$ ./parse.sh Parsed domain successfully</code></pre><p>It has created the final <strong>output.txt</strong> file.	http://duck.co/duckduckhack/fathead_basic_tutorial#step-7
Fathead Step 8	A										<p>The content of output file is</p><pre><code class="language-shell">$ cat output.txt hello world (c)		https://raw.github.com/leachim6/hello-world/master/c/c.c	Hello World in c (c.c)	#include&lt;stdio.h&gt;\n\nint main(void) {\n\tprintf(&quot;Hello World\\n&quot;);\n\treturn 0;\n}\n</code></pre><p>As we need to complete the tutorial in 10 steps here comes 	http://duck.co/duckduckhack/fathead_basic_tutorial#step-8
Fathead Step 8.5	A										<p>:) You can commit this <strong>output.txt</strong> along with Perl,Bash script or Python (.pm/.sh/.py) files since <strong>output.txt</strong> is less than <strong>1MB</strong>. 	http://duck.co/duckduckhack/fathead_basic_tutorial#step-8.5
Fathead Step 9	A										<p>You can create optional <strong>data.url</strong> file which will point to URL that contains the data to process.Thus you don&#39;t need to perform fetch operation (step 4).	http://duck.co/duckduckhack/fathead_basic_tutorial#step-9
Fathead Step 10	A										<p>You can add specific instruction or any dependencies on a file named <strong>README.txt</strong>.The final structure of your <strong>share/HelloWorldInC</strong> should look like </p><pre><code class="language-shell">$ lsdata.url  download  fetch.sh  output.txt  parse.py  parse.sh  README.txt</code></pre><p>That&#39;s it, go ahead, create a patch and sent it for review.</p>								</div><p>This is a basic tutorial about how to add instant answer for query &quot;<strong><em>Hello world in C</em></strong>&quot; with DuckDuckGo in 10 steps!</p><strong><em>Hello world in C</em></strong><em>Hello world in C</em>	http://duck.co/duckduckhack/fathead_basic_tutorial#step-10
Fathead Structure	A										<p>Each Fathead instant answer has its own directory. Some of the directories are in use on the live system, and some are still in development.</p><p>Each directory has a structure like this:</p><pre><code class="language-shell"># This is a Perl file that lists some meta information about the instant answerlib/DDG/Fathead/FatheadName.pm# This shell script is called to fetch the data. # Tmp files should go in a directory called download.share/fathead_name/fetch.sh# This is the script used to parse the data once it has been fetched. # .xx can be .pl, .py, .rb, .js, etc. depending on what language you use.share/fathead_name/parse.xx# This shell script is called to run the parser. share/fathead_name/parse.sh# Please include any dependencies here,# or other special instructions for people# trying to run it.share/fathead_name/README.txt# This is the output file.# Generally it should NOT be committed,# but if it is small (&lt;1MB) it is useful to do so.share/fathead_name/output.txt# This is an optional pointer to a URL in the cloud somewhere,# which contains the data to process.share/fathead_name/data.url	http://duck.co/duckduckhack/fathead_overview#structure
Fathead Data File Format	A										<p>Please name the output file output.txt (tab delimited) but do not store the data file(s) in the repository (as noted above) unless it is under 1MB.</p><p>The output file needs to use UTF-8 encoding so we can process it. Please make sure you write your parse scripts accordingly or we&#39;ll probably run into some problems getting it integrated.</p><p>The output format from parse.xx depends on the type of content. In any case, it should be a tab delimited file, with one line per entry. Usually there is no need for newline characters, but if there is a need for some reason, escape them with a backslash like \\n. If you want a newline displayed, use &lt;br&gt;</p><p>The output fields are as follows, not all are required to have values, but all must be accounted for in the delimitations. This example is written in simple <a href="https://duckduckgo.com/Perl">Perl</a>.</p><pre><code class="language-perl"># REQUIRED: full article title, e.g. Perl.# This should be unique across the data set.my $title = $line[0] || &#39;&#39;;# REQUIRED: # A for article.# D for disambiguation page.# R for redirect.my $type = $line[1] || &#39;&#39;;# Only for redirects, e.g., # an alias for a title such as# a common misspelling or AKA.# For example: Duck Duck Go -&gt; DuckDuckGo.# The format is the full title of the Redirect, e.g., DuckDuckGo.my $redirect = $line[2] || &#39;&#39;;# Ignore.my $otheruses = $line[3] || &#39;&#39;;# You can put the article in multiple categories, and category pages will be created automatically.# E.g.: http://duckduckgo.com/c/Procedural_programming_languages# You would do: Procedural programming languages\\n# You can have several categories, separated by an escaped newline.# Categories should generally end with a plural noun.my $categories = $line[4] || &#39;&#39;;# Ignore.my $references = $line[5] || &#39;&#39;;# You can reference related topics here, which get turned into links in the Zero-click Info box.# On the perl example, e.g., Perl Data Language# You would do: [[Perl Data Language]]# If the link name is different, you could do [[Perl Data Language|PDL]]my $see_also = $line[6] || &#39;&#39;;# Ignore.my $further_reading = $line[7] || &#39;&#39;;# You can add external links that get put first when this article comes out.# The canonical example is an official site, which looks like:# [$url Official site]\\n# You can have several, separated by an escaped newline though only a few will be used.# You can also have before and after text or put multiple links in one like this.# Before text [$url link text] after text [$url2 second link].\\nmy $external_links = $line[8] || &#39;&#39;;# Ignore.my $disambiguation = $line[9] || &#39;&#39;;# You can reference an external image that we will download and reformat for display.# You would do: [[Image:$url]]my $images = $line[10] || &#39;&#39;;# This is the snippet info.# It should generally be ONE readable sentence, ending in a period.my $abstract = $line[11] || &#39;&#39;;# This is the full URL for the source.# If all the URLs are relative to the main domain, # this can be relative to that domain.my $source_url = $line[12] || &#39;&#39;;In all this may look like:print &quot;$title\t$type\t\t\t$categories\t\t$see_also\t\t$external_links\t\t$images\t$abstract\t$source_url\n&quot;;</code></pre><p>There is a pre-process script that is run on this output, which:<em> drops duplicates (on $title).</em> reduces $abstract to one sentence.<em> drops records that look like spam.</em> normalizes spacing.* makes sure the $abstract ends in a sentence.	http://duck.co/duckduckhack/fathead_overview#data-file-format
Fathead Code Blocks	A										<p>If you want to include a code snippet or another pre-formatted example in the abstract, like the <a href="https://duckduckgo.com/?q=perl+open">perl</a> Fathead, wrap the code block like this:	http://duck.co/duckduckhack/fathead_overview#code-blocks
Fathead Notes	A										<p>There should be no duplicates in the $page (first) variable. If you have multiple things named the same thing you have a number of options:  - make disambiguation pages  - put everything in one snippet  - pick the most general one</p>								</div>	http://duck.co/duckduckhack/fathead_overview#notes
Goodie Further Qualifying the Query	A										<p>Trigger words are coarse filters; they may send you queries you cannot handle. Your instant answer should return nothing in these cases.  As such, you generally need to further qualify the query in your code.</p><p>There are many techniques for doing this qualification.  One of the most popular is to <code>return</code> as soon as a query can be disqualified.</p><p>As an example, the <a href="https://github.com/duckduckgo/zeroclickinfo-goodies/blob/master/lib/DDG/Goodie/Base.pm">Base Goodie&#39;s</a> has a <code>return</code> statement paired with an <code>unless</code> right on the first line of its <code>handle</code> function:</p><pre><code class="language-perl">handle remainder =&gt; sub {  return unless  /^([0-9]+)\s*(?:(?:in|as)\s+)?(hex|hexadecimal|octal|oct|binary|base\s*([0-9]+))$/;  ...	http://duck.co/duckduckhack/goodie_advanced_handle_functions#further-qualifying-the-query
Goodie Using Files in the Share Directory	A										<p>Goodies can use simple text or html input files for display or processing. These files can be read once and reused to answer many queries without cluttering up your source code.</p><p>The <code>share</code> function gives each instant answer access to a subdirectory of the repository&#39;s <code>share</code> directory. The subdirectory for your instant answer is based on its Perl package name which is transformed from CamelCase to underscore_separated_words.  For example, the <a href="https://github.com/duckduckgo/zeroclickinfo-goodies/blob/master/lib/DDG/Goodie/RegexCheatSheet.pm">DDG::Goodie::RegexCheatSheet package</a> uses the directory <a href="https://github.com/duckduckgo/zeroclickinfo-goodies/tree/master/share/goodie/regex_cheat_sheet">share/goodie/regex_cheat_sheet</a> to store its custom CSS.	http://duck.co/duckduckhack/goodie_advanced_handle_functions#using-files-in-the-share-directory
Goodie Generating Data Files	A										<p>In some cases, you may need to generate the data files you will <code>slurp</code> from the share directory. If so, please put the required generation scripts in the Goodie&#39;s <code>share</code> directory. While <strong>shell scripts are preferred</strong>, your scripts can be written in the language of your choice.</p><p>As an example, the <a href="https://github.com/duckduckgo/zeroclickinfo-goodies/tree/master/share/goodie/currency_in">CurrencyIn Goodie</a> uses a <a href="https://github.com/duckduckgo/zeroclickinfo-goodies/tree/master/share/goodie/currency_in">combination of Shell and Python scripts</a> to generate its input data, <code>currency.txt</code>.</p>								</div>	http://duck.co/duckduckhack/goodie_advanced_handle_functions#generating-data-files
Basic Goodie Tutorial	A										<p>In this tutorial, we&#39;ll be making a Goodie instant answer that checks the number of characters in a given search query. The end result  works <a href="https://duckduckgo.com/?q=chars+How+many+characters+are+in+this+sentence%3F">like this</a> and will look like this:	http://duck.co/duckduckhack/goodie_basic_tutorial#basic-goodie-tutorial
Naming our Goodie Package	A										<p>To begin, open your favourite text editor like <a href="http://projects.gnome.org/gedit/">gedit</a>, notepad or <a href="http://www.gnu.org/software/emacs/">emacs</a> and type the following:</p><pre><code class="language-perl">package DDG::Goodie::Chars;# ABSTRACT: Give the number of characters (length) of the query.</code></pre>	http://duck.co/duckduckhack/goodie_basic_tutorial#naming-our-goodie-package
Import the Goodie Class	A										<p>Next, type the following <a href="https://duckduckgo.com/?q=perl+use">use statement</a> to import <a href="https://github.com/duckduckgo/duckduckgo/tree/master/lib/DDG">the magic behind</a> our instant answer system.</p><pre><code class="language-perl">use DDG::Goodie;</code></pre><p><strong>**Note:</strong> Right after the above line, you should include any Perl modules that you&#39;ll be leveraging to help generate the answer. <strong>Make sure</strong> you add those modules to the <code>dist.ini</code> file in this repository. If you&#39;re not using any additional modules, carry on!	http://duck.co/duckduckhack/goodie_basic_tutorial#import-the-goodie-class
Goodie Define the Trigger Word(s)	A										<p>On the next line, type:</p><pre><code class="language-perl">triggers start =&gt; &#39;chars&#39;;</code></pre><p><strong>triggers</strong> are keywords/phrases that tell us when to make the instant answer run. When a particular <em>trigger word</em> (or phrase) is part of a search query, it tells DuckDuckGo to <em>trigger</em> the instant answer(s) that have indicated they should trigger for the given word (or phrase).</p><p>In this case there is one trigger word: &quot;<strong>chars</strong>&quot;. </p><p>Let&#39;s say someone searched &quot;<strong>chars this is a test</strong>&quot;. <strong>chars</strong> is the <em>first</em> word, so it would trigger our Goodie because the <strong>start</strong> keyword says, &quot;Make sure the <em>trigger word</em> is at the <em>start</em> of the query.&quot; </p><p>There are several other keywords like <strong>start</strong> which will be covered shortly. The <strong>=&gt;</strong> symbol is there to separate the trigger words from the keywords (for readability).	http://duck.co/duckduckhack/goodie_basic_tutorial#define-the-trigger-word(s)
Goodie Define the Handle Function	A										<p>Moving on, enter this on the next line:</p><pre><code class="language-perl">handle remainder =&gt; sub {</code></pre><p>Once triggers are specified, we define how to <em>handle</em> the query. <code>handle</code> is another keyword, similar to <strong>triggers</strong>.</p><p>You can <em>handle</em> different parts of the search query, but the most common is the <strong>remainder</strong>, which refers to the remainder of the query, after the first matched trigger word/phrase has been removed. 	http://duck.co/duckduckhack/goodie_basic_tutorial#define-the-handle-function
Goodie Return True at EOF	A										<p>Finally, all Perl packages that load correctly should <a href="http://stackoverflow.com/questions/5293246/why-the-1-at-the-end-of-each-perl-package">return a true value</a> so add a 1 on the very last line, and make sure to also add a newline at the end of the file.</p><pre><code class="language-perl">1;</code></pre><p>And that&#39;s it! At this point you have a working Goodie instant answer. 	http://duck.co/duckduckhack/goodie_basic_tutorial#return-true-at-eof
Goodie Recap	A										<p>The instant answer system works like this at the highest level:</p><ul><li><p>We break the query (search terms) down into separate words, which is a process that happens in the background.</p></li><li><p>We see if any of those words or groups of words are <strong>triggers</strong> for any instant answers. These <strong>triggers</strong> are defined by the developer when creating an instant answer. In the example we used above, the trigger word is &quot;<strong>chars</strong>&quot;.</p></li><li><p>If a Goodie is triggered, we run its <code>handle</code> function.</p></li><li><p>If the Goodie&#39;s handle function outputs an instant answer via a <strong>return</strong> statement, we display it at the top of the SERP (search engine results pages).</p></li></ul>								</div>	http://duck.co/duckduckhack/goodie_basic_tutorial#recap
Goodie Instant Answers	A										<p>Goodies are Perl-only instant answers that can essentially be contained within one Perl function. They are evaluated on our servers and include no external calls to other services.</p><p>Some Goodies are extremely simple, such as the <a href="https://duckduckgo.com/?q=capitalize+duckduckgo+instant+answers">Capitalize</a> Goodie, which simply uses the perl <code>uc</code> function to uppercase a string. However, Goodies have the potential to be extremely complex and powerful such as the <a href="https://duckduckgo.com/?q=%28879+*+14%29+%2F+12">Calculator</a> or <a href="https://duckduckgo.com/?q=4pm+EST+to+GMT">Timezone Converter</a> Goodies.</p><p>If you&#39;re new to DuckDuckHack or Perl, writing a simple Goodie instant answer is probably the quickest and easiest way to get started with DuckDuckHack.</p><p><strong>**Note:</strong> Goodies <strong><em>cannot</em></strong> make HTTP requests</p>								</div>	http://duck.co/duckduckhack/goodie_overview#goodie-instant-answers
Goodie Testing	A										<p>Testing is crucial to ensuring a smooth integration process.  This section of the documentation walks you through the process of testing everything that you&#39;ve written so far. Don&#39;t forget to write your test files!	http://duck.co/duckduckhack/goodie_testing_triggers#testing
Goodie Interactive Testing	A										<p>Before reading this section, make sure you&#39;ve worked through the the <a href="goodie_basic_tutorial">Basic Goodie Tutorial</a> or the <a href="spice_basic_tutorial">Basic Spice Tutorial</a>.	http://duck.co/duckduckhack/goodie_testing_triggers#interactive-testing
Goodies Tests	A										<p>For this example, we will look at the test file of the <strong>RouterPasswords</strong> Goodie, which is <code>t/RouterPasswords.t</code> <a href="https://github.com/duckduckgo/zeroclickinfo-goodies/blob/master/t/RouterPasswords.t">(link)</a>.	http://duck.co/duckduckhack/goodie_tests#goodies-tests
Goodie Word Triggers	A										<h3><a class="anchor" name="usage"></a>Usage</h3><pre><code class="language-perl">triggers &lt;location&gt; =&gt; &lt;array of words and phrases&gt;</code></pre>	http://duck.co/duckduckhack/goodie_triggers#word-triggers
Goodie Regex Triggers	A										<h3><a class="anchor" name="usage"></a>Usage</h3><pre><code class="language-perl">triggers &lt;query_format&gt; =&gt; &lt;regular expression&gt;</code></pre>	http://duck.co/duckduckhack/goodie_triggers#regex-triggers
Goodie Regex Guards	A										<p>We much prefer you use <strong>trigger words</strong> when possible because they are faster on the backend. In some cases however, <strong>regular expressions</strong> are necessary, e.g., you need to trigger on sub-words. In this case we suggest you consider using a <strong>word trigger</strong> and supplement it with a <strong>regex guard</strong>. A regex guard is a return clause immediately inside the <code>handle</code> function.</p><p>A good example of this is the Base64 goodie. In this case we want to trigger on queries with the form &quot;base64 encode/decode &lt;string&gt;&quot;. Here&#39;s an excerpt from <a href="https://github.com/duckduckgo/zeroclickinfo-goodies/blob/master/lib/DDG/Goodie/Base64.pm">Base64.pm</a> which shows how this case is handled using a word trigger, with a regex guard:</p><pre><code class="language-perl">triggers startend =&gt; &quot;base64&quot;;handle remainder =&gt; sub {    return unless $_ =~ /^(encode|decode|)\s*(.*)$/i;</code></pre>								</div>	http://duck.co/duckduckhack/goodie_triggers#regex-guards
DuckDuckHack Everyone (Reviewing Quality):	A										<h3><a class="anchor" name="whats-an-instant-answer-made-of"></a>What&#39;s an instant answer made of?</h3><ol><li>Some code</li><li>A data source (like a website)</li></ol><h3><a class="anchor" name="how-do-they-work"></a>How do they work?</h3><p>Instant answers are a bundle of code that make information from one source available directly on DuckDuckGo. Anyone can suggest them and anyone can create them!Check out some examples of what we mean:</p><ul><li><p><a href="https://duckduckgo.com/?q=define+hello">Definition search:</a></p><ul><li><a href="https://github.com/duckduckgo/zeroclickinfo-spice/blob/master/share/spice/dictionary/definition/dictionary_definition.js">Code</a></li><li><a href="https://www.wordnik.com/">Data Source</a></li></ul></li><li><p><a href="https://duckduckgo.com/?q=running+shoes+coupons">Coupon search:</a></p><ul><li><a href="https://github.com/duckduckgo/zeroclickinfo-spice/blob/master/share/spice/coupon_mountain/coupon_mountain.js">Code</a></li><li><a href="http://www.couponmountain.com/">Data Source</a></li></ul></li></ul><h3><a class="anchor" name="what-were-looking-for-in-qa"></a>What we&#39;re looking for in QA</h3><p><strong>Function:</strong> Is the instant answer actually useful?Instant answers should <em>always</em> be unambiguously <strong>better</strong> than organic links. If it doesn&#39;t add value to the page, then it should not be approved.</p><ul><li><strong>Example test:</strong> Search for something that will trigger the instant answer and compare it to the organic links. The user should benefit from having the instant answer available. In the best case scenario, the instant answer should give the user all the information they need, so they don&#39;t even have to click a link. At the very least, the instant answer should offer some different and more valuable information than the links.</li></ul><p><strong>Relevancy:</strong> Does the instant answer always provide relevant information?Instant answers should only show information that is correct and relevant to the user&#39;s search. If an instant answer is capable of returning irrelevant information (e.g., &quot;free gaming apps&quot; should <em>only</em> show free apps, &quot;the dark knight movie&quot; should ensure both words, &quot;dark&quot; and &quot;knight&quot; are in the resulting movie&#39;s title), then the relevancy must be improved before the instant answer is accepted and goes live.</p><ul><li><strong>Example test:</strong> Search for something that will trigger the instant answer and compare the information provided to the original source&#39;s website (if one exists) or another credible source. For example, if the instant answer performs arithmetic operations, you could verify that its calculations are correct using your calculator at home. If it provides movie information, you could verify that it&#39;s correct using Wikipedia or IMdB.</li></ul><p><strong>Triggering:</strong> Does the instant answer trigger when it shouldn&#39;t? Are there any queries that <em>should</em> trigger the instant answer, but don&#39;t?Goodie and Spice instant answers use a list of, &quot;trigger words&quot; (or phrases) that signal DuckDuckGo to use that instant answer when those triggers appear in a search query. If they are too generic, it will cause the instant answer to be shown in cases which are inappropriate. For example, &quot;app&quot; is a very generic word which occurs in many queries that aren&#39;t necessarily an app search. Instant answers that use generic triggers should always further qualify the query to make sure it should return an answer. On the other hand, if triggers are too specific, it can lead users to believe that an instant answer doesn&#39;t exist for that topic or query space, reducing the value in searching with DuckDuckGo.</p><ul><li><strong>Example test:</strong> Can you think of any queries that should or shouldn&#39;t be triggering this instant answer? Let&#39;s say we have an instant answer that shows movies, and it triggers with the term, &quot;movie&quot;. The query, &quot;movie Thor&quot; would trigger this instant answer, but other queries, such as, &quot;watch Thor&quot;, &quot;Thor movies&quot;, &quot;film Thor&quot; or &quot;Thor film&quot; should also trigger this instant answer.</li></ul><p><strong>Adult Content:</strong>Is the instant answer effectively preventing adult words or inappropriate content from showing? There shouldn&#39;t be any adult imagery or profanity in instant answers, by default. If an instant answer is capable of displaying profanity or questionable adult humor, it should not be approved (if it&#39;s vulgar or distasteful), or it can be set to only show when safe search is off. If ever in doubt, please ask community leaders or DDG staff for help.</p><ul><li><strong>Example test:</strong> Check if the instant answer is capable of producing profanity or adult imagery by searching for relevant (profane) keywords or risquÃ© content. If so, the instant answer should block all instances of adult language and adult imagery. If not, you&#39;ve found a bug! </li></ul><p><strong>Design:</strong>Can we minimize the space used? How does it look on smaller screens? Can you break the design? For example, try using non-UTF8 characters or long search queries. Do the design and layout make sense given the type of information? Does it look and feel like other instant answers? (It should!) Spotting design bugs and improvements can be tricky, since everyone&#39;s eye for design is a bit different, but you can refer to live instant answers as an example.</p><ul><li><strong>Example test:</strong> Test the instant answer with a few different queries. Make sure the most important information is easy to identify and understand. The information shouldn&#39;t be too crowded or too sparse. Try previewing the instant answer on a mobile device (phone, tablet) and check if the design breaks or if too much vertical space is used. Ideally, an instant answer on mobile screens should <strong><em>not</em></strong> push organic links off the page. If this is the case, look for ways to either increase the information density or reduce the information shown — this is a great way to determine what information is absolutely necessary and deserves to be shown.</li></ul><p><strong>Conflicts:</strong>Does it conflict with other instant answers? We wouldn&#39;t want to step on the query space of other instant answers.</p><ul><li><strong>Example test:</strong> Check to see if an instant answer already exists for the new instant answer&#39;s triggers. For example, <a href="https://duckduckgo.com/?q=bill+murray">a search for &quot;Bill Murray&quot;</a> currently shows Wikipedia, so if the new instant answer will show for searches like, &quot;Bill Murray,&quot; then it should be noted to the developer in case one instant answer is better than the other.	http://duck.co/duckduckhack/how_to_qa#everyone-(reviewing-quality):
DuckDuckHack Developers (Reviewing Code):	A										<p><strong>High Level (Perl &amp; JavaScript)</strong></p><ul><li><p>Is this the right instant answer type? Would it be better to implement this as another IA type?</p><ul><li>If this should really be another IA type (e.g., JavaScript heavy Goodie should probably be a Spice) it&#39;s best to note this as early in the process as possible, since the instant answer will need to be re-implemented and a new pull-request submitted.</li></ul></li><li><p>What other data is available from this source? (check the API response for anything really useful that&#39;s not being displayed).</p></li><li><p>Is this the best layout/design to display all the data? (For Spice, consider the various templates)</p></li><li><p>Does the API often return irrelevant results? If so, consider using the <code>isRelevant()</code> function or, if that is already in use, improve the client-side relevancy checking by making it more strict.</p></li></ul><p><strong>Regarding the code...</strong></p><ul><li><p>The code should well organized. If things don&#39;t make sense, make comments and ask questions! It&#39;s better to go overboard with your feedback than to hold back. </p><ul><li>For Perl modules, metadata comes first, then static variables and function definitions, then the <code>handle</code> function last.</li></ul></li><li><p>The code should be easy to understand and follow. Other developers must be able to understand the code reasonably well, in case fixes or improvements need to be made.</p><ul><li><p>Non-trivial functions and processes should be well documented.</p></li><li><p>The code should be written to optimize performance and efficiency while maintaining simplicity and legibility (where applicable and without causing performance problems).</p></li><li><p>Inefficient code should be noted and improvements should be suggested.</p></li></ul></li><li><p>Are the caching parameters correct? Should we <em>not</em> cache the API responses? (they are cached by default)</p><ul><li>Consider <code>is_cached</code> and <code>proxy_cache_valid</code>.</li></ul></li><li><p>If an instant answer is capable of displaying profanity or questionable adult humor, make sure the <code>is_unsafe</code> flag is set.</p></li></ul><p><strong>Low Level (Perl)</strong></p><ul><li><p>Static variables (e.g., lists, hashes, regular expressions) and helper functions should not be declared inside <code>handle</code> functions (this will cause them to be redefined each time the instant answer is triggered). The same applies when reading files — the file handler should be outside the <code>handle</code> function.</p></li><li><p>Long lists of trigger words/phrases should be moved to a <code>triggers.txt</code> file (in the share directory) and <code>slurp()</code> should be used to convert them into a list.</p></li><li><p>API Keys should not be merged in, the proper placeholder syntax should be used <code>{{ENV{DDG_SPICE_&lt;SPICE_NAME&gt;_APIKEY}}}</code></p><ul><li>DDG staff should also be notified so we can get our own API Key.</li></ul></li><li><p>Check if existing CPAN libraries can replace some functions. We can use libraries for a variety of things and you can find them all on <a href="https://metacpan.org/">MetaCPAN</a>.</p></li></ul><p><strong>Low Level (JavaScript)</strong></p><ul><li><p>Semicolons must be used; Point out any missing semicolons;</p></li><li><p>Cross-browser compatibility is very important! Use jQuery methods where applicable to ensure this. We&#39;re trying to support IE 8, and it&#39;s good to be aware of these. Search for the method on MDN if you&#39;re unsure.</p><ul><li>e.g., <code>Array.prototype.forEach()</code> should be replaced with <code>$.each()</code>.</li></ul></li><li><p>Watch out for <code>console.log</code> — that won&#39;t work on IE 8.</p></li><li><p>JavaScript that runs before the rendering of the Spice (<code>Spice.render()</code>) should be used to error-check, massage, and organize the data that will be passed on to the template.</p></li><li><p>Template helpers should be used to format output and decide what should be shown.</p></li><li><p>HTML should not be created or inserted into the DOM before or after rendering. For example, don&#39;t use jQuery to build your display, that&#39;s what templates are for :)</p></li><li><p>Templates and sub-templates should be used when dealing with HTML, not jQuery.</p></li><li><p>Don&#39;t declare any global variables. JavaScript has function scope, so anything outside of a function is global (or part of the <code>window</code> object). Also, variables that were not declared with <code>var</code> are globals, too. Check out the <a href="http://bonsaiden.github.io/JavaScript-Garden/#function.general">JavaScript Garden</a> for more information about this.</p><ul><li>On this note, make sure <a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Functions_and_function_scope/Strict_mode?redirectlocale=en-US&amp;redirectslug=JavaScript%2FReference%2FFunctions_and_function_scope%2FStrict_mode">strict mode</a> is enabled. This helps catch the usual pitfalls in JS.</li></ul></li><li><p><code>if</code> statements should always use curly braces, <code>{}</code></p></li></ul>								</div>	http://duck.co/duckduckhack/how_to_qa#developers-(reviewing-code):
DuckPAN	A										<p><strong>The DuckDuckHack Testing Tool</strong></p><p>DuckPAN is an application built to provide developers a testing environment for DuckDuckHack Instant Answers. It allows you to test instant answer triggers and preview their visual design and output.	http://duck.co/duckduckhack/installing_duckpan#duckpan
Duckpan Disclaimer	A										<p>Currently, DuckPAN has been developed on, and works well with <strong>Ubuntu</strong>. More specifically, we regularly build, test and run DuckPAN on <strong>Ubuntu 12.04</strong>. We have also successfully installed and run DuckPAN on older and newer Ubuntu releases, e.g. Ubuntu 10.04, 12.10, and 13.04.</p><p>Developers have also been successful running DuckPAN on other Linux distros (e.g. Arch, Debian) and on Mac OS X 10.8 and later, but <strong>we make no promises that it will work outside of Ubuntu</strong>.</p><p>As well, <strong>there have been reported issues with installing DuckPAN on Windows</strong>, so we don&#39;t recommend you go down that path.</p><p>That being said, we are more than willing to help you debug any installation problems, so please come to us with your problems and we&#39;ll try to get your issues sorted out. If you&#39;d like some help from our community, feel free to engage with them on the <a href="http://duck.co/">DuckDuckGo forum</a>.	http://duck.co/duckduckhack/installing_duckpan#disclaimer
Duckpan Getting Started	A										<p>The easiest way to get started with DuckPAN is to <strong>use <a href="http://duck.co/duckduckhack/installing_duckpan#codio-project-template">our Codio Project Template</a></strong>. Alternative ways to install DuckPAN include:</p><ul><li>Use our DuckDuckHack development virtual machine image (<a href="http://duck.co/duckduckhack/installing_duckpan#duckduckhack-development-virtual-machine">see below</a>); or</li><li>Use the Vagrant virtual environment to run DuckDuckHack (<a href="http://duck.co/duckduckhack/installing_duckpan#vagrant-virtual-environment">see below</a>); or</li><li>Download and install <a href="http://www.ubuntu.com/download">Ubuntu</a> yourself; or</li><li>Download and install a different Linux distro (but as mentioned above, you may run into issues).	http://duck.co/duckduckhack/installing_duckpan#getting-started
Duckpan Codio Project Template	A										<ol><li>Create an account on <a href="https://codio.com/">Codio</a>.</li><li>Go to <a href="https://codio.com/duckduckgo/duckduckhack">https://codio.com/duckduckgo/duckduckhack</a> and fork the project. Make sure to fork the project and the box.<br><img alt="Codio Fork" src="https://raw.githubusercontent.com/duckduckgo/duckduckgo-documentation/master/duckpan/assets/codio_fork.png"><img alt="Codio Fork Both" src="https://raw.githubusercontent.com/duckduckgo/duckduckgo-documentation/master/duckpan/assets/codio_fork_both.png"></li><li>Visit one of our instant answer repositories (such as <a href="https://github.com/duckduckgo/zeroclickinfo-spice),">https://github.com/duckduckgo/zeroclickinfo-spice),</a> and follow GitHub&#39;s instructions to first <a href="https://help.github.com/articles/fork-a-repo">fork</a> the repository. You can then clone the repo into your Codio machine (You need to open the Terminal for this).<br><img alt="Codio Terminal" src="https://raw.githubusercontent.com/duckduckgo/duckduckgo-documentation/master/duckpan/assets/codio_terminal.png"></li><li>Go into the directory (by typing in <code>cd zeroclickinfo-spice</code>) and run <code>duckpan server</code>. Click on &quot;DuckPAN Server&quot; to view the webpage.<br><img alt="Codio Server" src="https://raw.githubusercontent.com/duckduckgo/duckduckgo-documentation/master/duckpan/assets/codio_server.png"></li><li>You&#39;re all set!<br><img alt="Codio Success" src="https://raw.githubusercontent.com/duckduckgo/duckduckgo-documentation/master/duckpan/assets/codio_success.png"></li></ol><p>Try typing in queries like &quot;define hello,&quot; and see if it works for you. You might be wondering why there are no search results in the page. It&#39;s because DuckPAN isn&#39;t configured to work with search resultsâit&#39;s only for testing instant answers.	http://duck.co/duckduckhack/installing_duckpan#codio-project-template
Duckpan DuckDuckHack Development Virtual Machine	A										<p>The purpose of our DuckDuckHack VM is to provide a sandbox for DuckDuckGo Instant Answer development that is quick to set up and start working with.</p><h4><a class="anchor" name="ddh-vm-breakdown"></a>DDH VM Breakdown</h4><ul><li>Ubuntu 12.04 LTS</li><li>Perl 5.16.3 (managed by Perlbrew)</li><li>build-essential (for make, gcc, cc, etc)</li><li>cpanminus (managed by Perlbrew)</li><li>App::DuckPAN</li><li>XFCE Window Manager</li><li>SublimeText, vim, emacs</li><li>Firefox (Configured via fixtracking.com)</li><li>Platform specific virtualization guest tools (optimizes hardware emulation)	http://duck.co/duckduckhack/installing_duckpan#duckduckhack-development-virtual-machine
Duckpan For VirtualBox hosts	A										<p>ddh-vbox.rar<br>MD5: 1734373cbecc5820bb7d18406eb42854<br><a href="https://ddg-community.s3.amazonaws.com/ddh-vbox.rar">https://ddg-community.s3.amazonaws.com/ddh-vbox.rar</a>	http://duck.co/duckduckhack/installing_duckpan#for-virtualbox-hosts
Duckpan For VMWare hosts	A										<p>ddh-vmw.rar:<br>MD5: 95ad9acfacadb4b0cb0cf23ffaa3516e<br><a href="https://ddg-community.s3.amazonaws.com/ddh-vmw.rar">https://ddg-community.s3.amazonaws.com/ddh-vmw.rar</a>	http://duck.co/duckduckhack/installing_duckpan#for-vmware-hosts
Duckpan Using the Virtual Machine	A										<p>To use the Virtual Machine, you will need to download and install <strong>VirtualBox</strong>, <strong>VMWare Workstation</strong> or <strong>VMWare Player</strong>, depending on your current OS.	http://duck.co/duckduckhack/installing_duckpan#using-the-virtual-machine
Duckpan Vagrant Virtual Environment	A										<p>The Vagrant-based DuckDuckHack virtual environment provides a similar sandbox to the DuckDuckHack VM, but rather than downloading a prebuilt VM, Vagrant creates an environment for you based on the defined configuration.  Vagrant is an awesome tool for building development environments.  One command - <code>vagrant up</code> - gets you a complete working environment in minutes.  Something go wrong with the environment?  No messing around with snapshots.  Tear the VM down and build a fresh environment.  The DuckDuckHack Vagrant environment uses Chef cookbooks and the DuckPAN installer script, so configuration is transparent and easily shared.</p><p>Through the Vagrant configuration, you can easily switch back and forth between a headless-mode and the traditional VirtualBox interface.  The configuration defaults to headless.	http://duck.co/duckduckhack/installing_duckpan#vagrant-virtual-environment
Installing DuckPAN	A										<p><strong>**Note</strong>: You don&#39;t need to install DuckPAN if you&#39;re using our DuckDuckHack virtual machine or the Vagrant virtual environment. It&#39;s already installed for you!</p><p>To install DuckPan, open your terminal and run:</p><pre><code class="language-shell">curl http://duckpan.org/install.pl | perl</code></pre>	http://duck.co/duckduckhack/installing_duckpan#installing-duckpan
Using DuckPAN	A										<p>Running <code>$ duckpan</code> with no commands will output some help information. More details on the DuckPAN commands can be found in the <a href="https://github.com/duckduckgo/p5-app-duckpan/blob/master/README.md">DuckPAN Readme</a>.</p>								</div>	http://duck.co/duckduckhack/installing_duckpan#using-duckpan
DuckDuckHack Location API	A										<p>Some instant answers need the user&#39;s location to provide the most relevant results. For example, since weather conditions vary widely around the world, the <a href="https://github.com/duckduckgo/zeroclickinfo-spice/blob/master/lib/DDG/Spice/Snow.pm">Is it snowing?</a> instant answer depends on knowing where the user is located.	http://duck.co/duckduckhack/location_api#location-api
Longtail Example	A										<p><img alt="lyrics example" src="https://s3.amazonaws.com/ddg-assets/docs/longtail_example.png">	http://duck.co/duckduckhack/longtail_overview#example
Longtail Structure	A										<p>Longtails consist of two primary files. The first is a metadata file that describes the instant answer you are building. Its structure is identical to the Fathead metadata file, described <a href="https://github.com/duckduckgo/zeroclickinfo-fathead#meta-file">here</a>. The second, which can be generated using a language of your choosing, contains the data set in a format ready for us to deploy:</p><pre><code>&lt;!-- This XML declaration can be simply copied and is necessary for all longtail. --&gt;&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&lt;add allowDups=&quot;true&quot;&gt;&lt;!-- Each result is contained inside a &lt;doc&gt; element. --&gt;&lt;doc&gt;&lt;!-- The title field is used in the zeroclickinfo header, and is the heaviest weighted string used for query matching. --&gt;&lt;!-- The CDATA entity is used for all content that might contain unsafe data --&gt;&lt;field name=&quot;title&quot;&gt;&lt;![CDATA[U.S. House Bill #289]]&gt;&lt;/field&gt;&lt;!-- The lx_sec fields are also used for query matching, with decreasing precedence. They can be omitted. --&gt;&lt;field name=&quot;l2_sec&quot;&gt;&lt;![CDATA[Recognizing the 50th anniversary of the National Institute of Dental Research.]]&gt;&lt;/field&gt;&lt;field name=&quot;l3_sec&quot;&gt;&lt;![CDATA[House Committee on Commerce]]&gt;&lt;/field&gt;&lt;field name=&quot;l4_sec&quot;&gt;&lt;![CDATA[Anniversaries, Commemorations, Congress, Congressional tributes, Dental care, Dentistry, Department of Health and Human Services, Government operations and politics, Health, Legislation, Medical research, Research centers, Science, technology, communications]]&gt;&lt;/field&gt;&lt;!-- The paragraph field contains the text/HTML that will be displayed inside the zeroclickinfo box. --&gt;&lt;field name=&quot;paragraph&quot;&gt;&lt;![CDATA[Commemorates the creation of the National Institute of Dental Research, through the National Dental Research Act, and its significant national leadership role.]]&gt;&lt;/field&gt;&lt;!-- The p_count field is used to break ties on exact title matches. This should be used when the data is too long to be displayed without being broken into separate paragraphs. It can be omitted. --&gt;&lt;field name=&quot;p_count&quot;&gt;1&lt;/field&gt;&lt;!-- The source field contains the address of the data source. If possible, it should reference the particular resource that this snippet was taken from. --&gt;&lt;field name=&quot;source&quot;&gt;&lt;![CDATA[http://www.govtrack.us/]]&gt;&lt;/field&gt;&lt;/doc&gt;</code></pre><p>(This section is still growing! Know what should go here? Then <strong>please</strong> <a href="https://github.com/duckduckgo/duckduckgo-documentation/blob/master/CONTRIBUTING.md">contribute to the documentation</a>!)</p>								</div>	http://duck.co/duckduckhack/longtail_overview#structure
DuckDuckHack Making a Pull Request	A										<p>Now that you have completed the <a href="https://dukgo.com/duckduckhack/developer_checklist">developer checklist</a> and added <a href="https://dukgo.com/duckduckhack/metadata">Metadata</a> to your instant answer, you are ready to submit a pull request.	http://duck.co/duckduckhack/making_a_pull_request#making-a-pull-request
DuckDuckHack Instant Answer Metadata	A										<p>Including metadata allows us to categorize and describe your instant answer on the <a href="http://duckduckgo.com/goodies">Goodies page</a>. This document explains the different types of metadata that you may add to the source code of your instant answer.	http://duck.co/duckduckhack/metadata#instant-answer-metadata
DuckDuckHack name	A										<p>A unique name for this instant answer.</p><p>While this can be arbitrary, it is considered good practice to have the chosen name be similar to the Perl package in which it is contained, e.g., DDG::Spice::RedditSubSearch.	http://duck.co/duckduckhack/metadata#name
DuckDuckHack source	A										<p>The name of the data source used for your instant answer.	http://duck.co/duckduckhack/metadata#source
DuckDuckHack icon_url (optional)	A										<p>The favicon URL for the data source used.</p><p><strong>Note:</strong> The favicon is not always located at <code>http://domain/favicon.ico</code>. It is often given as an explicit URL in the HTML header as <code>x-icon</code>, <code>apple-touch-icon</code> or similar.</p><p>Favicons can sometimes be found by searching for the data source on DuckDuckGo. If a favicon exists, we will display it beside any results from that domain. Feel free to use our link from there :)</p><pre><code class="language-perl">icon_url &quot;http://www.reddit.com/favicon.ico&quot;;</code></pre><p>or, for DuckDuckGo-sourced favicons,	http://duck.co/duckduckhack/metadata#icon_url-(optional)
DuckDuckHack description	A										<p>A succinct explanation of what the instant answer does. Please <strong>exclude</strong> the source name if possible.	http://duck.co/duckduckhack/metadata#description
DuckDuckHack primary_example_queries	A										<p>Examples of the most common types of queries which will trigger the instant answer.	http://duck.co/duckduckhack/metadata#primary_example_queries
DuckDuckHack secondary_example_queries (optional)	A										<p>Examples of other, less common, trigger words or phrases for the instant answer, if applicable.	http://duck.co/duckduckhack/metadata#secondary_example_queries-(optional)
DuckDuckHack category	A										<p>The category into which your instant answer best fits.	http://duck.co/duckduckhack/metadata#category
DuckDuckHack topics	A										<p>A list of the topics to which your instant answer applies.	http://duck.co/duckduckhack/metadata#topics
DuckDuckHack code_url	A										<p>URL for the instant answer code on github.	http://duck.co/duckduckhack/metadata#code_url
DuckDuckHack attribution	A										<p>Information about you, the author.	http://duck.co/duckduckhack/metadata#attribution
DuckDuckHack Preparing for Pull Request	A										<p>By now you should have:</p><ul><li>Determined your instant answer type</li><li>Forked the correct repository</li><li>Written the code for your instant answer</li><li>Written a comprehensive test for your instant answer</li><li>Verified that everything works and nothing is broken</li><li>Confirmed the instant answer adheres to the design guidelines</li></ul><p>At this point you are ready to add metadata to your instant answer, so we can showcase your instant answer on the <a href="https://duckduckgo.com/goodies">Goodies page</a>.</p><p><strong>**Note</strong>: If your pull request is an update to an <strong><em>existing</em></strong> Instant Answer, don&#39;t forget to add yourself to the attribution too!</p>								</div>	http://duck.co/duckduckhack/preparing_for_a_pull_request#preparing-for-pull-request
DuckDuckHack Review Process	A										<p>When you submit a pull request, a community leader will assign themselves to your pull request and work with you to get your instant answer live on DuckDuckGo. All comments and suggestions for your pull request should be discussed publicly in the pull request on Github, so that others can follow the progression. Of course, you can always contact anyone from the community or team if you have questions. Here are some community leaders who are available to help out: 	http://duck.co/duckduckhack/review_process#review-process
Spice Handlers	A										<ul><li><p><a href="http://duck.co/duckduckhack/spice_advanced_backend#Multiple-Placeholders-in-Spice-To-URL">Multiple Placeholders in Spice To URL</a></p></li><li><p><a href="http://duck.co/duckduckhack/spice_advanced_backend#Returning-Multiple-Values-to-Spice-From">Returning Multiple Values (to Spice From)</a></p></li><li><p><a href="http://duck.co/duckduckhack/spice_advanced_backend#api-keys">API Keys</a></p></li><li><p><a href="http://duck.co/duckduckhack/spice_advanced_backend#json-gt-jsonp">JSON -&gt; JSONP</a></p></li><li><p><a href="http://duck.co/duckduckhack/spice_advanced_backend#pure-js-functions">Pure JS functions</a></p></li><li><p><a href="http://duck.co/duckduckhack/spice_advanced_backend#caching-api-responses">Caching API Responses</a></p></li><li><p><a href="http://duck.co/duckduckhack/spice_advanced_backend#caching-api-calls">Caching API Calls</a>	http://duck.co/duckduckhack/spice_advanced_backend#spice-handlers
Multiple Placeholders in Spice To URL	A										<p>If you need to substitute multiple parameters into the API call like how the <a href="https://github.com/duckduckgo/zeroclickinfo-spice/blob/master/lib/DDG/Spice/RandWord.pm">RandWord Spice</a> uses two numbers to specify the min and max length of the random word, you can use the <strong>Spice from</strong> keyword:</p><pre><code class="language-perl">spice from =&gt; &#39;(?:([0-9]+)\-([0-9]+)|)&#39;;</code></pre><p>Whatever you return from the handle function gets sent to this <strong>spice from</strong> regexp, which then gets fed into the <strong>spice to</strong> API:</p><p>For example, if your <code>handle</code> function looked like this:</p><pre><code class="language-perl">handle remainder =&gt; sub {  ...  if ( $foo ){    my $minMax = &quot;10-100&quot;    return $minMax;  }  return;}</code></pre>	http://duck.co/duckduckhack/spice_advanced_backend#multiple-placeholders-in-spice-to-url
Returning Multiple Values (to Spice From)	A										<p>You can have multiple return values in your handle function like the <a href="https://github.com/duckduckgo/zeroclickinfo-spice/blob/master/lib/DDG/Spice/AlternativeTo.pm">AlternativeTo Spice</a>.</p><pre><code class="language-perl">return $prog, $platform, $license;</code></pre><p>In this case they are URL encoded and joined together with &#39;/&#39; chars, e.g., in this case <strong>$prog/$platform/$license</strong>. Then that full string is fed into the <strong>spice from</strong> regexp.	http://duck.co/duckduckhack/spice_advanced_backend#returning-multiple-values-(to-spice-from)
Spice API Keys	A										<p>Some APIs require API keys to function properly like in the <a href="https://github.com/duckduckgo/zeroclickinfo-spice/blob/master/lib/DDG/Spice/RandWord.pm">RandWord Spice</a>. You can insert an API key for testing in the callback function and replace it with a variable reference when submitting.</p><pre><code class="language-perl">spice to =&gt; &#39;http://api.wordnik.com/v4/words.json/randomWord?minLength=$1&amp;maxLength=$2&amp;api_key={{ENV{DDG_SPICE_RANDWORD_APIKEY}}}&amp;callback={{callback}}&#39;;</code></pre><p>You can set the variable when you start DuckPAN server like this:	http://duck.co/duckduckhack/spice_advanced_backend#api-keys
Spice JSON -> JSONP	A										<p>Some APIs don&#39;t do JSONP by default, i.e. don&#39;t have the ability to return the JSON object to a callback function. In this case, first you should try to contact the API provider and see if it can be added. Where it cannot, you can tell us to wrap the JSON object return in a callback function like in the <a href="https://github.com/duckduckgo/zeroclickinfo-spice/blob/master/lib/DDG/Spice/Xkcd.pm">XKCD Spice</a>.	http://duck.co/duckduckhack/spice_advanced_backend#json-->-jsonp
Spice Pure JS functions	A										<p>Sometimes no external API is necessary to deliver the instant answer like how the <a href="https://github.com/duckduckgo/zeroclickinfo-spice/blob/master/lib/DDG/Spice/FlashVersion.pm">Flash Version Spice</a> just prints out your <a href="https://duckduckgo.com/?q=flash+version">Flash Player version</a> using an <a href="https://github.com/duckduckgo/zeroclickinfo-spice/blob/master/share/spice/flash_version/spice.js">internal call</a>.</p><p>In cases like these you can define a <strong>spice_call_type</strong> as &#39;self&#39; like this:</p><pre><code class="language-perl">spice call_type =&gt; &#39;self&#39;;</code></pre><p>Then in the handle function you can return call, e.g.:</p><pre><code class="language-perl">return $_ eq &#39;flash version&#39; ? call : ();</code></pre><p>The return of <strong>call</strong> will run whatever is in the <strong>call_type</strong> setting. <strong>self</strong> is a special keyword to just run the callback function directly, in this case <strong>ddg_spice_flash_version()</strong>.	http://duck.co/duckduckhack/spice_advanced_backend#pure-js-functions
Spice Caching	A										<p>Spice instant answers have two forms of caching: API Response caching (remembers the JSON returned from the API) and API Call caching (remembers the API call URL created for a given query). Both of these will be explained with examples.	http://duck.co/duckduckhack/spice_advanced_backend#caching
Spice	A										<p>(Know what should go here? Then <strong>please</strong> <a href="https://github.com/duckduckgo/duckduckgo-documentation/blob/master/CONTRIBUTING.md">contribute to the documentation</a>!)	http://duck.co/duckduckhack/spice_attributes#spice
Spice	A										<p>(Know what should go here? Then <strong>please</strong> <a href="https://github.com/duckduckgo/duckduckgo-documentation/blob/master/CONTRIBUTING.md">contribute to the documentation</a>!)	http://duck.co/duckduckhack/spice_attributes#spice
Spice	A										<p>If the API used for your instant answer does not support JSONP (ie. it doesn&#39;t provide a URI parameter to indicate the callback function to be used on the API response), set <code>wrap_jsonp_callback</code> to true and the API response will automatically be wrapped in the appropriate function call for your instant answer.	http://duck.co/duckduckhack/spice_attributes#spice
Spice	A										<p>(Know what should go here? Then <strong>please</strong> <a href="https://github.com/duckduckgo/duckduckgo-documentation/blob/master/CONTRIBUTING.md">contribute to the documentation</a>!)	http://duck.co/duckduckhack/spice_attributes#spice
Spice	A										<p>If your instant answer has the potential to return unsafe results (eg. contains vulgar words, crude humour) the <code>is_unsafe</code> flag must be set to true. Any instant answers that have <code>is_unsafe</code> set to true can only be seen when a user has safe-search turned off, or when they add the phrase <code>!safeoff</code> to their query (eg. &quot;automeme !safeoff&quot;).</p>								</div>	http://duck.co/duckduckhack/spice_attributes#spice
Basic Spice Tutorial	A										<p>In this tutorial, we&#39;ll be making a Spice instant answer that lets you search for Node.js packages, using the <a href="http://registry.npmjs.org/uglify-js/latest">Node Packaged Modules API</a>. The end result works <a href="https://next.duckduckgo.com/?q=npm+http-server">like this</a> and the first part, the &quot;backend&quot; component, will look like this:	http://duck.co/duckduckhack/spice_basic_tutorial#basic-spice-tutorial
Naming our Spice Package	A										<p>To begin, open your favorite text editor like <a href="http://projects.gnome.org/gedit/">gedit</a>, notepad or <a href="http://www.gnu.org/software/emacs/">emacs</a> and type the following:</p><pre><code class="language-perl">package DDG::Spice::Npm;# ABSTRACT: Returns package information from npm package manager&#39;s registry.</code></pre>	http://duck.co/duckduckhack/spice_basic_tutorial#naming-our-spice-package
Import the Spice Class	A										<p>Next, type the following <a href="https://duckduckgo.com/?q=perl+use">use statement</a> to import <a href="https://github.com/duckduckgo/duckduckgo/tree/master/lib/DDG">the magic behind</a> our instant answer system.</p><pre><code class="language-perl">use DDG::Spice;</code></pre><p><strong>**Note:</strong> Right after the above line, you should include any Perl modules that you&#39;ll be leveraging to help generate the answer. <strong>Make sure</strong> you add those modules to the <code>dist.ini</code> file in this repository. If you&#39;re not using any additional modules, carry on!	http://duck.co/duckduckhack/spice_basic_tutorial#import-the-spice-class
Spice Define the Trigger Word(s)	A										<p>On the next line, type:</p><pre><code class="language-perl">triggers startend =&gt; &#39;npm&#39;;</code></pre><p><strong>triggers</strong> are keywords/phrases that tell us when to make the instant answer run. When a particular <em>trigger word</em> (or phrase) is part of a search query, it tells DuckDuckGo to <em>trigger</em> the instant answer(s) that have indicated they should trigger for the given word (or phrase).	http://duck.co/duckduckhack/spice_basic_tutorial#define-the-trigger-word(s)
Spice Define the API Call	A										<p>On the next line enter:</p><pre><code class="language-perl">spice to =&gt; &#39;http://registry.npmjs.org/$1/latest&#39;;</code></pre><p>The <strong>spice to</strong> attribute indicates the API endpoint we&#39;ll be using, which means a <code>GET</code> request will be made to this URL. The URL has a <strong>$1</strong> placeholder, which will eventually be replaced with whatever string our <code>handle</code> function (which we&#39;ll define shortly) returns. Generally, Spice instant answers use a search endpoint for a given API and so, we&#39;ll need to pass along our search term(s) in the API request. We do this by returning the desired search terms in the <code>handle</code> function and then the <strong>$1</strong> placeholder, in the <code>spice to</code> URL, will be replaced accordingly.	http://duck.co/duckduckhack/spice_basic_tutorial#define-the-api-call
Spice Indicate our Callback Function	A										<p>In most cases, APIs allow for a &quot;callback&quot; parameter, which usually looks like this:</p><pre><code class="language-perl">http://www.api.awesome.com/?q=&lt;search_term&gt;&amp;callback=&lt;function_name&gt;</code></pre><p>This parameter is used to wrap the JSON object being returned, in a JavaScript function call to the function named in the <code>callback</code> parameter. Unfortunately, the NPM API doesn&#39;t allow for this parameter to be specified, so we force this manually by using the <strong>spice wrap_jsonp_callback</strong> function. Enter this text on the next line to do this:</p><pre><code class="language-perl">spice wrap_jsonp_callback =&gt; 1;</code></pre>	http://duck.co/duckduckhack/spice_basic_tutorial#indicate-our-callback-function
Spice Define the Handle Function	A										<p>Moving on, enter this on the next line:</p><pre><code class="language-perl">handle remainder =&gt; sub {</code></pre><p>Once triggers are specified, we define how to <em>handle</em> the query. <code>handle</code> is another keyword, similar to <strong>triggers</strong>.</p><p>You can <em>handle</em> different parts of the search query, but the most common is the <strong>remainder</strong>, which refers to the remainder of the query, after the first matched trigger word/phrase has been removed. 	http://duck.co/duckduckhack/spice_basic_tutorial#define-the-handle-function
Spice Return True at EOF	A										<p>Finally, all Perl packages that load correctly should <a href="http://stackoverflow.com/questions/5293246/why-the-1-at-the-end-of-each-perl-package">return a true value</a> so add a <code>1;</code> on the very last line.</p><pre><code class="language-perl">1;</code></pre><p>And that&#39;s it! At this point you have written a functional backend for a Spice instant answer. Now, the frontend components need to written so that we can display our instant answer result on the page.	http://duck.co/duckduckhack/spice_basic_tutorial#return-true-at-eof
Spice Recap (So Far)	A										<p>The instant answer system works like this at the highest level:</p><ul><li><p>First, DuckDuckGo breaks down the query (search terms) into separate words.</p></li><li><p>Then we see if any of those words or groups of words are <strong>triggers</strong> for any instant answers. These <strong>triggers</strong> are defined by the developer when creating an instant answer. In the example we used above, the trigger word is &quot;<strong>npm</strong>&quot;.</p></li><li><p>If a Spice is triggered, we run its <code>handle</code> function.</p></li><li><p>If the Spice&#39;s <code>handle</code> function returns a value, it is used to replace our <strong>$1</strong> placeholder in the <strong>spice to</strong> URL, and then a request is made to that URL. When the API responds with a JSON object, it is wrapped in a function call, making the JSON object the input to our JavaScript callback function.	http://duck.co/duckduckhack/spice_basic_tutorial#recap-(so-far)
Spice Invoke an Immediate Function	A										<h6><a class="anchor" name="npmjs-continued"></a>npm.js (continued)</h6><pre><code class="language-javascript">(function (env) {    &quot;use strict&quot;;</code></pre>	http://duck.co/duckduckhack/spice_basic_tutorial#invoke-an-immediate-function
Spice Define our Callback Function	A										</h2><pre><code class="language-javascript">    env.ddg_spice_npm = function (api_result) {</code></pre>	http://duck.co/duckduckhack/spice_basic_tutorial#define-our-callback-function
Spice Validate our API Response	A										<h6><a class="anchor" name="npmjs-continued"></a>npm.js (continued)</h6><pre><code class="language-javascript">        if (api_result.error) {            return Spice.failed(&#39;npm&#39;);        }</code></pre>	http://duck.co/duckduckhack/spice_basic_tutorial#validate-our-api-response
Display our Spice Result (and Specify some Details)	A										<h6><a class="anchor" name="npmjs-continued"></a>npm.js (continued)</h6><pre><code class="language-javascript">        Spice.add({            id: &quot;npm&quot;,            name: &quot;NPM&quot;,            data: api_result,            meta: {                sourceName: &quot;npmjs.org&quot;,                sourceUrl: &#39;http://npmjs.org/package/&#39; + api_result.name            },            templates: {                group: &#39;base&#39;,                options:{                    content: Spice.npm.content,                    moreAt: true                }            }        });</code></pre><p>Here we make a call to the <code>Spice.add()</code> function, which operates on an input object that we normally define inside the function call. Let&#39;s go over each of the parameters specified in the object we give to <code>Spice.add()</code>:	http://duck.co/duckduckhack/spice_basic_tutorial#display-our-spice-result-(and-specify-some-details)
Spice Global Import	A										<pre><code class="language-javascript">    }}(this));</code></pre><p>Lastly, we close our callback function expression, as well as our module, and we &quot;import&quot; the global scope, via <code>this</code>, as the input to our module. This means within the module, we can access the global scope using the <code>env</code> variable defined at the very beginning.	http://duck.co/duckduckhack/spice_basic_tutorial#global-import
Spice Define our Handlebars Template	A										<p>At this point, the rendering of the Spice instant answer changes context from JavaScript to Handlebars.js. As mentioned, our <code>Spice.add()</code> call specifies our template and the <strong>context</strong> for the template, so now <code>Spice.add()</code> executes the template function using <code>data</code> as the input. Let&#39;s look at the NPM instant answer&#39;s Handlebars template to see how it displays the instant answer result:	http://duck.co/duckduckhack/spice_basic_tutorial#define-our-handlebars-template
Spice All Done!	A										<p>And that&#39;s it, you&#39;re done! You now have a working Spice instant answer! The backend (Perl) tells DuckDuckGo when to trigger our Spice and the frontend (JavaScript &amp; Handlebars) tells DuckDuckGo what to put on the page. Before moving on, lets do a quick recap...	http://duck.co/duckduckhack/spice_basic_tutorial#all-done!
Spice What We've Accomplished	A										<p>We&#39;ve created <strong>one</strong> file in the Spice lib directory, <code>lib/DDG/Spice/</code>, named <code>Npm.pm</code>, which defines the API to use and the triggers for our Spice and we&#39;ve created <strong>two</strong> files in the Spice share directory, <code>share/spice/npm/</code>:</p><ol><li><code>npm.js</code> - which delegates the API&#39;s response and calls <code>Spice.add()</code></li><li><code>detail.handlebars</code> - which specifies the instant answer&#39;s HTML structure and determines which properties of the API response are placed into the HTML result</li></ol><p>Again, the Spice instant answer system works like so:</p><ul><li><p>First, DuckDuckGo breaks down the query (search terms) into separate words.</p></li><li><p>Then we see if any of those words or groups of words are <strong>triggers</strong> for any instant answers. These <strong>triggers</strong> are defined by the developer when creating an instant answer. In the example we used above, the trigger word is &quot;<strong>npm</strong>&quot;.</p></li><li><p>If a Spice is triggered, we run its <code>handle</code> function.</p></li><li><p>If the Spice&#39;s <code>handle</code> function returns a value, it is used to replace our <strong>$1</strong> placeholder in the <strong>spice to</strong> URL, and then a request is made to that URL. When the API responds with a JSON object, it is wrapped in a function call, making the JSON object the input to our JavaScript callback function.</p></li><li><p>Our JavaScript callback function takes the API result (JSON Object), and passes it along to our <code>Spice.add()</code> call which specifies, using the elements of the JSON object, which parts are to be used in creating the instant answer &quot;More at&quot; link and most importantly, passes along our JSON object to our Spice&#39;s Handlebars template.</p></li><li><p>The template then defines, using HTML and variables, what the actual content for the Spice result will be</p></li><li><p>This content is then created and rendered onto the page by the Spice system&#39;s backend.	http://duck.co/duckduckhack/spice_basic_tutorial#what-we've-accomplished
Spice Next Steps	A										<p>Congratulations! You have now written your first Spice instant answer. Now, let&#39;s move on to testing, so we can make sure our instant answer functions as expected!</p>								</div>	http://duck.co/duckduckhack/spice_basic_tutorial#next-steps
Adding Your Spice to the AnswerBar	A										<p><code>Spice.add()</code> is the most important Spice function and it&#39;s used to add your Spice to the AnswerBar. However, this function is capable of much more than simply showing your Spice result. For example, it can also help you ensure the relevancy and order of results and it enables you to configure the templates your Spice will use. This document provides an in-depth overview of how you can use <code>Spice.add()</code> to make sure your instant answer is excellent.	http://duck.co/duckduckhack/spice_displaying#adding-your-spice-to-the-answerbar
Spice.add Properties Overview	A										<pre><code class="language-javascript">Spice.add({    id: String,    name: String,    data: Object,    meta: {        hidden: boolean,        searchTerm: String,        itemType: String,        primaryText: String,        secondaryText: String,        sourceName: String,        sourceLogo: String,        sourceUrl: String (url),        sourceIcon: Boolean,        sourceIconUrl: String (url),    },    normalize: Function,    relevancy: {        type: String,        skip_words: [, String],        primary: [, Object],        dup: String,    },    templates: {        group: String,        item: String|Function,        item_custom: String|Function,        item_mobile: String|Function,        detail: String|Function,        detail_custom: String|Function,        detail_mobile: String|Function,        item_detail: String|Function,        options: Object    },    sort_fields: Object,    sort_default: Object,    onItemSelect: Function,    onItemUnselect: Function,    onShow: Function,    onHide: Function	http://duck.co/duckduckhack/spice_displaying#spice.add-properties-overview
Spice.add Properties	A										<p>Used to add your Spice to the AnswerBar and has the following required properties:</p><ul><li><a href="http://duck.co/duckduckhack/spice_displaying#id-codestringcode-required">id</a> A unique identifier for your Spice. The <code>id</code> should match the name of your callback function</li><li><a href="http://duck.co/duckduckhack/spice_displaying#name-codestringcode-required">name</a> The name that will be used for your Spice&#39;s AnswerBar tab</li><li><a href="http://duck.co/duckduckhack/spice_displaying#data-codeobjectcode-required">data</a> The object containing the data to be used by your templates</li></ul><p>Other properties and fuctions of <code>spice.add()</code> include:</p><ul><li><a href="http://duck.co/duckduckhack/spice_displaying#instant-answer-metadata">meta</a> Used to define elements of the <strong>MetaBar</strong> including the &quot;More at&quot; link</li><li><a href="http://duck.co/duckduckhack/spice_displaying#data-normalization">normalize</a> This allows you to normalize the <code>data</code> before it is passed on to the template</li><li><a href="http://duck.co/duckduckhack/spice_displaying#templates">templates</a> Used to specify the template group and all other templates that are being used</li><li><a href="http://duck.co/duckduckhack/spice_displaying#relevancy">relevancy</a> Used to ensure the relevancy of your Spice&#39;s result</li></ul>	http://duck.co/duckduckhack/spice_displaying#spice.add-properties
Spice Instant Answer Metadata	A										<p>The following options are used to define elements of the <strong>MetaBar</strong>:</p><ul><li><a href="http://duck.co/duckduckhack/spice_displaying#searchterm">searchTerm</a> Determines the item in the phrase &quot;Showing 15 <code>term</code> &quot;</li><li><a href="http://duck.co/duckduckhack/spice_displaying#itemtype">itemType</a> The type of item being shown (e.g., Videos, Images, Recipes)</li><li><a href="http://duck.co/duckduckhack/spice_displaying#primarytext">primaryText</a>  If defined, this text will replace the MetaBar&#39;s &quot;Showing <strong>n</strong> Items&quot; text</li><li><a href="http://duck.co/duckduckhack/spice_displaying#secondarytext">secondaryText</a> This is an optional text label that will be displayed to the left of the &quot;More at&quot; link</li><li><a href="http://duck.co/duckduckhack/spice_displaying#sourcename">sourceName</a>The name of the source as it should be shown in the &quot;More at&quot; link</li><li><a href="http://duck.co/duckduckhack/spice_displaying#sourceLogo">sourceLogo</a> If defined, the image provided will replace the <code>sourceName</code> with a logo</li><li><a href="http://duck.co/duckduckhack/spice_displaying#sourceurl">sourceUrl</a> The URL to follow when the &quot;More at&quot; link is clicked</li><li><a href="http://duck.co/duckduckhack/spice_displaying#sourceicon">sourceIcon</a> A boolean flag that determines if a favicon should be shown for the &quot;More at&quot; link</li></ul>	http://duck.co/duckduckhack/spice_displaying#instant-answer-metadata
Spice Data Normalization	A										<ul><li><h3><a class="anchor" name="normalize-codefunctioncode-required-depending-on-template-and-data"></a>normalize <code>function</code> [required depending on template and data]</h3><p>This allows you to normalize the <code>data</code> object (or array of items) before it is passed on to the template, by adding or modifying properties that are used by your templates. When dealing with multiple items, the normalize function iterates over each <code>item</code> so they can be individually normalized.</p><p>This function uses jQuery&#39;s <code>$.extend()</code> method, so it will modify your <code>data</code> object by adding any returned properties that don&#39;t already exist, or simply overwrite the ones that do, i.e., a shallow copy is made</p><p>If you are using a built-in template (e.g., <strong>basic_image_item</strong>), it expects that certain properties will be present (e.g <code>title</code>, <code>image</code>) and so the normalized function should be used to provide those or normalize their values if the already exist in your <code>api_result</code>.	http://duck.co/duckduckhack/spice_displaying#data-normalization
Spice Templates	A										<p>A <code>templates: {}</code> property should be used to specify the template group and all other templates that are being used. Template options can also be provided to enable or disable features depending on the chosen template group.</p>	http://duck.co/duckduckhack/spice_displaying#templates
Spice Relevancy	A										<p>If you want to ensure the relevancy of your Spice&#39;s result (usually when dealing with multiple items), the <code>relevancy: {}</code> property can be used to ensure the relevancy of each individual item. It can also be used to de-duplicate the returned items if desired.</p><p>In most cases you will only need to specify relevancy properties for the, <strong>primary</strong> relevancy block. If your Spice is capable of dealing with different types of queries though, where different relevancy checks are necessary, you can supply additional relevancy blocks. For example, the Quixey (Apps) Spice handles two distinct types of app searches, being <strong>categorical</strong> searches, such as &quot;social networking apps&quot;, or more specific, named searches such as &quot;free angry birds apps&quot;. When dealing with <strong>categorical</strong> searches, the name of the app doesn&#39;t need to be checked against the query for relevancy. However, the app&#39;s category does need to be checked and so two separate relevancy blocks, <code>primary</code> and <code>category</code>, are used to define the different relevancy constraints.	http://duck.co/duckduckhack/spice_displaying#relevancy
Spice Relevancy Blocks	A										<p>A relevancy block is comprised of an array of simple objects. For each object, the properties are used to indicate certain constraints. The concept of a relevancy block is best explained with an example:	http://duck.co/duckduckhack/spice_displaying#relevancy-blocks
Spice Sorting	A										<p>In some cases, the order of the tiles is important (e.g., price, rating, popularity) and you can use the sorting properties to specify the default ordering of the tiles. As well, you can specify additional sorting fields that will allow users to re-order the tiles using a different sort method.	http://duck.co/duckduckhack/spice_displaying#sorting
Spice Events	A										<p>If you need to fire off an event handler when a tile is clicked or when your Spice&#39;s tab initially opens, the following properties can be used to define a callback function:</p><ul><li><a href="http://duck.co/duckduckhack/spice_displaying#onitemselect-codefunctioncode">onItemSelect</a> This event occurs each time a tile is selected</li><li><a href="http://duck.co/duckduckhack/spice_displaying#onitemunselect-codefunctioncode">onItemUnselect</a> This event occurs each time a tile is unselected</li><li><a href="http://duck.co/duckduckhack/spice_displaying#onshow-codefunctioncode">onShow</a> This event occurs when a Spice tab initially opens</li><li><a href="http://duck.co/duckduckhack/spice_displaying#onhide-codefunctioncode">onHide</a> This event occurs when a Spice tab is closed i.e. when another tab is selected	http://duck.co/duckduckhack/spice_displaying#events
Spice onItemSelect	A										<p>This event occurs each time a tile is selected.</p><p>Example:</p><pre><code class="language-javascript">onItemSelected: function(item) {   player.play(item);}</code></pre><p><strong>**Note:</strong> If a tile-view result returns a single result, this event will also fire when the tab is opened/clicked, so you don&#39;t need to use both <code>onItemSelected</code> and <code>onShow</code> to handle the case of a single-result tile view	http://duck.co/duckduckhack/spice_displaying#onitemselect
Spice onItemUnselect	A										<p>This event occurs each time a tile is unselected.</p><p><strong>**Note:</strong> If a tile-view result returns a single result, this event will also fire when the tab is closed, so you don&#39;t need to use both <code>onItemSelected</code> and <code>onShow</code> to handle the case of a single-result tile view	http://duck.co/duckduckhack/spice_displaying#onitemunselect
Spice onShow	A										<p>This event occurs when a Spice tab initially opens.	http://duck.co/duckduckhack/spice_displaying#onshow
Spice onHide	A										<p>This event occurs when a Spice tab is closed i.e. when another tab is selected.</p>								</div>	http://duck.co/duckduckhack/spice_displaying#onhide
Spice Frontend Walkthoughs	A										<ul><li><a href="http://duck.co/duckduckhack/spice_frontend_walkthroughs#walkthrough-1-alternativeto-simple">Walkthrough #1: Alternative.To (Simple)</a></li><li><a href="http://duck.co/duckduckhack/spice_frontend_walkthroughs#walkthrough-2-movies-medium">Walkthrough #2: Movies (Medium)</a></li><li><a href="http://duck.co/duckduckhack/spice_frontend_walkthroughs#walkthrough-3-airlines-medium">Walkthrough #3: Airlines (Medium)</a></li><li><a href="http://duck.co/duckduckhack/spice_frontend_walkthroughs#walkthrough-4-quixey-advanced">Walkthrough #4: Quixey (Advanced)</a></li></ul>	http://duck.co/duckduckhack/spice_frontend_walkthroughs#spice-frontend-walkthoughs
Spice Walkthrough #1 - Alternative.To (Simple)	A										<p>The Alternative.To instant answer is very similar to NPM in that it&#39;s also relatively simple. However, it returns multiple items, and so it produces a tile view, where each tile represents a single result item. Let&#39;s take a look at the code and see how this is done:	http://duck.co/duckduckhack/spice_frontend_walkthroughs#walkthrough-#1---alternative.to-(simple)
Spice Helpers (Handlebars)	A										<p>Spice specific Handlebars helpers:</p><ul><li><p><a href="https://duck.co/duckduckhack/spice_handlebars_helpers/#concat">concat</a>: Concatenates all the elements in a collection</p></li><li><p><a href="https://duck.co/duckduckhack/spice_handlebars_helpers/#condense">condense</a>: Shortens a string</p></li><li><p><a href="https://duck.co/duckduckhack/spice_handlebars_helpers/#stripHTML">stripHTML</a>: Strips HTML tags/elements from text</p></li><li><p><a href="https://duck.co/duckduckhack/spice_handlebars_helpers/#loop">loop</a>: Counts from zero to the value of <code>context</code></p></li><li><p><a href="https://duck.co/duckduckhack/spice_handlebars_helpers/#each">each</a>: Extends Handlebars&#39; built-in <code>{{each}}</code> lets you specify optional first and last indices</p></li><li><p><a href="https://duck.co/duckduckhack/spice_handlebars_helpers/#keys">keys</a>: Iterates over the properties of an object and provides a new object containing the &quot;key&quot; and &quot;value&quot; </p></li><li><p><a href="https://duck.co/duckduckhack/spice_handlebars_helpers/#include">include</a>: Loads the specified Handlebars template and applies it with the current context</p></li><li><p><a href="https://duck.co/duckduckhack/spice_handlebars_helpers/#plural">plural</a>: Returns the value of <code>context</code> and appends the singular or plural form of the specified word</p></li><li><p><a href="https://duck.co/duckduckhack/spice_handlebars_helpers/#numFormat">numFormat</a>: Delimits a number or string with multiple numbers, using commas or given delimiter</p></li><li><p><a href="https://duck.co/duckduckhack/spice_handlebars_helpers/#imageProxy">imageProxy</a>: Rewrite a URL as a DuckDuckGo image redirect</p></li><li><p><a href="https://duck.co/duckduckhack/spice_handlebars_helpers/#ellipsis">ellipsis</a>: Shortens a string by removing words until string length is &lt;= <code>limit</code> and appends an ellipsis (&#39;...&#39;) to the output </p></li><li><p><a href="https://duck.co/duckduckhack/spice_handlebars_helpers/#trim">trim</a>: Removes leading and trailing spaces from text </p></li></ul><p>For the built-in helpers included with Handlebars see: <a href="http://handlebarsjs.com/#helpers">Handlebars Helpers</a></p>	http://duck.co/duckduckhack/spice_handlebars_helpers#spice-helpers-(handlebars)
Spice {{#concat}}	A										<p><strong>Block Helper</strong></p><p>Concatenates all the elements in a collection</p><p>An optional item separator can be appended toeach item and an optional conjunction can beused for the last item.</p><p>Example:</p><pre><code class="language-html">{{#concat context sep=&quot;,&quot; conj=&quot;and&quot;}}{{this}}{{/concat}}</code></pre><p>when <code>context</code> is:- <code>[&#39;a&#39;]</code>           returns:  <code>a</code>- <code>[&#39;a&#39;, &#39;b&#39;]</code>      returns:  <code>a and b</code>- <code>[&#39;a&#39;, &#39;b&#39;, &#39;c&#39;]</code> returns:  <code>a, b and c</code></p><p><strong>Parameters</strong></p><p><strong>sep</strong>:  <em>string</em>,  <strong>[optional]</strong> Item separator. Default: <code>&#39;&#39;</code></p><p><strong>conj</strong>:  <em>string</em>,  <strong>[optional]</strong> Final separator, precedes last item. Default: <code>&#39;&#39;</code>	http://duck.co/duckduckhack/spice_handlebars_helpers#{{#concat}}
Spice {{#condense}}	A										<p><strong>Block Helper</strong></p><p>Shortens a string</p><p>An optional maximum string length can be provided if preferred.</p><p>Example:</p><p><code>{{condense myString maxlen=&quot;135&quot; truncation=&quot;...&quot;}}</code></p><p>This will output the value of <code>myString</code> up to a maximum of 135 characters(not including the length of the truncation string) and then appendthe truncation string to the output</p><p><strong>Parameters</strong></p><p><strong>maxlen</strong>:  <em>number</em>,  <strong>[optional]</strong> Maximum allowed string length. Default: <code>10</code></p><p><strong>fuzz</strong>:  <em>number</em>,  The allowable deviation from the maxlen, used to allow a sentence/word to complete if it is less than fuzz characters longer than the maxlen</p><p><strong>{string</strong>,  truncation <strong>[optional]</strong> The truncation string. Default: <code>&#39;...&#39;</code>	http://duck.co/duckduckhack/spice_handlebars_helpers#{{#condense}}
Spice {{#stripHTML}}	A										<p><strong>Block Helper</strong></p><p>Strips HTML tags/elements from text</p><p>Example:</p><p><code>{{#stripHTML stringWithHTML}}Here is my string: {{this}}{{/stripHTML}}</code>	http://duck.co/duckduckhack/spice_handlebars_helpers#{{#striphtml}}
Spice {{#loop}}	A										<p><strong>Block Helper</strong></p><p>Counts from zero to the value of <code>context</code> (assuming <code>context</code> is a <strong>number</strong>)applying the content of the block each time</p><p>Note: A maximum of 100 loops is allowed.</p><p>Example:</p><pre><code class="language-html">{{#loop star_rating}}&lt;img src=&quot;{{star}}&quot; class=&quot;star&quot;&gt;&lt;/span&gt;	http://duck.co/duckduckhack/spice_handlebars_helpers#{{#loop}}
Spice {{#each}}	A										<p><strong>Block Helper</strong></p><p>Extends Handlebars&#39; built-in <code>{{each}}</code>lets you specify optional inclusive first and last indicesto iterate between</p><p>Example:</p><p><code>{{#each myArray from=&quot;2&quot; to=&quot;5&quot;}} ... {{/each}}</code></p><p>This will limit the iteration to array indices 2, 3 and 4.</p><p>If <code>to</code> is not given, defaults to array (or object) length:</p><p><code>{{#each myArray from=&quot;2&quot;}} ... {{/each}}</code></p><p>will skip the first two items</p><p>If <code>from</code> is not given, defaults to 0:</p><p><code>{{#each myArray to=&quot;5&quot;}} ... {{/each}}</code></p><p>will only do the first five items</p><p><strong>Parameters</strong></p><p><strong>from</strong>:  <em>number</em>,  <strong>[optional]</strong> Index to start from. Default: <code>0</code></p><p><strong>to</strong>:  <em>number</em>,  <strong>[optional]</strong> Index to end on. Default: array/object length	http://duck.co/duckduckhack/spice_handlebars_helpers#{{#each}}
Spice {{#keys}}	A										<p><strong>Block Helper</strong></p><p>Iterates over the properties of an object and providesa new object containing the &quot;key&quot; and &quot;value&quot; for each</p><p>Example:</p><pre><code class="language-html">{{#keys myObject}}{{key}} : {{value}}	http://duck.co/duckduckhack/spice_handlebars_helpers#{{#keys}}
Spice {{include}}	A										<p>Loads the specified Handlebars template and applies it withthe current context</p><p>Note: There is no recursive cycle detection! <strong>Be careful</strong>.</p><p>Example:</p><p><code>{{include ../myTemplate}}</code></p><p>Applies the template <code>myTemplate</code> using <code>this</code> as the data context</p><p><code>{{include ../myTemplate with=&quot;x&quot;}}</code></p><p>Applies the template <code>myTemplate</code> using <code>this.x</code> as the data context.Identical to:</p><p><code>{{#with x}} {{include ../template}} {{/with}}</code></p><p><strong>Parameters</strong></p><p><strong>with</strong>:  <em>string</em>,  <strong>[optional]</strong> Context to use when including the template. Supports simple dot paths.	http://duck.co/duckduckhack/spice_handlebars_helpers#{{include}}
Spice {{plural}}	A										<p>Returns the value of <code>context</code> (assuming <code>context</code> is a <strong>number</strong>)and appends the singular or plural form of the specified word,depending on the value of <code>context</code></p><p>Example:</p><p><code>{plural star_rating singular=&quot;star&quot; plural=&quot;stars&quot;}}</code></p><p>Will produce:- <code>{{star_rating}} star</code>  if the value of <code>star_rating</code> is <code>1</code>, or- <code>{{star_rating}} stars</code> if <code>star_rating</code> &gt; <code>1</code></p><p><strong>Parameters</strong></p><p><strong>singular</strong>:  <em>string</em>,  Indicates the singular form to use</p><p><strong>plural</strong>:  <em>string</em>,  Indicates the plural form to use</p><p><strong>delimiter</strong>:  <em>string</em>,  <strong>[optional]</strong> Format the number with the <code>numFormat</code> helper	http://duck.co/duckduckhack/spice_handlebars_helpers#{{plural}}
Spice {{numFormat}}	A										<p>Delimits a number or string with multiple numbers,using commas or given delimiter</p><p>Note: This supports integers and decimal numbers.</p><p>Credit: This function was borrowed from<a href="http://cwestblog.com/2011/06/23/javascript-add-commas-to-numbers/">http://cwestblog.com/2011/06/23/javascript-add-commas-to-numbers/</a></p><p>Example:</p><pre><code class="language-html">{{numFormat num}}{{numFormat num delimiter=&quot;.&quot; }}</code></pre><p><strong>Parameters</strong></p><p><strong>delimiter</strong>:  <em>string</em>,  <strong>[optional]</strong> The delimiter string. Default: <code>&#39;,&#39;</code>	http://duck.co/duckduckhack/spice_handlebars_helpers#{{numformat}}
Spice {{imageProxy}}	A										<p>Rewrite a URL as a DuckDuckGo image redirect</p><p>Example:</p><p><code>{{imageProxy imageURL}}</code></p><p>produces: <code>/iu/?u={{imageURL}}</code>	http://duck.co/duckduckhack/spice_handlebars_helpers#{{imageproxy}}
Spice {{trim}}	A										<p>Removes leading and trailing spaces from text</p><p>Example:</p><p><code>{{trim stringWithSpaces}}</code>	http://duck.co/duckduckhack/spice_handlebars_helpers#{{trim}}
Spice {{ellipsis}}	A										<p>Shortens a string by removing words until string length is &lt;= <code>limit</code> andappends an ellipsis (&#39;...&#39;) to the output</p><p>Note: It automatically appends any closing tag if one is missing.</p><p>Example:</p><p><code>{{ellipsis title 50}}</code></p><p><strong>Parameters</strong></p><p><strong>text</strong>:  <em>string</em>,  text to shorten</p><p><strong>limit</strong>:  <em>number</em>,  maximum length of shortened string</p>								</div>	http://duck.co/duckduckhack/spice_handlebars_helpers#{{ellipsis}}
Spice JavaScript API Reference	A										<p>For a list of avaliable Spice JS functions see:</p><ul><li><a href="http://duck.co/duckduckhack/spice_js_api#ddg-namespace">DDG Namespace Functions</a></li><li><a href="http://duck.co/duckduckhack/spice_js_api#spice-namespace">Spice Namespace Functions</a></li></ul><h1><a class="anchor" name="ddg-namespace"></a>DDG Namespace	http://duck.co/duckduckhack/spice_js_api#spice-javascript-api-reference
Spice get_query_encoded()	A										<p>Provides the value of <code>DDG.get_query</code> as a URIEncoded string</p><p>Note: The query is trimmed (i.e. no leading or trailing spaces) andhas any extra spaces within the query removed	http://duck.co/duckduckhack/spice_js_api#get_query_encoded()
Spice get_query()	A										<p>Provides the search query, as displayed in the search box</p><p>Note: The query is trimmed (i.e. no leading or trailing spaces) andhas any extra spaces within the query removed	http://duck.co/duckduckhack/spice_js_api#get_query()
Spice get_is_safe_search()	A										<p>Indicates if &quot;safe search&quot; is on, for the current query</p><p><strong>Returns</strong></p><p><em>boolean</em>,  Either <code>1</code> or <code>0</code> (on/off)	http://duck.co/duckduckhack/spice_js_api#get_is_safe_search()
Get_asset_path(spice_name, asset)	A										<p>Provides the path to the given asset, for the specified Spice Instant Answer</p><p>Example:</p><p><code>DDG.get_asset_path(&#39;quixey&#39;, &#39;quixey_logo.png&#39;)</code> -&gt; <code>&#39;/share/spice/quixey/1234/quixey_logo.png&#39;</code></p><p><strong>Parameters</strong></p><p><strong>spice_name</strong>:  <em>string</em>,  The name of the Spice (this gives us the correct <code>/spice/share</code> sub-directory)</p><p><strong>asset</strong>:  <em>string</em>,  The filename of the asset, including extension	http://duck.co/duckduckhack/spice_js_api#get_asset_path(spice_name,-asset)
Spice getRelevants(p)	A										<p>Provides an array of relevant strings, given an input array of comparator strings</p><p>Note: This is a shortcut to running <code>isRelevant()</code> against an array and collecting only the relevant results</p><p>Example:</p><pre><code class="language-javascript">var relevants = DDG.getRelevants({    num:        10, // the first 10 relevant candidates will be returned    candidates: [&#39;is this relevant&#39;, &#39;is this one relevant&#39;, &#39;how about this one&#39;, ... ], //candidate strings    skipArray:  [&#39;a&#39;, &#39;list&#39;, &#39;of&#39;, &#39;words&#39;], //words to ignore in comparison    strict:     false});</code></pre><p>Only the <code>candidates</code> array is required, the other parameters are optional. <code>num</code> defaults to <code>candidates.length</code></p><p><strong>Parameters</strong></p><p><strong>p</strong>:  <em>object</em>,  An object containing an array of candidate strings and other optional parameters to be passed along to <code>DDG.isRelevant</code>, including: <code>num</code> - the maximum amount of results to return, <code>skipArray</code>, <code>minWordLength</code>, and <code>strict</code>	http://duck.co/duckduckhack/spice_js_api#getrelevants(p)
Spice isRelevant(candidate, skipArray, minWordLength, strict)	A										<p>Determines if the candidate string is relevant to <strong>the search query</strong></p><p><strong>Parameters</strong></p><p><strong>candidate</strong>:  <em>string</em>,  The string to be checked for relevancy</p><p><strong>skipArray</strong>:  <em>array</em>,  <strong>[optional]</strong> An array of words (usually the trigger words) that should not be considered in determining the candidate string&#39;s relevancy</p><p><strong>minWordLength</strong>:  <em>number</em>,  <strong>[optional]</strong> The minimum length for any words to be considered in the comparison (used to ignore small words like &quot;to&quot;, &quot;and&quot;, &quot;is&quot;, &quot;a&quot;, etc.), Default: <code>4</code></p><p><strong>strict</strong>:  <em>boolean</em>,  <strong>[optional]</strong> Turns on stricter relevancy checking, by switching candidate and comparator strings, Default: <code>0</code>	http://duck.co/duckduckhack/spice_js_api#isrelevant(candidate,-skiparray,-minwordlength,-strict)
Spice stringsRelevant(s1, s2, skipArray, minWordLength, strict)	A										<p>Determines if the candidate string is relevant to the given comparator string</p><p><strong>Parameters</strong></p><p><strong>s1</strong>:  <em>string</em>,  The string to be checked for relevancy</p><p><strong>s2</strong>:  <em>string</em>,  The string to be compared against</p><p><strong>skipArray</strong>:  <em>array</em>,  <strong>[optional]</strong> An array of words (usually the trigger words) that should not be considered in determining the candidate string&#39;s relevancy</p><p><strong>minWordLength</strong>:  <em>number</em>,  <strong>[optional]</strong> The minimum length for any words to be considered in the comparison (used to ignore small words like &quot;to&quot;, &quot;and&quot;, &quot;is&quot;, &quot;a&quot;, etc.), Default: <code>4</code></p><p><strong>strict</strong>:  <em>boolean</em>,  <strong>[optional]</strong> Turns on stricter relevancy checking, by switching candidate and comparator strings, Default: <code>0</code>	http://duck.co/duckduckhack/spice_js_api#stringsrelevant(s1,-s2,-skiparray,-minwordlength,-strict)
Spice parse_link(string, wanted)	A										<p>Parses a string containing an anchor tag, (&#39;<a href="URL">text</a>&#39;), and returns the URL or textas indicated</p><p>Note: If more than one anchor tag exists in the string, the first will be parsed</p><p>Example:</p><p><code>str = &#39;&lt;a href=&quot;https://mywebsite.com&quot;&gt;Click here!&lt;/a&gt; to see my website.&#39;</code></p><ul><li><code>DDG.parse_link(str)</code> -&gt; <code>&#39;https://mywebsite.com&#39;</code></li><li><code>DDG.parse_link(str, &#39;text&#39;)</code> -&gt; <code>&#39;Click here!&#39;</code></li><li><code>DDG.parse_link(str, &#39;rest&#39;)</code> -&gt; <code>&#39; to see my website.&#39;</code></li></ul><p><strong>Parameters</strong></p><p><strong>string</strong>:  <em>string</em>,  A string containing an anchor tag</p><p><strong>wanted</strong>:  <em>string</em>,  <strong>[optional]</strong> The piece of the link to return Default: <code>&#39;url&#39;</code>	http://duck.co/duckduckhack/spice_js_api#parse_link(string,-wanted)
Spice getDateFromString(date)	A										<p>Provides a JavaScript <code>Date()</code> object for the given Date string</p><p><strong>Parameters</strong></p><p><strong>date</strong>:  <em>string</em>,  Date string in UTC format with time (yyyy-mm-ddThh:mm:ss) or without (yyyy-mm-dd)	http://duck.co/duckduckhack/spice_js_api#getdatefromstring(date)
Spice strip_html(html)	A										<p>Removes HTML tags/characters from a string</p><p><strong>Parameters</strong></p><p><strong>html</strong>:  <em>string</em>,  String containing HTML	http://duck.co/duckduckhack/spice_js_api#strip_html(html)
Spice getOrdinal(number)	A										<p>Provides the proper ordinal noun for a given number</p><p>Example:</p><p><code>DDG.getOrdinal(456)</code> -&gt; <code>&#39;456th&#39;</code></p><p><strong>Parameters</strong></p><p><strong>number</strong>:  <em>number</em>,  The number you need an ordinal for	http://duck.co/duckduckhack/spice_js_api#getordinal(number)
Spice strip_non_alpha(str)	A										<p>Removes Non-Alpha characters (<code>\W</code>) from a string</p><p><strong>Parameters</strong></p><p><strong>str</strong>:  <em>sting</em>,  The input string to strip	http://duck.co/duckduckhack/spice_js_api#strip_non_alpha(str)
Spice capitalize(str)	A										<p>Capitalizes the first letter of the given string</p><p><strong>Parameters</strong></p><p><strong>str</strong>:  <em>string</em>,  String to capitalize	http://duck.co/duckduckhack/spice_js_api#capitalize(str)
Spice capitalizeWords(str)	A										<p>Capitalizes the first letter of each word in the given string</p><p><strong>Parameters</strong></p><p><strong>str</strong>:  <em>string</em>,  String to capitalize	http://duck.co/duckduckhack/spice_js_api#capitalizewords(str)
Spice getProperty(obj, pathname)	A										<p>Provides the member of an object using dot separated path</p><p>It&#39;s best to use this only when the sub elements might not be defined,to avoid complex and awkward expressions.</p><p>Note: Arrays can use the index number since we access objectproperties and array indices in the same way</p><p>Example:</p><p><code>obj = { a: { b: { c: &#39;test&#39;, d: [1,2,3] }}}</code></p><ul><li><code>getProperty(obj, &#39;a.b.c&#39;)</code>     -&gt; <code>&#39;test&#39;</code></li><li><code>getProperty(obj, &#39;a.b&#39;)</code>       -&gt; <code>{ c:&#39;test&#39; }</code></li><li><code>getProperty(obj, &#39;a.b.d.0&#39;)</code>   -&gt; <code>1</code></li></ul><p><strong>Parameters</strong></p><p><strong>obj</strong>:  <em>object</em>,  the object to look through</p><p><strong>pathname</strong>:  <em>string</em>,  the dot separated path of object properties and/or array indices</p><hr><h1><a class="anchor" name="spice-namespace"></a>Spice Namespace	http://duck.co/duckduckhack/spice_js_api#getproperty(obj,-pathname)
Spice add(ops)	A										<p>Add a Spice instant answer to the AnswerBar and display it</p><p>Note: A detailed explanation of <code>Spice.add()</code> can be found in <a href="spice_displaying">Displaying your Spice</a></p><p><strong>Parameters</strong></p><p><strong>ops</strong>:  <em>object</em>,  The object containing all necessary information for creating a Spice instant answer	http://duck.co/duckduckhack/spice_js_api#add(ops)
Spice getDOM(id)	A										<p>Provides a scoped DOM for a given Spice id</p><p>Note: Seeing as we maintain a cache, this is more efficient than using jQuery, i.e. <code>$(&#39;spice_name&#39;)</code></p><p>Example:</p><p><code>var $my_spice = Spice.getDOM(&#39;my_spice&#39;)</code></p><p><strong>Parameters</strong></p><p><strong>id</strong>:  <em>string</em>,  The id of the Spice Instant Answer, should match the <code>id</code> property of the object given to <code>Spice.add()</code></p><p><strong>Returns</strong></p><p><em>object</em>, A jQuery object, matching the selector that targets the given Spice id	http://duck.co/duckduckhack/spice_js_api#getdom(id)
Spice registerHelper(id, fn)	A										<p>Provides access to <code>Handlebars.registerHelper()</code> so you can register helpers for your Spice</p><p><strong>Parameters</strong></p><p><strong>id</strong>:  <em>string</em>,  The name of the helper to register</p><p><strong>fn</strong>:  <em>function</em>,  The function we are registering	http://duck.co/duckduckhack/spice_js_api#registerhelper(id,-fn)
Spice failed(id)	A										<p>Alerts the frontend that a Spice has stopped executing, preventing it from being displayed.</p><p>Note: This is generally used when a Spice API returns no useful results.</p><p>Example:</p><pre><code class="language-javascript">if (/* check for no results */) {    </code></pre><p><strong>Parameters</strong></p><p><strong>id</strong>:  <em>string</em>,  The id of the Spice Instant Answer, should match the <code>id</code> property of the object given to <code>Spice.add()</code></p>								</div>	http://duck.co/duckduckhack/spice_js_api#failed(id)
Spice Overview	A										<p>Spice instant answers are triggered by a backend Perl component that then calls the JSON API of an upstream service. The API response is wrapped in a JavaScript function call. You, the instant answer author, define this callback function and handle the API&#39;s response on the client side, generating the display from the data returned by the API.	http://duck.co/duckduckhack/spice_overview#spice-overview
Spice Frontend	A										<p>The Spice frontend is the code that is triggered by the Perl backend for your spice instant answer. It mainly consists of a function (the Spice &quot;callback&quot; function) that takes a JSON formatted, API response as its input and uses the data to display a Spice result at the top of the DuckDuckGo search results page.	http://duck.co/duckduckhack/spice_overview#spice-frontend
Spice Templates	A										<p>In order to display the result, the Spice callback function needs to specify a template, which will determine how the result looks. There are several built-in templates to choose from and you are able to choose whichever template works best for the given data and desired output.	http://duck.co/duckduckhack/spice_overview#spice-templates
Spice Third-Party Libraries	A										<p>Aside from HTML and CSS, the Spice frontend also utilizes the following third-party libraries:</p><ul><li><a href="https://jquery.org">jQuery</a> v1.10.2</li><li>and <a href="http://handlebarsjs.com">Handlebars</a> v1.3.0</li></ul><p>If you&#39;re not already familiar with Handlebars, <em>please</em> read the <a href="http://handlebarsjs.com">Handlebars documentationn</a> before continuing on. Don&#39;t worry if you don&#39;t fully understand how to use Handlebars, the examples will explain everything. You should, at the very least, familiarize yourself with Handlebars concepts and terminology before moving on. It should only take a few minutes to read!	http://duck.co/duckduckhack/spice_overview#third-party-libraries
Spice Files	A										<p>A typical Spice instant answer requires several files to function properly.- The Perl files go in the <strong>lib</strong> directory: <code>lib/DDG/Spice/InstantAnswerName.pm</code>- The frontend files (JS, Handlebars, CSS) discussed later go in the <strong>share</strong> directory: <code>share/spice/instant_answer_name/</code></p><p><strong>**Note</strong> : The file and folder names must adhere to our naming conventions (covered later) in order for everything to function properly.</p>								</div>	http://duck.co/duckduckhack/spice_overview#spice-files
Spice Overview	A										<p>(This section is coming soon! Know what should go here? Then <strong>please</strong> <a href="https://github.com/duckduckgo/duckduckgo-documentation/blob/master/CONTRIBUTING.md">contribute to the documentation</a>!)	http://duck.co/duckduckhack/spice_styleguide#overview
Spice Formatting	A										<p>(This section is coming soon! Know what should go here? Then <strong>please</strong> <a href="https://github.com/duckduckgo/duckduckgo-documentation/blob/master/CONTRIBUTING.md">contribute to the documentation</a>!)</p><h4><a class="anchor" name="consistent-variable-names"></a>Consistent Variable Names</h4><p>ex. &quot;api_return&quot;</p><h4><a class="anchor" name="spice-header-format"></a>Spice Header Format</h4><p><code>&lt;search term&gt;</code> (<source>)</p><h4><a class="anchor" name="no-bolded-text-in-spice-body"></a>No bolded text in Spice body</h4><p>(This section is coming soon! Know what should go here? Then <strong>please</strong> <a href="https://github.com/duckduckgo/duckduckgo-documentation/blob/master/CONTRIBUTING.md">contribute to the documentation</a>!)</p><h4><a class="anchor" name="no-quotundefinedquot-values-in-spice-body-spice-result-shouldnt-say-something-is-quotnot-definedquot"></a>No &quot;undefined&quot; values in Spice body (Spice result shouldn&#39;t say something is &quot;not defined&quot;)</h4><p>(This section is coming soon! Know what should go here? Then <strong>please</strong> <a href="https://github.com/duckduckgo/duckduckgo-documentation/blob/master/CONTRIBUTING.md">contribute to the documentation</a>!)</p><h4><a class="anchor" name="indent-with-spaces-not-tabs"></a>Indent with spaces (not tabs)</h4><p>(This section is coming soon! Know what should go here? Then <strong>please</strong> <a href="https://github.com/duckduckgo/duckduckgo-documentation/blob/master/CONTRIBUTING.md">contribute to the documentation</a>!)</p><ul><li>Templates should not be modified.	http://duck.co/duckduckhack/spice_styleguide#formatting
Spice Naming Conventions	A										<p>(This section is coming soon! Know what should go here? Then <strong>please</strong> <a href="https://github.com/duckduckgo/duckduckgo-documentation/blob/master/CONTRIBUTING.md">contribute to the documentation</a>!)	http://duck.co/duckduckhack/spice_styleguide#naming-conventions
Spice Do's & Dont's	A										<h3><a class="anchor" name="strongdostrong"></a><strong>Do</strong></h3><h4><a class="anchor" name="proxying-images-amp-audio"></a>Proxying Images &amp; Audio</h4><p>/iu/- Requires a standard image format extension!</p><h3><a class="anchor" name="strongdontstrong"></a><strong>Don&#39;t</strong></h3><h4><a class="anchor" name="add-extra-attribution"></a>Add extra attribution</h4><p>&quot;More at&quot; link should be enough	http://duck.co/duckduckhack/spice_styleguide#do's-&-dont's
Spice Carousel	A										<ul><li>do not modify any aspects of the pagination</li><li>do not modify item rollover styling</li><li>do not modify selected item styling</li></ul>								</div>	http://duck.co/duckduckhack/spice_styleguide#carousel
Spice Template Summary	A										<p>There are several built-in Spice templates (both item and detail) which can be used for any Spice.  For more information see the following pages:</p><ul><li><a href="http://duck.co/duckduckhack/spice_templates_overview#template-groups">Template Groups</a>  Defines the main type of view for the instant answer</li><li><a href="http://duck.co/duckduckhack/spice_templates_overview#builtin-spice-templates">Built-In Spice Templates</a>  Different views and options for each templat</li><li><a href="http://duck.co/duckduckhack/spice_templates_overview#tile-variants">Tile Variants</a>  Used to modify width of the tiles</li></ul><p>There are several built-in Spice templates (both <code>item</code> and <code>detail</code>) which can be used for any Spice. Most of these templates however have similar or related elements and work well together (i.e. pairings of <code>item</code> and <code>detail</code> templates). As a result, we have defined various <strong>template groups</strong> which <strong>we highly recommend you use</strong> because using a particular group tells the Spice system which built-in templates will be used for your Spice. Template groups also have various features enabled by default which you can easily modify using the <code>options</code> block.	http://duck.co/duckduckhack/spice_templates_overview#spice-template-summary
Index of Spice Templates	A										<ul><li><a href="http://duck.co/duckduckhack/spice_templates_overview#template-groups"><strong>Template Groups</strong></a><ul><li><a href="http://duck.co/duckduckhack/spice_templates_overview#default-template-options">Default Template Options</a></li><li><a href="http://duck.co/duckduckhack/spice_templates_overview#text">text</a></li><li><a href="http://duck.co/duckduckhack/spice_templates_overview#info">info</a></li><li><a href="http://duck.co/duckduckhack/spice_templates_overview#products">products</a></li><li><a href="http://duck.co/duckduckhack/spice_templates_overview#media">media</a></li><li><a href="http://duck.co/duckduckhack/spice_templates_overview#icon">icon</a></li><li><a href="http://duck.co/duckduckhack/spice_templates_overview#base">base</a></li></ul></li><li><a href="http://duck.co/duckduckhack/spice_templates_overview#built-in-spice-templates"><strong>Built-In Spice Templates</strong></a><ul><li><a href="http://duck.co/duckduckhack/spice_templates_overview#record">record</a></li><li><a href="http://duck.co/duckduckhack/spice_templates_overview#iconitem">icon_item</a></li><li><a href="http://duck.co/duckduckhack/spice_templates_overview#textitem">text_item</a></li><li><a href="http://duck.co/duckduckhack/spice_templates_overview#textdetail">text_detail</a></li><li><a href="http://duck.co/duckduckhack/spice_templates_overview#basicimageitem">basic_image_item</a></li><li><a href="http://duck.co/duckduckhack/spice_templates_overview#productsitem">products_item</a></li><li><a href="http://duck.co/duckduckhack/spice_templates_overview#productsdetail">products_detail</a></li><li><a href="http://duck.co/duckduckhack/spice_templates_overview#productsitemdetail">products_item_detail</a></li><li><a href="http://duck.co/duckduckhack/spice_templates_overview#basicinfodetail">basic_info_detail</a></li><li><a href="http://duck.co/duckduckhack/spice_templates_overview#baseitem">base_item</a></li><li><a href="http://duck.co/duckduckhack/spice_templates_overview#basedetail">base_detail</a></li></ul></li><li><a href="http://duck.co/duckduckhack/spice_templates_overview#tile-variants"><strong>Tile Variants</strong></a><ul><li><a href="http://duck.co/duckduckhack/spice_templates_overview#poster">poster</a></li><li><a href="http://duck.co/duckduckhack/spice_templates_overview#narrow">narrow</a></li><li><a href="http://duck.co/duckduckhack/spice_templates_overview#wide">wide</a></li><li><a href="http://duck.co/duckduckhack/spice_templates_overview#xwide">xwide</a></li><li><a href="http://duck.co/duckduckhack/spice_templates_overview#video">video</a></li></ul></li></ul><!--[**Detail Variants**](#tile-variants)    - [light](#light)-->	http://duck.co/duckduckhack/spice_templates_overview#index-of-spice-templates
Spice Template Groups	A										<p>There are several template groups to choose from:</p><ul><li><a href="http://duck.co/duckduckhack/spice_templates_overview#text">text</a></li><li><a href="http://duck.co/duckduckhack/spice_templates_overview#info">info</a></li><li><a href="http://duck.co/duckduckhack/spice_templates_overview#products">products</a></li><li><a href="http://duck.co/duckduckhack/spice_templates_overview#media">media</a></li><li><a href="http://duck.co/duckduckhack/spice_templates_overview#icon">icon</a></li><li><a href="http://duck.co/duckduckhack/spice_templates_overview#base">base</a>	http://duck.co/duckduckhack/spice_templates_overview#template-groups
Spice text template group	A										<p>Best used for simple, text-only results. This template offers a title, description and footer.</p><h3><a class="anchor" name="usage"></a>Usage</h3><p><strong>Note:</strong> Before using this template please read the <a href="spice_displaying">Spice Displaying</a> document to understand the proper usage of the <code>templates</code> block and the <code>options</code> block. Understanding these is crucial to using Spice templates properly and effectively.</p><hr><p>Using this template requires that that you set the <code>group</code> property of the <code>templates</code> block like so:</p><pre><code class="language-javascript">templates: {    group: &#39;text&#39;}</code></pre>	http://duck.co/duckduckhack/spice_templates_overview#text-template-group
Spice info template group	A										<p>Best used for results with more detailed information including an image, title, and a description or arbitrary content. This template also allows you to provide an auxiliary information box (to the right) and a &quot;More At&quot; link.</p><h3><a class="anchor" name="usage"></a>Usage</h3><p><strong>Note:</strong> Before using this template please read the <a href="spice_displaying">Spice Displaying</a> document to understand the proper usage of the <code>templates</code> block and the <code>options</code> block. Understanding these is crucial to using Spice templates properly and effectively.</p><hr><p>Using this template requires that that you set the <code>group</code> property of the <code>templates</code> block like so:</p><pre><code class="language-javascript">templates: {    group: &#39;info&#39;}</code></pre>	http://duck.co/duckduckhack/spice_templates_overview#info-template-group
Spice products template group	A										<p>Best used to showcase products with an image, rating, review, brand and/or price. To give you a better idea, this template was initially created for the Amazon Spice. An optional <code>action</code> sub-template can be used to provide a compelling call-to-action (i.e. button).</p><h3><a class="anchor" name="usage"></a>Usage</h3><p><strong>Note:</strong> Before using this template please read the <a href="spice_displaying">Spice Displaying</a> document to understand the proper usage of the <code>templates</code> block and the <code>options</code> block. Understanding these is crucial to using Spice templates properly and effectively.</p><hr><p>Using this template requires that that you set the <code>group</code> property of the <code>templates</code> block like so:</p><pre><code class="language-javascript">templates: {    group: &#39;products&#39;}</code></pre>	http://duck.co/duckduckhack/spice_templates_overview#products-template-group
Spice media template group	A										<p>Best used for simple results that have a picture (essentially a simplified version of the <strong>products</strong> group). This template group provides a basic <code>item</code> template, which includes an image, title, and description. It also uses the same <code>detail</code> template as the <strong>products</strong> group.</p><h3><a class="anchor" name="usage"></a>Usage</h3><p><strong>Note:</strong> Before using this template please read the <a href="spice_displaying">Spice Displaying</a> document to understand the proper usage of the <code>templates</code> block and the <code>options</code> block. Understanding these is crucial to using Spice templates properly and effectively.</p><hr><p>Using this template requires that that you set the <code>group</code> property of the <code>templates</code> block like so:</p><pre><code class="language-javascript">templates: {    group: &#39;media&#39;}</code></pre>	http://duck.co/duckduckhack/spice_templates_overview#media-template-group
Spice icon template group	A										<p>This template is similar to the <strong>text</strong> group, however, it allows the use of a small icon image in the tile view.</p><h3><a class="anchor" name="usage"></a>Usage</h3><p><strong>Note:</strong> Before using this template please read the <a href="spice_displaying">Spice Displaying</a> document to understand the proper usage of the <code>templates</code> block and the <code>options</code> block. Understanding these is crucial to using Spice templates properly and effectively.</p><hr><p>Using this template requires that that you set the <code>group</code> property of the <code>templates</code> block like so:</p><pre><code class="language-javascript">templates: {    group: &#39;icon&#39;}</code></pre>	http://duck.co/duckduckhack/spice_templates_overview#icon-template-group
Spice base template group	A										<p>This is the most rudimentary template group. It provides a minimal container template which is intended to be used when your Spice requires highly customized mark-up. <strong>Using this template should be a last resort if other templates don&#39;t suffice.</strong></p><h3><a class="anchor" name="usage"></a>Usage</h3><p><strong>Note:</strong> Before using this template please read the <a href="spice_displaying">Spice Displaying</a> document to understand the proper usage of the <code>templates</code> block and the <code>options</code> block. Understanding these is crucial to using Spice templates properly and effectively.</p><hr><p>Using this template requires that that you set the <code>group</code> property of the <code>templates</code> block like so:</p><pre><code class="language-javascript">templates: {    group: &#39;base&#39;}</code></pre>	http://duck.co/duckduckhack/spice_templates_overview#base-template-group
Built-In Spice Templates	A										<p>The list of built-in Spice templates includes:</p><ul><li><a href="http://duck.co/duckduckhack/spice_templates_overview#record">record</a></li><li><a href="http://duck.co/duckduckhack/spice_templates_overview#iconitem">icon_item</a></li><li><a href="http://duck.co/duckduckhack/spice_templates_overview#textitem">text_item</a></li><li><a href="http://duck.co/duckduckhack/spice_templates_overview#textdetail">text_detail</a></li><li><a href="http://duck.co/duckduckhack/spice_templates_overview#basicimageitem">basic_image_item</a></li><li><a href="http://duck.co/duckduckhack/spice_templates_overview#productsitem">products_item</a></li><li><a href="http://duck.co/duckduckhack/spice_templates_overview#productsdetail">products_detail</a></li><li><a href="http://duck.co/duckduckhack/spice_templates_overview#productsitemdetail">products_item_detail</a></li><li><a href="http://duck.co/duckduckhack/spice_templates_overview#basicinfodetail">basic_info_detail</a></li><li><a href="http://duck.co/duckduckhack/spice_templates_overview#baseitem">base_item</a></li><li><a href="http://duck.co/duckduckhack/spice_templates_overview#basedetail">base_detail</a></li></ul><hr>	http://duck.co/duckduckhack/spice_templates_overview#built-in-spice-templates
Spice record template	A										<p>A special template that is ideal for key-value data. It generates a <code>&lt;table&gt;</code> where each row contains a key and value.</p><p><strong>**Note:</strong> This template <strong>requires</strong> that your <code>data</code> object has a <code>record_data</code> property, which should contain the key-value data to be displayed. All the properties of the <code>record_data</code> object will be used as the keys for the table. However, if you want to specify exactly which properties of the <code>record_data</code> object should be displayed, an optional <code>record_keys</code> property can be defined. It should be an array of <em>strings</em>, indicating the names of the <strong>keys</strong> to be included in the <code>&lt;table&gt;</code>.  An optional property called <code>rowHighlight</code> can be added to <code>options</code> to turn on alternating row highlighting. 	http://duck.co/duckduckhack/spice_templates_overview#record-template
Spice icon_item template	A										<h3><a class="anchor" name="available-features"></a>Available Features</h3><ul><li>icon</li><li>title</li><li>sub-title [optional]</li><li>description</li><li>footer [optional] <em>sub-template</em></li></ul><h3><a class="anchor" name="template-diagram"></a>Template Diagram</h3><p><img alt="icon template" src="https://raw.githubusercontent.com/duckduckgo/duckduckgo-documentation/master/duckduckhack/assets/diagrams/icon.png">	http://duck.co/duckduckhack/spice_templates_overview#icon_item-template
Spice text_item template	A										<h3><a class="anchor" name="available-features"></a>Available Features</h3><ul><li>url [optional]</li><li>title</li><li>subtitle</li><li>description</li><li>footer [optional] <em>sub-template</em></li></ul><h3><a class="anchor" name="template-diagram"></a>Template Diagram</h3><p><img alt="text_item template " src="https://raw.githubusercontent.com/duckduckgo/duckduckgo-documentation/master/duckduckhack/assets/diagrams/text_item.png">	http://duck.co/duckduckhack/spice_templates_overview#text_item-template
Spice text_detail template	A										<h3><a class="anchor" name="available-features"></a>Available Features</h3><ul><li>title_content [optional] <em>sub-template</em></li><li>title [optional, replaces <code>title_content</code>]</li><li>content [optional] <em>sub-template</em></li></ul><h3><a class="anchor" name="template-diagram"></a>Template Diagram</h3><p><img alt="text_detail template" src="https://raw.githubusercontent.com/duckduckgo/duckduckgo-documentation/master/duckduckhack/assets/diagrams/text_detail.png">	http://duck.co/duckduckhack/spice_templates_overview#text_detail-template
Spice basic_image_item template	A										<h3><a class="anchor" name="available-features"></a>Available Features</h3><ul><li>link [optional]</li><li>image</li><li>title</li><li>description [optional]</li><li>rating [optional]</li><li>ratingText [optional]</li></ul><h3><a class="anchor" name="template-diagram"></a>Template Diagram</h3><p><img alt="basic_image_item template" src="https://raw.githubusercontent.com/duckduckgo/duckduckgo-documentation/master/duckduckhack/assets/diagrams/basic_image_item.png">	http://duck.co/duckduckhack/spice_templates_overview#basic_image_item-template
Spice products_item template	A										<h3><a class="anchor" name="available-features"></a>Available Features</h3><ul><li>url [optional]</li><li>img</li><li>title</li><li>price</li><li>brand [optional]</li><li>rating [optional]</li><li>reviewCount [optional]</li></ul><h3><a class="anchor" name="template-diagram"></a>Template Diagram</h3><p><img alt="products_item template" src="https://raw.githubusercontent.com/duckduckgo/duckduckgo-documentation/master/duckduckhack/assets/diagrams/products_item.png">	http://duck.co/duckduckhack/spice_templates_overview#products_item-template
Spice products_detail template	A										<h3><a class="anchor" name="available-features"></a>Available Features</h3><ul><li>img [optional]</li><li>url</li><li>heading</li><li>price [optional]</li><li>priceAndBrand [optional]</li><li>brand [optional]</li><li>rating [optional]</li><li>reviewCount [optional]</li><li>abstract</li><li>action [optional] <em>sub-template</em></li></ul><h3><a class="anchor" name="template-diagram"></a>Template Diagram</h3><p><img alt="products_detail template" src="https://raw.githubusercontent.com/duckduckgo/duckduckgo-documentation/master/duckduckhack/assets/diagrams/products_detail.png">	http://duck.co/duckduckhack/spice_templates_overview#products_detail-template
Spice products_item_detail template	A										<h3><a class="anchor" name="available-features"></a>Available Features</h3><ul><li>img_m [optional, replaces <code>img</code>]</li><li>img</li><li>url</li><li>price [optional] </li><li>brand [optional]</li><li>rating [optional]</li><li>abstract</li><li>action [optional] <em>sub-template</em></li></ul><h3><a class="anchor" name="template-diagram"></a>Template Diagram</h3><p><img alt="products_item_detail template" src="https://raw.githubusercontent.com/duckduckgo/duckduckgo-documentation/master/duckduckhack/assets/diagrams/products_item_detail.png">	http://duck.co/duckduckhack/spice_templates_overview#products_item_detail-template
Spice basic_info_detail template	A										<h3><a class="anchor" name="available-features"></a>Available Features</h3><ul><li>image [optional]</li><li>title [optional]</li><li>description</li><li>content [optional, replaces <code>description</code>] <em>sub-template</em></li><li>aux [optional] <em>sub-template</em></li></ul><h3><a class="anchor" name="template-diagram"></a>Template Diagram</h3><p><img alt="basic_info_detail template" src="https://raw.githubusercontent.com/duckduckgo/duckduckgo-documentation/master/duckduckhack/assets/diagrams/basic_info_detail.png">	http://duck.co/duckduckhack/spice_templates_overview#basic_info_detail-template
Spice base_item template	A										<h3><a class="anchor" name="available-features"></a>Available Features</h3><ul><li>url [optional]</li><li>content <em>sub-template</em></li></ul><h3><a class="anchor" name="template-diagram"></a>Template Diagram</h3><p><img alt="base_item template" src="https://raw.githubusercontent.com/duckduckgo/duckduckgo-documentation/master/duckduckhack/assets/diagrams/base_item.png">	http://duck.co/duckduckhack/spice_templates_overview#base_item-template
Spice base_detail template	A										<h3><a class="anchor" name="available-features"></a>Available Features</h3><ul><li>content <em>string</em> OR <em>sub-template</em></li></ul><h3><a class="anchor" name="template-diagram"></a>Template Diagram</h3><p><img alt="base_detail template" src="https://raw.githubusercontent.com/duckduckgo/duckduckgo-documentation/master/duckduckhack/assets/diagrams/base_detail.png">	http://duck.co/duckduckhack/spice_templates_overview#base_detail-template
Spice Tile Variants	A										<p>If the default tile dimensions are not perfect for your Spice result, you can choose from one of the following tile variants, each of which offer different dimensions (some wider, some taller):</p><ul><li><a href="http://duck.co/duckduckhack/spice_templates_overview#poster">poster</a></li><li><a href="http://duck.co/duckduckhack/spice_templates_overview#narrow">narrow</a></li><li><a href="http://duck.co/duckduckhack/spice_templates_overview#wide">wide</a></li><li><a href="http://duck.co/duckduckhack/spice_templates_overview#xwide">xwide</a></li><li><a href="http://duck.co/duckduckhack/spice_templates_overview#video">video</a>	http://duck.co/duckduckhack/spice_templates_overview#tile-variants
Spice poster variant	A										<p>Tall and thin, like a movie poster.</p><h3><a class="anchor" name="usage"></a>Usage</h3><pre><code class="language-javascript">templates: {    ...    options: {        ...        variant: &#39;poster&#39;    }}</code></pre>	http://duck.co/duckduckhack/spice_templates_overview#poster-variant
Spice narrow variant	A										<p>Narrower tile width, normal height.</p><h3><a class="anchor" name="usage"></a>Usage</h3><pre><code class="language-javascript">templates: {    ...    options: {        ...        variant: &#39;narrow&#39;    }}</code></pre>	http://duck.co/duckduckhack/spice_templates_overview#narrow-variant
Spice wide variant	A										<p>Increased width, normal height.</p><h3><a class="anchor" name="usage"></a>Usage</h3><pre><code class="language-javascript">templates: {    ...    options: {        ...        variant: &#39;wide&#39;    }}</code></pre>	http://duck.co/duckduckhack/spice_templates_overview#wide-variant
Spice xwide variant	A										<p>Super wide, normal height.</p><h3><a class="anchor" name="usage"></a>Usage</h3><pre><code class="language-javascript">templates: {    ...    options: {        ...        variant: &#39;xwide&#39;    }}</code></pre><h3><a class="anchor" name="examples"></a>Examples</h3><ul><li><a href="https://duckduckgo.com/?q=flight+aa102">&quot;flight aa102&quot;</a>	http://duck.co/duckduckhack/spice_templates_overview#xwide-variant
Spice video variant	A										<p>Shorter height, increased width.	http://duck.co/duckduckhack/spice_templates_overview#video-variant
Spice Testing	A										<p>Testing is crucial to ensuring a smooth integration process.  This section of the documentation walks you through the process of testing everything that you&#39;ve written so far. Don&#39;t forget to write your test files!	http://duck.co/duckduckhack/spice_testing_triggers#testing
Spice Interactive Testing	A										<p>Before reading this section, make sure you&#39;ve worked through the the <a href="goodie_basic_tutorial">Basic Goodie Tutorial</a> or the <a href="spice_basic_tutorial">Basic Spice Tutorial</a>.	http://duck.co/duckduckhack/spice_testing_triggers#interactive-testing
Spice Tests	A										<p>For this example, we will look at the test file of the <strong>Xkcd</strong> Spice, which is <code>t/Xkcd.t</code> <a href="https://github.com/duckduckgo/zeroclickinfo-spice/blob/master/t/Xkcd.t">(link)</a>.	http://duck.co/duckduckhack/spice_tests#spice-tests
Spice Triggers	A										<p>There are two types of triggers, <strong>words</strong> and <strong>regex</strong>. We insist that you use word triggers whenever possible as they are simpler and faster.</p><p><a href="http://duck.co/duckduckhack/spice_triggers#word-triggeres">Word trigger example</a></p><pre><code class="language-perl">triggers start =&gt; &quot;trigger my instant answer&quot;, &quot;trigger myIA&quot;, &quot;myIA&quot;;</code></pre><p><a href="http://duck.co/duckduckhack/spice_triggers#trigger-locations">Trigger locations</a></p><ul><li><code>start</code> — Word exists at the start of the query</li><li><code>end</code> — Word exists at the end of the query</li><li><code>startend</code> — Word is at the beginning or end of the query</li><li><code>any</code> — Word is anywhere in the query	http://duck.co/duckduckhack/spice_triggers#triggers
Spice Word Triggers	A										<h3><a class="anchor" name="usage"></a>Usage</h3><pre><code class="language-perl">triggers &lt;location&gt; =&gt; &lt;array of words and phrases&gt;</code></pre>	http://duck.co/duckduckhack/spice_triggers#word-triggers
Spice Trigger Locations	A										<ul><li><code>start</code> — Word exists at the start of the query</li><li><code>end</code> — Word exists at the end of the query</li><li><code>startend</code> — Word is at the beginning or end of the query</li><li><code>any</code> — Word is anywhere in the query</li></ul><p><strong>**Note:</strong> You can combine several trigger statements if, for example, you want certain words or phrases to be <strong>startend</strong> but others to be <strong>start</strong>. The <a href="https://github.com/duckduckgo/zeroclickinfo-goodies/blob/master/lib/DDG/Goodie/Average.pm#L5">Average Goodie</a> demonstrates the usage of multiple Word trigger statements.	http://duck.co/duckduckhack/spice_triggers#trigger-locations
Spice Regex Triggers	A										<h3><a class="anchor" name="usage"></a>Usage</h3><pre><code class="language-perl">triggers &lt;query_format&gt; =&gt; &lt;regular expression&gt;</code></pre>	http://duck.co/duckduckhack/spice_triggers#regex-triggers
Spice Regex Guards	A										<p>We much prefer you use <strong>trigger words</strong> when possible because they are faster on the backend. In some cases however, <strong>regular expressions</strong> are necessary, e.g. you need to trigger on sub-words. In this case we suggest you consider using a <strong>word trigger</strong> and supplement it with a <strong>regex guard</strong>. A regex guard is a return clause immediately inside the <code>handle</code> function.	http://duck.co/duckduckhack/spice_triggers#regex-guards
DuckDuckHack - Instant Answer Style Guide	A										<ul><li><a href="http://duck.co/duckduckhack/design_styleguide">Design Style Guide</a></li><li><a href="http://duck.co/duckduckhack/code_styleguide">Code Style Guide</a> </li></ul><p>At DuckDuckGo we aim to make our instant answers highly informative and simple to use. This means that only the most relevant information should be included in instant answer results and the user should be able to immediately understand what they are looking at.	http://duck.co/duckduckhack/styleguide_overview#duckduckhack---instant-answer-style-guide
DuckDuckHack Test Files	A										<p>Good test files can help you quickly test code iterations. They also serve as a functional specification for your code. This specification helps everyone quickly understand and verify the expected behavior of the tested code, improving the quality of the feedback you receive and accelerating the review process.	http://duck.co/duckduckhack/test_files#test-files
DuckDuckHack Creating Test Files	A										<p>If you used <code>duckpan new</code> to start your project, a simple test file was automatically created for you. Otherwise, copying the test file from a similar instant answer is an easy way to get started. Either way, you are only a few well-placed edits away from a test file suitable for your instant answer.</p><p>Your test file should have <strong>the same name</strong> as the package it is testing. For example, the code in <code>lib/DDG/Goodie/Fortune.pm</code> is tested by <code>t/Fortune.t</code>.</p><p>The <a href="installing_duckpan">standard <code>duckpan</code> installation</a> includes Goodie and Spice testing libraries (<code>DDG::Test::Goodie</code> and <code>DDG::Test::Spice</code>, respectively.) These libraries make it quick and easy to develop tests for your instant answer.	http://duck.co/duckduckhack/test_files#creating-test-files
DuckDuckHack Running Test Files	A										<p>Tests are run from the root of the repository using the <code>prove</code> command included in your Perl distribution. During development, you can quickly run a single test file to verify your changes:</p><pre><code class="language-shell">prove -Ilib t/TestName.t</code></pre>	http://duck.co/duckduckhack/test_files#running-test-files
DuckDuckHack Testing HTML	A										<p>You should have already tested your triggers by following the <a href="https://github.com/duckduckgo/duckduckgo#testing-triggers">Testing triggers</a> section. Now that you&#39;re confident your triggers are functioning properly, follow these steps to see how it looks on a live server!	http://duck.co/duckduckhack/testing_html#testing-html
DuckDuckHack Testing with the Location API	A										<p>To write a test for a location-aware instant answer, you&#39;ll need to pass the test function an extra parameter - a <code>DDG::Request</code> object, with the location specified. To do this, you&#39;ll need to <code>use DDG::Test::Location</code> and <code>use DDG::Request</code>. Here is a working annotated example excerpted from the <strong>Goodie::HelpLine</strong> test file <code>t/HelpLine.t</code>. The same process should be used for Spice.	http://duck.co/duckduckhack/testing_location_api#testing-with-the-location-api
DuckDuckHack Testing	A										<p>Testing is crucial to ensuring a smooth integration process.  This section of the documentation walks you through the process of testing everything that you&#39;ve written so far. Don&#39;t forget to write your test files!	http://duck.co/duckduckhack/testing_triggers#testing
DuckDuckHack Interactive Testing	A										<p>Before reading this section, make sure you&#39;ve worked through the the <a href="goodie_basic_tutorial">Basic Goodie Tutorial</a> or the <a href="spice_basic_tutorial">Basic Spice Tutorial</a>.	http://duck.co/duckduckhack/testing_triggers#interactive-testing
DuckDuckHack Highlights	A										<ul><li>AnswerBar: Many Instant Answers can display on the page at once.</li><li>Wider: Instant Answers can fill the width of the page in certain cases.</li><li>New views for Instant Answers: Tile view with grid mode, interactive maps, and image view.</li><li>New templates and layouts: Text, Info, Products with variations and feature flags.</li><li>Automated API result relevancy checking and data sorting.</li></ul><p>Most of the changes to instant answers apply only to the <a href="https://github.com/duckduckgo/duckduckgo-documentation/blob/master/duckduckhack/spice/spice_overview.md">Spice</a> instant answer type (external API), but these abilities will be brought soon to the <a href="https://github.com/duckduckgo/duckduckgo-documentation/blob/master/duckduckhack/goodie/goodie_overview.md">Goodies</a> type.	http://duck.co/duckduckhack/whatsnew#highlights
DuckDuckHack AnswerBar	A										<p>The AnswerBar display instant answers in tabs. Because many IAs can load together, they need to play well together now. For example, they can&#39;t arbitrarily name CSS or helper functions as there is a chance of conflict.</p><p><img alt="AnswerBar" src="https://raw.github.com/duckduckgo/duckduckgo-documentation/master/duckduckhack/assets/coffee.png"></p><p>In this example:</p><ul><li>About: Wikipedia or <a href="https://github.com/duckduckgo/duckduckgo-documentation/blob/master/duckduckhack/fathead/fathead_overview.md">Fathead</a> result</li><li>Images and Video results</li><li>Meanings: disambiguation (<em>meanings of &#39;coffee&#39;</em>)</li><li>Recipes: a Spice Instant Answer</li><li>Dictionary Definition: a Spice Instant Answer</li><li>Products: a Spice instant answer</li></ul><p>DuckDuckGo&#39;s internal processes determined the About, Images, Video, and Meanings results.</p><p>The other results, which are Spice IA&#39;s, define their own query space because they provide their own <a href="https://github.com/duckduckgo/duckduckgo-documentation/blob/master/duckduckhack/goodie/spice_triggers.md">triggers</a>. In the above example, Recipes, Dictionary, and Products have already received data from their respective external APIs and have determined that the data is actually relevant to the user&#39;s query.	http://duck.co/duckduckhack/whatsnew#answerbar
DuckDuckHack Answers	A										<p>Instant answers are of two fundamental types: single- and multi-item. Below is a single itemâthe dictionary definition Spice instant answer:</p><p><img alt="Single item, detail view" src="https://raw.github.com/duckduckgo/duckduckgo-documentation/master/duckduckhack/assets/coffee_definition.png"></p><p>This is a single item displayed using the detail template defined by the instant answer.	http://duck.co/duckduckhack/whatsnew#answers
DuckDuckHack Tile View	A										<p>When an Instant Answer has multiple items, they are generally shown in the Tile View. It&#39;s very flexible, supports different tile size variations, grid mode, and provides a detail view for each individual item.</p><p><img alt="Multiple items in a Tile View" src="https://raw.github.com/duckduckgo/duckduckgo-documentation/master/duckduckhack/assets/coffee_recipes.png"></p><p>Each <em>tile</em> is a container that displays an item, which is rendered with a template as defined by the instant answer. The term <em>item</em> refers to the single unit of data as defined by the IAâin these examples, a definition or single recipe is an item.</p><p>The item can also be shown with its detail template:</p><p><img alt="Tile View with Detail" src="https://raw.github.com/duckduckgo/duckduckgo-documentation/master/duckduckhack/assets/coffee_recipes_detail.png">	http://duck.co/duckduckhack/whatsnew#tile-view
DuckDuckHack Templates and Layouts	A										<p>Instant Answers (Spice only, for now) provide templates that allow the AnswerBar to display their data in different contextsâas tiles, as detail, or both. DuckDuckHack provides several built-in types to cover common general cases, with the ability to make substitutions and turn features on and off as desired.</p><p>Templates can be named individually, and they have been organized into named groups for convenience, with default feature options set appropriately. For instance, <code>products_simple</code> is just <code>products</code> with the brand and price turned off; an individual IA could further turn off the rating, or other items to reuse the basic structure. See the InTheaters example below.</p><p>Template groups:</p><ul><li>text: title and description</li><li>icon: text with small inset image</li><li>info: structured expandable text with auxiliary box</li><li>products: product information with icons, rating, and price</li><li>products_simple: less structured variation of products</li><li>map	http://duck.co/duckduckhack/whatsnew#templates-and-layouts
DuckDuckHack Text template group	A										<p>Tiles support title, subtitle, and content and footer sub templates which the IA can provide.</p><p><img alt="github using text group, showing tiles" src="https://raw.github.com/duckduckgo/duckduckgo-documentation/master/duckduckhack/assets/github_duckduckgo.png">	http://duck.co/duckduckhack/whatsnew#text-template-group
DuckDuckHack Icon	A										<p>Similar to text but with an embedded small image in the upper right. Title, description, custom footer template, image.</p><p><img alt="AlternativeTo using the icon template" src="https://raw.github.com/duckduckgo/duckduckgo-documentation/master/duckduckhack/assets/icon_tile.png">	http://duck.co/duckduckhack/whatsnew#icon
DuckDuckHack Info	A										<p>Info is a sophisticated template for showing summary information with an optional image and embedded auxiliary box. Both the text and auxiliary box are expandable, by default showing four lines of text in height. Both the text and the auxiliary box can contain arbitrary content by using an IA-defined template.</p><p><img alt="Last.fm using the info template" src="https://raw.github.com/duckduckgo/duckduckgo-documentation/master/duckduckhack/assets/artist.png">	http://duck.co/duckduckhack/whatsnew#info
DuckDuckHack Products	A										<p>The products template group consists of templates for tiles and detail that are structured for items that can be bought. Rating, brand, and price are a few of the things that we need. There is a second group called <code>products_simple</code> which is similar but with the price and brand turned off by default, and a slightly simpler tile structure.</p><p><img alt="amazon using the products group" src="https://raw.github.com/duckduckgo/duckduckgo-documentation/master/duckduckhack/assets/products_detail.png"></p>	http://duck.co/duckduckhack/whatsnew#products
DuckDuckHack Map	A										<p>IAs can present their data using an interactive map. <a href="https://github.com/duckduckgo/zeroclickinfo-spice/tree/bttf/share/spice/zipcode">Zipcode</a> is a simple example that centers the map on this zip (postal) code.</p><p><img alt="Zipcode using the Map" src="https://raw.github.com/duckduckgo/duckduckgo-documentation/master/duckduckhack/assets/map.png">	http://duck.co/duckduckhack/whatsnew#map
DuckDuckHack Data Mapping with normalize()	A										<p>Because APIs define their data in their own ways, instant answers that use built-in templates must provide a <code>normalize()</code> function that maps data to the field names required by a built-in template. For example, the Yummly API used by Recipes returns an array of images called <code>imageUrlsBySize</code>, so Recipes sets <code>image</code> required by the products template group with one of these.</p>								</div>	http://duck.co/duckduckhack/whatsnew#data-mapping-with-normalize()
